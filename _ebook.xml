<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Scrum Master Certification Guide</title>
<date>2023-05-25</date>
</info>
<chapter xml:id="_chapter_0_getting_started">
<title>Chapter 0: Getting Started</title>
<simpara>I’m going to get you Scrum Certified. I hope you’re ready.</simpara>
<simpara>The process is going to go something like this:</simpara>
<itemizedlist>
<listitem>
<simpara>We&#8217;re going to go through the entire 2020 Scrum Guide together, one line at a time</simpara>
</listitem>
<listitem>
<simpara>Together we&#8217;ll extract as much meaning as possible out of the Scrum Guide’s words</simpara>
</listitem>
<listitem>
<simpara>We&#8217;ll discuss how ideas in the Scrum Guide translate into exam questions</simpara>
</listitem>
<listitem>
<simpara>We&#8217;ll iteratively and incrementally test you on what you’ve learned</simpara>
</listitem>
</itemizedlist>
<simpara>When you’ve finished this book, my goal is for you to be 100% ready to schedule and pass the Scrum Master Certification exam.</simpara>
<section xml:id="_the_best_ways_to_learn">
<title>The Best Ways to Learn</title>
<simpara>Before you read too far ahead, let me recommend that you download and print out a couple of copies of the 2020 Scrum Guide.</simpara>
<simpara>The Scrum Guide is only 13 pages long, and that includes the cover page, introduction and the table of contents. You won&#8217;t be destroying a forest by having a couple of printed copies by your side.</simpara>
<figure>
<title>Try to hit as many learning modalities as you can whenever you learn something new.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/modalities.jpg"/>
</imageobject>
<textobject><phrase>Hit as many learning modalities as you can.</phrase></textobject>
</mediaobject>
</figure>
<simpara>Grab a highlighter as well and markup that printed copy as we go along. It&#8217;ll help you learn.</simpara>
</section>
<section xml:id="_read_the_scrum_guide">
<title>Read the Scrum Guide</title>
<simpara>Along with downloading it, you should also <emphasis>read</emphasis> the Scrum Guide before you dig into the first chapter of this book. In fact, read it a couple of times. It behooves you to do so.</simpara>
<simpara>I&#8217;m actually not a huge fan of the way the Scrum Guide is laid out. I&#8217;m a huge fan of the wisdom it contains. I&#8217;m just not a fan of the way it&#8217;s structured.</simpara>
<figure>
<title>Download and read the official Scrum Guide a few times before reading this book. Read it a few times after reading this book as well. I think you&#8217;ll find the Scrum Guide makes a lot more sense after completing this study guide.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/read-guide.jpg"/>
</imageobject>
<textobject><phrase>Please read the Scrum Guide a few times. It&#8217;s only 13 pages long. </phrase></textobject>
</mediaobject>
</figure>
<simpara>For example, the first paragraph in the Scrum Guide talks about the <emphasis>Product Owner</emphasis> and <emphasis>Product Backlog items.</emphasis> Yet the Scrum Guide itself doesn&#8217;t explain what a Product Owner or a Product Backlog item is for another five or six pages.</simpara>
</section>
<section xml:id="_we_are_bound_by_the_scrum_guide">
<title>We are Bound by the Scrum Guide</title>
<simpara>I don&#8217;t like that. If you&#8217;re going to bring up a topic, you should address it and explain it the first time it&#8217;s mentioned. I don&#8217;t like saying 'this is really, really important, but we&#8217;ll cover that later.' If it&#8217;s important, cover it now.</simpara>
<simpara>Having said that, this certification guide dissects the Scrum Guide, one line at a time, from the beginning to the end. That forces me to follow the layout of the guide, despite the fact that if it was up to me, I would have written it a bit differently.</simpara>
<simpara>So please, read the Scrum Guide a few times before jumping deep into this book. That way you&#8217;ll have a better idea of what phrases like <emphasis>the Sprint Goal</emphasis> and <emphasis>a usable Increment</emphasis> mean.</simpara>
<simpara>With that foundation, we&#8217;ll be able to dig much deeper into the significance of these interesting and important terms. Now let&#8217;s get started with the Scrum Guide!</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</chapter>
<chapter xml:id="_chapter_1_what_is_scrum">
<title>Chapter 1: What is Scrum?</title>
<simpara>How would you define Scrum?</simpara>
<simpara>To be successful on the Scrum Master certification exam you have to commit to the Scrum Guide&#8217;s definition of Scrum, which means abandoning the biases and misconceptions you may have adopted over years of hearing people talk about Scrum or seeing Scrum implemented in a less than pure manner.</simpara>
<simpara>Here&#8217;s the 2020 Scrum Guide&#8217;s first sentence. How well does this definition of Scrum work with the way you previously perceived it? (And I say 'previously', because this is the definition you must 100% commit to right now if you want to pass the Scrum Master certification exam.)</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum is a lightweight framework that helps people, teams and organizations generate value through adaptive solutions for complex problems.</simpara>
</blockquote>
<simpara>Given what you know about Scrum, and taking into account any experiences you&#8217;ve had with Agile development, how would you rate this definition?</simpara>
<figure>
<title>Scrum is a lightweight, incomplete framework that helps teams solve complex problems as they work towards a Product Goal. Scrum advocates downplay the terms 'process' and 'methodology.'</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/lightweightx-00bw.jpg"/>
</imageobject>
<textobject><phrase>Credit MidJourneyAI</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_the_definition_of_scrum">
<title>The Definition of Scrum</title>
<simpara>Whoever crafted that definition tried to make it as general and all-encompassing as possible, almost to the point where the definition doesn&#8217;t provide much value.</simpara>
<itemizedlist>
<listitem>
<simpara>The term 'generate value' is very generic</simpara>
</listitem>
<listitem>
<simpara>The term 'complex problems' could apply to anything</simpara>
</listitem>
<listitem>
<simpara>The term 'adaptive solutions' sounds like marketing gibberish</simpara>
</listitem>
</itemizedlist>
<simpara>But this is the definition we have, and this is the definition you will be tested on.</simpara>
<section xml:id="_the_words_not_spoken">
<title>The Words Not Spoken</title>
<simpara>The Scrum Guide say a lot in its brief 13 pages, but sometimes it&#8217;s more interesting to focus on what the Scrum Guide <emphasis>doesn&#8217;t</emphasis> say. Notice how:</simpara>
<itemizedlist>
<listitem>
<simpara>The official definition of Scrum never mentions software development</simpara>
</listitem>
<listitem>
<simpara>The official definition calls Scrum a <emphasis>framework,</emphasis> not a process or methodology</simpara>
</listitem>
</itemizedlist>
<simpara>Given the official definition of Scrum, how would you answer the following question?</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself">
<title>Test Yourself</title>
<sidebar>
<simpara>Scrum is a proven software development process.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is false. Scrum is not a process, nor does it specifically target software development.</simpara>
<simpara>You&#8217;ll get beaten with a stick if any of the Scrum gatekeepers ever hear you call Scrum a process or a methodology. Scrum is a lightweight, incomplete framework.</simpara>
<itemizedlist>
<listitem>
<simpara>Scrum is not a process.</simpara>
</listitem>
<listitem>
<simpara>Scrum is not a methodology.</simpara>
</listitem>
<listitem>
<simpara>Scrum is purposefully incomplete.</simpara>
</listitem>
</itemizedlist>
<simpara>Scrum doesn&#8217;t try to solve all of your project management problems. It just helps you to get started, to keep going and to minimize risks along the way.</simpara>
<note>
<simpara>While the authors of the Scrum Guide both signed the Agile Manifesto, the word <emphasis>Agile</emphasis> never appears once in the 2020 Scrum Guide.</simpara>
</note>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_scrum_is_a_framework">
<title>Scrum is a Framework</title>
<simpara>Feel free to debate whether you believe Scrum is a process or a methodology on Twitter or in your favorite online forum. I know I have. On the Scrum Certification exam? Scrum is a framework.</simpara>
<simpara>The stewards of the Scrum framework have also worked hard to position Scrum as a tool that can be applied in a variety of industries, not just software development.</simpara>
<simpara>If you ever see an option on the certification exam that asserts Scrum works exclusively in the domain of software development, avoid it, because it&#8217;s wrong.</simpara>
<simpara><?asciidoc-hr?></simpara>
<section xml:id="_test_yourself_2">
<title>Test Yourself</title>
<simpara>Here&#8217;s the type of trick question you&#8217;ll see on the Scrum certification exam that attempts to trip you up on the incorrectly held belief that Scrum is only used in software development:</simpara>
<sidebar>
<simpara>Scrum is a lightweight framework used exclusively by software development teams to generate value through adaptive solutions to complex problems.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is false because the question implies that Scrum is only applicable in the world of software development.</simpara>
<simpara>There is a big push in the Scrum community to gain acceptance outside of software development. Any certification questions that pigeonhole Scrum into a software development box will be wrong.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_3">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following statements most accurately reflects the definition of Scrum?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Scrum is a software development methodology</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Scrum is an Agile process for teams and organizations to follow</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Scrum is a lightweight framework to help teams tackle complex problems</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Scrum is a lightweight framework to help teams and organizations build software</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Guide describes Scrum as a "lightweight framework that helps people, teams, and organizations generate value through adaptive solutions for complex problems." Any references to Scrum being a methodology, a process, or a framework that only targets software development will always be a wrong answer on the Scrum Certification exam.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-incomplete.jpg"/>
</imageobject>
<textobject><phrase>Scrum is an incomplete framework.</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
</section>
<section xml:id="_iterative_and_incremental">
<title>Iterative and Incremental</title>
<simpara>According to the Scrum Guide, here&#8217;s a high-level overview of how Scrum is supposed to work.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>In a nutshell, Scrum requires a Scrum Master to foster an environment where:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>A Product Owner orders the work for a complex problem into a Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Team turns a selection of the work into an Increment of value during a Sprint.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Team and its stakeholders inspect the results and adjust for the next Sprint.</simpara>
</listitem>
<listitem>
<simpara>Repeat</simpara>
</listitem>
</orderedlist>
</blockquote>
</section>
<section xml:id="_whats_in_a_name">
<title>What&#8217;s in a name?</title>
<simpara>The name 'Scrum Master' sounds intimidating.</simpara>
<simpara>People think that since the term 'master' is in the name, the Scrum Master controls everything.</simpara>
<simpara>The Scrum Master controls very little.</simpara>
<simpara>The Scrum Master&#8217;s only real job is to coach people on how Scrum works, or as this paragraph states, 'foster an environment' where this iterative set of steps is performed.</simpara>
</section>
<section xml:id="_scrum_is_simple">
<title>Scrum is Simple</title>
<simpara>People tend to overthink Scrum.</simpara>
<simpara>People think there are a bunch of rules they have to follow if they want to use Scrum. The fact is, there are very few rules in Scrum. The brevity of the Scrum Guide is proof of that.</simpara>
<simpara>Scrum is pretty simple, and when problems arise, it&#8217;s pretty pragmatic too.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum is simple.</simpara>
<simpara>Try it as is and determine if its philosophy, theory, and structure help to achieve goals and create value.</simpara>
<simpara>The Scrum framework is purposefully incomplete, only defining the parts required to implement Scrum theory.</simpara>
<simpara>Scrum is built upon the collective intelligence of the people using it.</simpara>
<simpara>Rather than provide people with detailed instructions, the rules of Scrum guide their relationships and interactions.</simpara>
</blockquote>
<section xml:id="_test_yourself_4">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following statements are true about the Scrum framework?<?asciidoc-br?>
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Scrum describes an iterative process</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Scrum is an iterative framework</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Scrum generates value by repeatedly delivering usable increments to the stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Scrum only allows stakeholders to inspect progress when the final product is delivered</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and C are correct.</simpara>
<simpara>Scrum describes a set of steps that are to be repeated again and again. That makes Scrum <emphasis>iterative.</emphasis> But Scrum&#8217;s an iterative <emphasis>framework</emphasis>, not an iterative <emphasis>process</emphasis>. So Option B is correct while Option A isn&#8217;t.</simpara>
<simpara>Scrum is also an incremental framework, which means it constantly tries to deliver something tangible and of value to the client at the end of every sprint. That way the stakeholders can regularly give feedback. If there&#8217;s an issue, the Scrum Team can then adapt.</simpara>
<simpara>That&#8217;s in stark contrast to what is known as the Waterfall model where the client gets a complete product at the end of a long development cycle. So Option C is correct while Option D is wrong.</simpara>
</section>
</section>
<section xml:id="_its_a_guide_its_not_an_instruction_manual">
<title>It&#8217;s a Guide. It&#8217;s not an Instruction Manual</title>
<simpara>People often look to the Scrum Guide for definitive answers to things. The Scrum Guide doesn&#8217;t contain many definitive answers.</simpara>
<simpara>It&#8217;s a guide, not a rulebook.</simpara>
<simpara>The Scrum Guide even promises <emphasis>not</emphasis> to be heavy on rules, saying that it promises <emphasis>not</emphasis> to 'provide people with detailed instructions.'</simpara>
<simpara>There are very few actual rules in the 13-page Scrum Guide. Outside of the few rules Scrum does have, the framework encourages people to discover strategies that work best for them.</simpara>
<tip>
<simpara>It often helps to think about certification exam questions outside of the domain of software development. Reframe an exam question in terms of an isolated team building a shelter on a deserted island and answers may become more clear.</simpara>
</tip>
<section xml:id="_test_yourself_5">
<title>Test Yourself</title>
<sidebar>
<simpara>Scrum is a complete and proven framework that helps teams achieve goals and create value.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false. Scrum self-identifies as a <emphasis>purposefully incomplete</emphasis> framework.</simpara>
<simpara>This fact seems counter-intuitive to many. After all:</simpara>
<itemizedlist>
<listitem>
<simpara>Why would anyone want to use an incomplete framework?</simpara>
</listitem>
<listitem>
<simpara>Wouldn&#8217;t a complete framework be better?</simpara>
</listitem>
</itemizedlist>
<simpara>The incomplete nature of Scrum is actually what makes it so attractive. Scrum provides only enough direction to be useful, but not so much direction that it is restrictive. Scrum teams are given all the leeway they need to find the processes and frameworks that work best for them.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_exposing_efficacy">
<title>Exposing Efficacy</title>
<simpara>One of the funny things about Scrum is that because it&#8217;s so simple, it can expose practices and processes that are wasteful and non-productive. It also allows developers to focus on the practices that make them most productive.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Various processes, techniques, and methods can be employed within the framework.</simpara>
<simpara>Scrum wraps around existing practices or renders them unnecessary.</simpara>
<simpara>Scrum makes visible the relative efficacy of current management, environment, and work techniques so that improvements can be made.</simpara>
</blockquote>
<simpara>Since Scrum is a framework, not a process, other processes can be used within it.</simpara>
</section>
<section xml:id="_combine_the_scrum_framework_with_other_processes">
<title>Combine the Scrum Framework with other Processes</title>
<simpara>For example, people often think Kanban is a competitor to Scrum, but there is nothing that says Scrum and Kanban can&#8217;t be used together.</simpara>
<simpara>If you&#8217;re not familiar with Kanban, don&#8217;t worry. Kanban is never mentioned in the Scrum Guide, and for the Scrum Master certification exam, all you need to know is that it&#8217;s an alternate development strategy.</simpara>
<section xml:id="_test_yourself_6">
<title>Test Yourself</title>
<sidebar>
<simpara>Scrum can be used alongside various processes and methodologies including Kanban and Lean.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is true.</simpara>
<simpara>Scrum is not a process nor is it a methodology, and because of that, it can be used in conjunction with a variety of popular methodologies like Kanban and Lean.</simpara>
<simpara>The Scrum Certification Exam will not test you on the intricacies of Lean Manufacturing or Kanban. It&#8217;s sufficient just to know that these are two processes commonly used in manufacturing and software development.</simpara>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>Waterfall gets its name from the fact that isolated development phases like planning and design flow into each other, in only one direction, just like water in a waterfall.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_7">
<title>Test Yourself</title>
<sidebar>
<simpara>When implemented properly, Scrum has the capacity to expose ineffective management.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is true.</simpara>
<simpara>The iterative and incremental nature of Scrum, where constant inspection and adaptation is encouraged, will shine a light on ineffective practices that happen external to the Scrum Team.</simpara>
<simpara>That&#8217;s what the Scrum Guide means when it says "Scrum makes visible the relative efficacy of current management, environment, and work techniques so that improvements can be made."</simpara>
<simpara>And with that question answered, we&#8217;re done with the definition of Scrum.</simpara>
<simpara>Now on to a little overview of what Scrum theory is and what it&#8217;s based on.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_2_scrum_theory">
<title>Chapter 2: Scrum Theory</title>
<simpara>Scrum boasts of being built around the concepts of 'empiricism and lean thinking.'</simpara>
<simpara>The subject of 'Empiricism' is one of the 13 groups into which questions on the Scrum Master certification exam are categorized, so pay special attention to the concept.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum is founded on empiricism and lean thinking.</simpara>
<simpara>Empiricism asserts that knowledge comes from experience and making decisions based on what is observed.</simpara>
<simpara>Lean thinking reduces waste and focuses on the essentials.</simpara>
</blockquote>
<simpara>I&#8217;m not a big fan of the word empiricism.</simpara>
<simpara>Fundamentally, empiricism means using your five senses to understand the situation you&#8217;re in. I&#8217;m not sure how my sense of smell or taste helps me as a Scrum Master.</simpara>
<simpara>In the context of Scrum, empiricism means understanding the situation you are in based on knowledge, experience, and verifiable facts.</simpara>
<simpara>Empiricism also ties in tightly with the Scrum Pillars of transparency, inspection, and adaptation. That is, if you can see exactly what is happening (transparency), you can honestly assess your progress (inspection) and based on this real knowledge, you can adapt.</simpara>
<simpara>Empirical analysis of your current situation is a more effective way to make decisions than following a plan written up six months ago, or making decisions based on trendlines on a historical chart.</simpara>
<section xml:id="_empirical_example">
<title>Empirical Example</title>
<simpara>Here&#8217;s an example of the application of empiricism.</simpara>
<simpara>Imagine you have a burndown chart that says you are completing 10 items Sprint. How many items do you think you&#8217;ll complete in the next Sprint?</simpara>
<simpara>You&#8217;d probably say 10, but that&#8217;s an answer based on a chart.</simpara>
<simpara>Charts don&#8217;t have five senses. Charts may be predictive, but they&#8217;re not empirical.</simpara>
<simpara>Now, say you know half the developers have taken time-off to be with their families during the next Sprint?</simpara>
<simpara>You&#8217;ll probably reduce your projection by 50 percent. That decision is based on empirical evidence that a chart simply couldn&#8217;t provide.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_lean_thinking">
<title>Lean Thinking</title>
<simpara>Lean thinking is also an important concept in Scrum.</simpara>
<simpara>The idea of lean thinking comes from productivity enhancements Toyota discovered in the 1950s and 60s. Obviously Toyota was building cars, but the lessons of lean thinking are universal to all product development domains.</simpara>
<simpara>Key concepts of lean manufacturing that manifest themselves in the Scrum framework include:</simpara>
<itemizedlist>
<listitem>
<simpara>The idea that all unnecessary steps in a process should be eliminated</simpara>
</listitem>
<listitem>
<simpara>The belief that all work should be tied tightly to a specific outcome or goal</simpara>
</listitem>
<listitem>
<simpara>The insistence that products should not be over-engineered with unnecessary features</simpara>
</listitem>
<listitem>
<simpara>The need for a direct connection with the customer or stakeholder</simpara>
</listitem>
<listitem>
<simpara>The insistence that teams have strong leaders whose priority is to serve their team</simpara>
</listitem>
<listitem>
<simpara>The desire for workers not to be left idle during the production process</simpara>
</listitem>
<listitem>
<simpara>The fact that improvements should be made in accordance with empirical observations</simpara>
</listitem>
</itemizedlist>
<simpara>Just looking at this list you can see how:</simpara>
<itemizedlist>
<listitem>
<simpara>The Scrum Master role maps to the lean demand that teams have strong leaders</simpara>
</listitem>
<listitem>
<simpara>The Sprint and Product Goals map to the idea that work should be tied to a specific outcome</simpara>
</listitem>
<listitem>
<simpara>Scrum&#8217;s Sprint Review embraces the ideas of maintaining a tight connection with the stakeholder</simpara>
</listitem>
</itemizedlist>
<simpara>Avoid waste and embrace minimalist thinking when you&#8217;re working on a Scrum project. That&#8217;s <emphasis>lean thinking.</emphasis></simpara>
</section>
<section xml:id="_empiricism_and_lean_thinking">
<title>Empiricism and Lean Thinking</title>
<simpara>You are guaranteed to get five or six questions from this section on the Scrum Master certification exam. They are easy marks if you just understand what 'empiricism' and 'lean thinking' means.</simpara>
<section xml:id="_test_yourself_8">
<title>Test Yourself</title>
<sidebar>
<simpara>Scrum theory emphasizes empiricism. That means a decision made by Scrum teams:<?asciidoc-br?>
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Should be based on factual evidence</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Should be based on intelligent assumptions</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Should be based on verifiable observations</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Should be driven by pragmatic speculation</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Should be based on experience</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A, C, and E are correct.</simpara>
<simpara>Empiricism is all about using your experience, your gained knowledge, and verifiable observations (which is sorta the same as 'experience') to make decisions.</simpara>
<simpara>Concepts like 'speculation' and 'assumptions' run counter to the concept of empiricism, even if the speculation and assumptions are pragmatic and intelligent.</simpara>
<blockquote>
<attribution>
TechTarget WhatIs Definition
<citetitle>Empiricism</citetitle>
</attribution>
<simpara>"In empiricism, knowledge is spoken of as a posteriori, or "from the latter," meaning gained from experience. Simply put, empiricism is the idea that all learning comes from only experience and observations.</simpara>
<simpara>The term empiricism comes from the Greek word for experience: empeiria. The theory of empiricism attempts to explain how human beings acquire knowledge and improve their conceptual understanding of the world."</simpara>
</blockquote>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_9">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following are characteristics of lean thinking?<?asciidoc-br?>
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) A focus on waste reduction and efficiency</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) A command and control approach to problem-solving</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) A minimalist approach that removes unnecessary steps</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) A methodology made up of individualized, compartmental steps that flow into each other.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>In this case, A and C are correct.</simpara>
<simpara>Efficiency, waste reduction, and the elimination of unnecessary steps within a process are all hallmarks of lean thinking.</simpara>
<simpara>The old Scrum Guide use to talk about the importance of <emphasis>servant leadership.</emphasis> That&#8217;s still important, but it&#8217;s been rephrased in the 2020 Scrum Guide. Now we talk about 'leaders who serve.'</simpara>
<simpara>The 'Command and Control' approach that the military takes is the opposite of 'servant leadership,' so option B is incorrect.</simpara>
<simpara>The last option describes the Waterfall methodology, which is the antithesis of the Scrum framework.</simpara>
<simpara>Empiricism and lean thinking lay the foundation for the Scrum Framework. Be comfortable with these two terms and understand their basic meaning to score a few easy marks on the Scrum Master certification exam.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/bet-the-habs.jpg"/>
</imageobject>
<textobject><phrase>There are many learning modalities. </phrase></textobject>
</mediaobject>
</informalfigure>
</section>
</section>
<section xml:id="_predictability_and_risk">
<title>Predictability and Risk</title>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum employs an iterative, incremental approach to optimize predictability and control risk.</simpara>
</blockquote>
<simpara>This one sentence is a lot to unpack.</simpara>
<simpara>Scrum is iterative because it describes a set of steps that get repeated over and over again. The iterative sequence of steps as outlined in the first section of the Scrum Guide are:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>A Product Owner orders the work for a complex problem into a Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Team turns a selection of the work into an Increment of value during a Sprint.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Team and its stakeholders inspect the results and adjust for the next Sprint.</simpara>
</listitem>
<listitem>
<simpara>Repeat</simpara>
</listitem>
</orderedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_the_incremental_nature_of_scrum">
<title>The Incremental Nature of Scrum</title>
<simpara>Scrum is incremental. That&#8217;s referenced in the second step of the iterative process:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>"The Scrum Team turns a selection of the work into an Increment of value during a Sprint."</simpara>
</blockquote>
<simpara>The idea of Scrum being incremental means that small victories, small units of value, and small pieces of the final product get created and added together slowly over time until the product is finally finished.</simpara>
<simpara>Piece by piece, through the delivery of value added upon value, the product gets built. That&#8217;s the incremental process.</simpara>
<simpara>By getting these small increments into the hands of stakeholders, and getting immediate feedback from which the Scrum Team can adapt, Scrum reduces risk and allows developers to better service the needs of their clients.</simpara>
</section>
<section xml:id="_cross_functional_teams">
<title>Cross-Functional Teams</title>
<simpara>The idea that teams should be cross-functional and self-managed is a key concept in Scrum, and it&#8217;s one that you&#8217;ll be tested on multiple times when you sit for the Scrum Certification exam.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum engages groups of people who collectively have all the skills and expertise to do the work and share or acquire such skills as needed.</simpara>
</blockquote>
<simpara>This is another extremely loaded statement. Understanding this paragraph will go a long way towards properly answering some of the most challenging questions on the Scrum Master certification exam.</simpara>
<simpara>Scrum assumes that the Scrum Team has all the skills required to build the product being developed.</simpara>
<itemizedlist>
<listitem>
<simpara>Does your project need testers? Then those people are on the Scrum team.</simpara>
</listitem>
<listitem>
<simpara>Does your project need someone to document the product? That person is on the Scrum team.</simpara>
</listitem>
<listitem>
<simpara>Does your project need an architect? That person is on the Scrum team.</simpara>
</listitem>
<listitem>
<simpara>Does your project need people to do quality assurance(QA)? Then those QA people are developers on the Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>Does your project need a performance or security specialist? Then a person with those skills must be on the Scrum team.</simpara>
</listitem>
</itemizedlist>
<simpara>And what if your Scrum team doesn&#8217;t have those skills? Then your team acquires them.</simpara>
<tip>
<simpara>The word <emphasis>empiric</emphasis> is Latin meaning 'based on observations formed during medical treatments.' The <emphasis>piric</emphasis> part of <emphasis>empiric</emphasis> is Latin for 'trial or test.'</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_10">
<title>Test Yourself</title>
<sidebar>
<simpara>One of the items under development as part of your project is a spaceship to Mars, but nobody on your team knows how to build a spaceship to Mars.</simpara>
<simpara>Which one of the following options is the best way for the team to move forward?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Outsource the development of a spaceship to a third party</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Remove the development of a spaceship from the project&#8217;s requirements</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Explain to the Product Owner that you don&#8217;t have the skills to build a spaceship to Mars</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Get the team to start learning about how to build a spaceship to Mars</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct, and yes, this question is silly to the extreme, but it makes an important point.</simpara>
<simpara>According to Scrum, all of the skills required to build a project under development exist on your team, or your team will take it upon themselves to acquire the skills needed. If your team outsources work to a third party, then the work in question is no longer within the control of the team, which means it&#8217;s no longer part of the Scrum process.</simpara>
<simpara>That&#8217;s what the Scrum Guide means when it says "Scrum engages groups of people who collectively have all the skills and expertise to do the work and share or acquire such skills as needed."</simpara>
</section>
<section xml:id="_the_all_encompassing_sprint">
<title>The All-Encompassing Sprint</title>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum combines four formal events for inspection and adaptation within a containing event, the Sprint.</simpara>
</blockquote>
<simpara>This statement is the source of the most commonly asked trick questions on the Scrum Certification exam, which are:</simpara>
<itemizedlist>
<listitem>
<simpara>Which events happen after the Sprint finishes?</simpara>
</listitem>
<listitem>
<simpara>Which events happen before a Sprint begins?</simpara>
</listitem>
<listitem>
<simpara>When a Sprint ends, when does the next Sprint begin?</simpara>
</listitem>
</itemizedlist>
<simpara>Scrum has four time-boxed events that happen within a fifth Scrum event known as a Sprint. Sprint Planning, the Daily Scrum, the Sprint Review, and the Sprint Retrospective all happen within the confines of a Sprint.</simpara>
<itemizedlist>
<listitem>
<simpara>None of the Scrum events happen after a Sprint</simpara>
</listitem>
<listitem>
<simpara>None of the Scrum events happen before a Sprint.</simpara>
</listitem>
<listitem>
<simpara>None of the Scrum events can be left out of a Sprint.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="_moving_from_sprint_to_sprint">
<title>Moving from Sprint to Sprint</title>
<simpara>Everything in Scrum happens within the boundaries of a Sprint. As soon as one Sprint ends, the next Sprint begins.</simpara>
<simpara>There is no buffer time between when one Sprint ends and the next Sprint starts where integration takes place, quality assurance happens or testing is done. If any of those things are part of the development of your product, all of those things have to happen during the Sprint.</simpara>
<simpara>Don&#8217;t get tripped up on any questions that ask what happens before or after a Sprint.</simpara>
<figure>
<title>The four timeboxed events in Scrum all occur inside a fifth event known as the Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/timebox-bw.jpg"/>
</imageobject>
<textobject><phrase>All Scrum events occur within a Sprint. </phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_inspection_and_adaption">
<title>Inspection and Adaption</title>
<simpara>Notice how the Scrum Guide states that the higher purpose of the different Scrum Events, such as the Review, Retrospective, Planning meeting, and the Daily Scrum is to 'inspect and adapt.'</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum combines four formal events for inspection and adaptation within a containing event, the Sprint.</simpara>
</blockquote>
<simpara><?asciidoc-pagebreak?></simpara>
<simpara>You will often get questions on the Scrum certification exam about what the purpose of the Sprint Retrospective is or what the purpose of the Daily Scrum is. If any of the listed options include the terms 'inspect' or 'adapt', those will likely be the correct answers.</simpara>
</section>
<section xml:id="_test_yourself_11">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following options best describes when a new Sprint begins?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) A new Sprint begins when Sprint Planning is completed</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) A new Sprint begins when the Sprint Review is completed</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) A new Sprint begins when the Product Owner begins the Sprint in JIRA</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) A new Sprint begins after Sprint Planning when the Scrum Master declares the start of the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) A new Sprint begins as soon as the previous Sprint ends</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option E is correct. A new Sprint begins as soon as the previous Sprint ends.</simpara>
<simpara>Technically speaking, the last event in the Sprint is the Sprint Retrospective, and the end of this event officially marks the end of the Sprint.</simpara>
<simpara>If we were to temporarily jump ahead 7 pages in the Scrum Guide, we&#8217;d see that stated in plain text.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Sprint Retrospective concludes the Sprint.</simpara>
</blockquote>
</section>
<section xml:id="_test_yourself_12">
<title>Test Yourself</title>
<sidebar>
<simpara>What is the purpose of the Daily Scrum?<?asciidoc-br?>
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) For the Scrum Master to get daily status updates from the developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) To allow the developers to inspect their progress toward the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) For the Product Owner to track the development team&#8217;s progress on Product Backlog items</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) To allow the developers to adapt their Sprint Plan as they work towards the Sprint Goal</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and D are correct.</simpara>
<simpara>From day to day and hour to hour, conditions change.</simpara>
<simpara>Scrum recognizes this reality, which is why it provides several events that allow for the inspection of progress along with the ability to adapt if necessary.</simpara>
<simpara>It should be noted that inspection and adaptation can happen at any time during the Sprint, not just during the official Scrum events.</simpara>
<simpara>If a computer hosting the Git repo catches fire, you don&#8217;t wait until tomorrow&#8217;s Daily Scrum to put it out, nor would you wait to tell the rest of the team about it.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_a_word_about_being_lean">
<title>A Word About Being Lean</title>
<simpara>One of the early reviewers of this book pointed out that while I go deeply into the topic of empiricism in this chapter, my coverage of lean is, well, <emphasis>lean</emphasis>.</simpara>
<simpara>There&#8217;s a reason for that.</simpara>
<simpara>The fact is, on the Scrum Master certification, <emphasis>empiricism</emphasis> is one of the 13 categories in which questions are categorized. You can expect 5 or 6 exam questions that hit the topic of empiricism in several different ways. You won&#8217;t see many exam questions on lean manufacturing, and the ones you will see will look like this:</simpara>
<section xml:id="_test_yourself_13">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following concepts are consistent with a lean approach to product development?<?asciidoc-br?>
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The elimination of unnecessary steps in a process</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Isolated development phases that flow into each other</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The removal of unnecessary features in a product</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Significant up-front planning and design</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The elimination of idle time where developers are not working</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A, C and are E are correct.</simpara>
<simpara>These three options are core concepts learned from <emphasis>lean manufacturing.</emphasis></simpara>
<simpara>Options B and D represent the waterfall model, which is the antithesis of Scrum and lean.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_lean_learning_with_a_focus_on_scrum_master_certification">
<title>Lean Learning with a Focus on Scrum Master Certification</title>
<simpara>There are many topics I <emphasis>could</emphasis> go in depth on in this book, but my preference is to keep you focused on what the test covers, not simply what I find interesting. That&#8217;s why I don&#8217;t go too heavy into the topic of lean thinking.</simpara>
<simpara>That&#8217;s also why you&#8217;ll often find me repeating myself about certain topics throughout the book. For example:</simpara>
<itemizedlist>
<listitem>
<simpara>I will annoyingly repeat myself about the time allotted to the various Scrum events.</simpara>
</listitem>
<listitem>
<simpara>I constantly emphasize that you don&#8217;t have to wait for a Scrum event to change your plan.</simpara>
</listitem>
<listitem>
<simpara>Scrum is a framework, it&#8217;s not a process or a methodology.</simpara>
</listitem>
<listitem>
<simpara>Scrum is not just for software development but for the development of <emphasis>any product</emphasis>.</simpara>
</listitem>
</itemizedlist>
<figure>
<title>With lean thinking and focus, we&#8217;re going to get you past the Scrum Master certification finish line. (Image: Joshbdork, GFDL1.2)</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/finish-line.jpg"/>
</imageobject>
<textobject><phrase>Scrum Master certification finish line. Credit: Joshbdork at the English Wikipedia</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_forget_everything_you_think_you_know">
<title>Forget Everything You Think You Know</title>
<simpara>Part of passing the Scrum Master certification exam is to first forget everything you <emphasis>think</emphasis> you know about Scrum, and then focus on the core concepts contained within the Scrum Guide.</simpara>
<simpara>That&#8217;s why you won&#8217;t hear me talking about the <emphasis>Agile Manifesto</emphasis> or discussing <emphasis>story points</emphasis> in this book. Other Scrum Master certification books invest a lot of time in those topics, but I think that does you a disservice.</simpara>
<simpara>The Scrum Guide never once mentions the word <emphasis>Agile</emphasis> and it never talks about <emphasis>user stories</emphasis> or <emphasis>story points.</emphasis> Furthermore, the Scrum Master exam never tests you on these concepts, and whenever a potential answer references a <emphasis>user story</emphasis> or a <emphasis>story point</emphasis>, those answers will be red herrings trying to trip you up and get you to select an incorrect option.</simpara>
<simpara>My goal is to get you Scrum Master certified. A <emphasis>lean approach</emphasis> to doing so is to not waste your time discussing peripheral topics that will distract and confuse you.</simpara>
<note>
<simpara>A <emphasis>red herring</emphasis> is something that misleads or distracts. The term comes from a story where a strong-smelling fish was used to distract dogs chasing a lovable rabbit.</simpara>
</note>
<simpara>One of the Scrum values is focus.</simpara>
<simpara>Imma try my very best to keep you focused, not waste your time on topics that aren&#8217;t heavily tested on the exam, and at the same time, constantly re-inforce topics that I know will be tested heavily.</simpara>
<simpara>That&#8217;s how we&#8217;re going to get you past the Scrum Master certification finish line!</simpara>
</section>
</chapter>
<chapter xml:id="_chapter_3_scrum_pillars_and_values">
<title>Chapter 3: Scrum Pillars and Values</title>
<simpara>'Scrum values' is one of the 13 categories upon which the Scrum Master certification exam is graded. The 'Scrum Pillars' don&#8217;t constitute a specific category, but they frequently weave their way into answers about why a given event is taking place, or why a given Scrum artifact is important.</simpara>
<simpara>Memorize the values and pay close attention to the pillars. They are key to passing the Scrum Master certification exam.</simpara>
<figure>
<title>The Scrum pillars and values justify the need for the various Scrum events.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-values-medall.jpg"/>
</imageobject>
<textobject><phrase>The five Scrum values are: commitment, focus, openness, courage and respect.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_the_scrum_pillars">
<title>The Scrum Pillars</title>
<simpara>We&#8217;ve already seen references to two of the Scrum Pillars in our discussion of the Scrum Guide:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>Scrum combines four formal events for inspection and adaptation within a contained event, the Sprint.</simpara>
</blockquote>
<simpara>Here&#8217;s the Scrum Guide&#8217;s formal declaration of the three of them:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>These events work because they implement the empirical Scrum pillars of transparency, inspection, and adaptation.</simpara>
</blockquote>
<simpara>It can&#8217;t be emphasized enough. The three pillars of Scrum are:</simpara>
<itemizedlist>
<listitem>
<simpara>Transparency</simpara>
</listitem>
<listitem>
<simpara>Inspection</simpara>
</listitem>
<listitem>
<simpara>Adaptation</simpara>
</listitem>
</itemizedlist>
<simpara>Everything that happens in Scrum harks back to the values and pillars. The question as to why a particular event happens or why a particular artifact is required typically refers back to the Scrum pillars, with the Scrum values providing further support.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_scrum_values">
<title>Scrum Values</title>
<simpara>The five Scrum values that support the Scrum Pillars are:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Commitment:</emphasis> The idea that a Scrum Team is made up of conscientious and motivated developers who are dedicated to achieving the Product Goal.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Focus:</emphasis> The idea that the Scrum Team concentrates on the work at hand and doesn&#8217;t plan too far into the future.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Openness:</emphasis> The idea that developers work in a psychologically safe space where people can voice their opinion and share ideas without fear of reprisal.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Respect:</emphasis> The idea that you will treat people with dignity and compassion, with others doing the same in turn.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Courage:</emphasis> The idea that a member of the Scrum Team will speak out against unethical practices or behaviors that put the project at risk.</simpara>
</listitem>
</itemizedlist>
<simpara>Memorize the Scrum pillars and values, and don&#8217;t confuse them with each other.</simpara>
<section xml:id="_test_yourself_14">
<title>Test Yourself</title>
<sidebar>
<simpara>Which three of the following are Scrum pillars?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Commitment</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Inspection</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Openness</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Transparency</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Adaptation</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B, D and E are correct.</simpara>
<simpara>The Scrum pillars are transparency, inspection, and adaptation.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_the_endless_feedback_loop">
<title>The Endless Feedback Loop</title>
<simpara>The Scrum Pillars feed into each other. It&#8217;s a feedback loop that drives the entire Scrum framework.</simpara>
<itemizedlist>
<listitem>
<simpara>Transparency allows all participants to honestly inspect progress.</simpara>
</listitem>
<listitem>
<simpara>Inspection can reveal flaws in the plan. This leads to adaptation.</simpara>
</listitem>
<listitem>
<simpara>As teams adapt, they must be open about how well the adaptation has worked. This requires the team to be transparent, which then leads to inspection and adaptation. It&#8217;s a constant loop.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_inspection">
<title>Inspection</title>
<blockquote>
<attribution>
2020 Scrum Guide page 4
</attribution>
<simpara>The Scrum artifacts and the progress toward agreed goals must be inspected frequently and diligently to detect potentially undesirable variances or problems.</simpara>
<simpara>To help with inspection, Scrum provides cadence in the form of its five events.</simpara>
<simpara>An inspection enables adaptation. Inspection without adaptation is considered pointless.</simpara>
<simpara>Scrum events are designed to provoke change.</simpara>
</blockquote>
<simpara>Inspection is all about taking a look at what you and your team are doing so you can figure out if it&#8217;s working or not.</simpara>
<itemizedlist>
<listitem>
<simpara>Why do we do the Daily Scrum? We do it so the developers can <emphasis>inspect</emphasis> their work and change their plans if they need to.</simpara>
</listitem>
<listitem>
<simpara>Why do we do the Sprint Review? We do it so the team and the stakeholders can <emphasis>inspect</emphasis> what&#8217;s been done and see if it&#8217;s good or not.</simpara>
</listitem>
<listitem>
<simpara>Why do we do the Sprint Retrospective? We do it to <emphasis>inspect</emphasis> how well the team worked together during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>Why do we have Scrum Artifacts? So people can <emphasis>inspect</emphasis> them and adapt accordingly.</simpara>
</listitem>
</itemizedlist>
<simpara>The need for inspection throughout a Sprint is a common justification for Scrum events and artifacts. Events and artifacts enable the feedback loop that is built upon the Scrum Pillars.</simpara>
<section xml:id="_test_yourself_15">
<title>Test Yourself</title>
<sidebar>
<simpara>Inspection in Scrum is:
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Done frequently to detect potential problems</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Done infrequently to allow teams to concentrate on development</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Done to identify undesirable variances</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Done to ensure undesirable variances do not occur</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A) and C) are correct.</simpara>
<simpara>Inspection is done frequently to detect potential problems and to identify any undesirable variances so that the team can address them.</simpara>
<simpara>The concept that anything could ever be done to ensure variances never occur, as option D suggests, is just wishful thinking. In the real world, undesirable variances will always occur. Scrum recognizes that reality and helps teams deal with them early and adapt.</simpara>
</section>
</section>
<section xml:id="_transparency">
<title>Transparency</title>
<simpara>To know exactly how product development is progressing, everyone must be transparent about the work they are doing.</simpara>
<simpara>Empiricism doesn&#8217;t work if we cannot look transparently into the results of the processes and methods we use within the Scrum framework.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 3
</attribution>
<simpara>The emergent process and work must be visible to those performing the work as well as those receiving the work.</simpara>
<simpara>With Scrum, important decisions are based on the perceived state of its three formal artifacts.</simpara>
<simpara>Artifacts that have low transparency can lead to decisions that diminish value and increase risk.</simpara>
<simpara>Transparency enables inspection. Inspection without transparency is misleading and wasteful.</simpara>
</blockquote>
<simpara>One of the Scrum values is openness. One of the ways to be open is to be transparent about the work being done and transparent about the progress being made.</simpara>
<simpara>The Sprint Backlog creates transparency because it lists everything the Scrum Team is working on, what the team&#8217;s goal is during this Sprint, and the team&#8217;s plan for achieving that goal. If stakeholders want to know what the Scrum Team is working on, they can look at the Sprint Backlog. It provides transparency.</simpara>
<simpara>What is the quality standard the team is using? Transparency into that is provided by the team&#8217;s Definition of Done.</simpara>
<simpara>What will the team try to build next? Transparency into that is provided by the way the Product Backlog is prioritized.</simpara>
<simpara>Like inspection, the Scrum pillar of transparency is woven into all of the Scrum events and artifacts.</simpara>
<section xml:id="_test_yourself_16">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following problems will occur if product development lacks transparency?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Technical debt will embed itself in deliverables</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Product delivery dates will be difficult to estimate</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Stakeholders will begin asking for status updates</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Honest inspection of the Scrum Team&#8217;s progress becomes impossible.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) All of the above</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option E) is correct.</simpara>
<simpara>Without transparency, it is impossible to know exactly what is happening throughout the development process. This destroys trust, makes honest inspection impossible and prompts management to want to micro-manage developers.</simpara>
<simpara>The state of progress of the Scrum Team must be transparent to all, otherwise the team and the stakeholders don&#8217;t have the facts they need to make the right decisions for the future of the product.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_adaptation">
<title>Adaptation</title>
<simpara>Things never go according to plan. That&#8217;s why we don&#8217;t spend months planning things in Scrum.</simpara>
<simpara>It&#8217;s more important to produce something of value than it is to waste time planning because nothing ever goes according to plan.</simpara>
<simpara>When plans do go awry, Scrum developers adapt. That&#8217;s how they achieve their goals.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 4
</attribution>
<simpara>If any aspects of a process deviate outside acceptable limits or if the resulting product is unacceptable, the process being applied or the materials being produced must be adjusted.</simpara>
<simpara>The adjustment must be made as soon as possible to minimize further deviation.</simpara>
<simpara>Adaptation becomes more difficult when the people involved are not empowered or self-managing.</simpara>
<simpara>A Scrum Team is expected to adapt the moment it learns anything new through inspection.</simpara>
</blockquote>
<simpara>It&#8217;s understood that in the world of software development, things change quickly. Things also change quickly in the field of construction, manufacturing, banking, which is why Scrum has become popular in those domains as well.</simpara>
<simpara>The ability for teams to quickly adjust and change their plan when things go sideways is a core tenant of Scrum. It&#8217;s one of the reasons we have the Daily Scrum - it allows developers to collectively discuss problems and adapt as needed.</simpara>
<section xml:id="_always_adapt">
<title>Always Adapt</title>
<simpara>The Scrum Guide describes several artifacts and time-boxed events that provide an opportunity to adapt. However, these are not the only times the team is allowed to meet, speak, and adapt.</simpara>
<simpara>If a problem comes up during the day, a Developer doesn&#8217;t have to wait until the next day&#8217;s Daily Scrum to adapt. Nor does a Developer have to wait until the next day&#8217;s Daily Scrum to discuss issues with fellow developers. If a problem arises, teams are encouraged to inspect and adapt immediately.</simpara>
<simpara>If the team&#8217;s war room catches fire, don&#8217;t wait until tomorrow&#8217;s Daily Scrum to leave the building. Ongoing inspection and adaption are requirements in Scrum.</simpara>
</section>
<section xml:id="_test_yourself_17">
<title>Test Yourself</title>
<sidebar>
<simpara>If the process used to track development throughout the Sprint deviates outside of an acceptable limit, the Scrum development team should:</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) End the Sprint early and begin a new round of Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) End the Sprint early and do a Sprint Review with all stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) End the Sprint early and do an internal Sprint Retrospective to see what went wrong</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Adapt during the Sprint and continue to push towards the Sprint goal.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Scrum is all about adaptation. If things don&#8217;t go according to plan, the team should adapt. They certainly shouldn&#8217;t end the Sprint. For the most part, Scrum doesn&#8217;t allow them to.</simpara>
<itemizedlist>
<listitem>
<simpara>The Scrum Developers cannot end a Sprint early in Scrum.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master cannot end a Sprint early in Scrum.</simpara>
</listitem>
</itemizedlist>
<simpara>Only the Product Owner can do that, and only under the very special condition in which the Sprint Goal has become obsolete.</simpara>
<simpara>If things go sideways during a Sprint, the solution is not to cancel the Sprint or end the Sprint early. The solution is to adapt and continue to work towards the Sprint goal.</simpara>
<simpara>Sprints are short, typically between 2 to 4 weeks. Even if things go completely sideways, it won&#8217;t be too long before a new Sprint begins, so continue to work hard toward the Sprint Goal. A new Sprint is always just around the corner.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_18">
<title>Test Yourself</title>
<sidebar>
<simpara>A serious security-related bug has appeared in the code written by a fellow Developer and you need more details about the problem to fix it. When should this issue be discussed with the Developer?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) When the Scrum Master can coordinate a meeting between the two of you</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) After the Quality Assurance (QA) team has time to investigate</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) During the next scheduled Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) You should go over to the Developer&#8217;s desk and discuss it now</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>There are scheduled invents in Scrum that provide opportunities to inspect and adapt, but those should never be used to limit communication and interaction between members of the team.</simpara>
<simpara>If a problem arises in Scrum, there&#8217;s no requirement to wait until a Scrum event happens to address it. Address problems immediately and adapt.</simpara>
</section>
</section>
<section xml:id="_scrum_values_2">
<title>Scrum Values</title>
<simpara>Scrum is a simple, incomplete framework that doesn&#8217;t solve every possible problem a development team will encounter.</simpara>
<simpara>What Scrum does do is provide five values it believes are important. When problems arise, the best solutions will respect these five values.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>Successful use of Scrum depends on people becoming more proficient in living five values:</simpara>
<itemizedlist>
<listitem>
<simpara>Commitment</simpara>
</listitem>
<listitem>
<simpara>Focus</simpara>
</listitem>
<listitem>
<simpara>Openness</simpara>
</listitem>
<listitem>
<simpara>Respect</simpara>
</listitem>
<listitem>
<simpara>Courage</simpara>
</listitem>
</itemizedlist>
<simpara>The Scrum Team commits to achieving its goals and to supporting each other.</simpara>
<simpara>Their primary focus is on the work of Sprint to make the best possible progress toward these goals.</simpara>
<simpara>The Scrum Team and its stakeholders are open about the work and the challenges.</simpara>
<simpara>Scrum Team members respect each other to be capable, and independent people are respected as such by the people with whom they work.</simpara>
<simpara>The Scrum Team members dare to do the right thing to work on tough problems.</simpara>
<simpara>These values give direction to the Scrum Team about their work, actions, and behavior.</simpara>
<simpara>The decisions that are made, the steps taken, and the way Scrum is used should reinforce these values, not diminish or undermine them.</simpara>
<simpara>The Scrum Team members learn and explore the values as they work with the Scrum events and artifacts.</simpara>
<simpara>When these values are embodied by the Scrum Team and the people they work with, the empirical Scrum pillars of transparency, inspection, and adaptation come to life building trust.</simpara>
</blockquote>
<simpara>Like the Scrum pillars, the Scrum values help to justify why we perform the Scrum events and why we create the Scrum artifacts.</simpara>
<simpara>Quite often when a Scrum Master, Product Owner, or Scrum Developer is faced with a difficult challenge, the answer to the problem lies in how to conjure up a solution that is in line with these Scrum values.</simpara>
<simpara>For the exam, know the Scrum values and how each of them is defined. There is usually a question or two that will test to see if you know what the Scrum values are and what they mean.</simpara>
<section xml:id="_test_yourself_19">
<title>Test Yourself</title>
<sidebar>
<simpara>According to the Scrum Guide, which of the following is <emphasis role="strong">not</emphasis> a Scrum Value? (Choose 5)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Agreeableness</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Commitment</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Conscientiousness</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Openness</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Respect</simpara>
</listitem>
<listitem>
<simpara>&#10063; F) Extroversion</simpara>
</listitem>
<listitem>
<simpara>&#10063; G) Focus</simpara>
</listitem>
<listitem>
<simpara>&#10063; H) Emotional stability</simpara>
</listitem>
<listitem>
<simpara>&#10063; I) Courage</simpara>
</listitem>
<listitem>
<simpara>&#10063; J) Honesty</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A), C), F), H), and J) are correct.</simpara>
<simpara>The five Scrum values are Commitment, Focus, Openness, Respect, and Courage.</simpara>
<simpara>Honesty is not one of them, but that&#8217;s not to say you shouldn&#8217;t be honest. Always be honest!</simpara>
<simpara>The other traits, extraversion (also often spelled extroversion), agreeableness, openness, emotional stability (neuroticism), and conscientiousness are together known as the Big 5 personality traits.</simpara>
<simpara>The big 5 personality traits are worth looking into if you&#8217;re into psychology and human behavior, but you won&#8217;t be tested on them when you take the Scrum Master certification exam.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_4_scrum_teams">
<title>Chapter 4: Scrum Teams</title>
<simpara>Two of the thirteen categories into which Scrum Certification exam questions are grouped include:</simpara>
<itemizedlist>
<listitem>
<simpara>Scrum Teams</simpara>
</listitem>
<listitem>
<simpara>Self-Managing Teams</simpara>
</listitem>
</itemizedlist>
<simpara>Pay close attention to how Scrum Teams are structured, the role self-management and self-organization has, and avoid clouding the simple approach Scrum takes to team dynamics with what you may have learned in environments where Scrum may not have been applied properly.</simpara>
<section xml:id="_composition_of_a_scrum_team">
<title>Composition of a Scrum Team</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>The fundamental unit of Scrum is a small team of people, a Scrum Team.</simpara>
<simpara>The Scrum Team consists of one Scrum Master, one Product Owner, and Developers.</simpara>
</blockquote>
<simpara>Take note of the fact that a Scrum team is made up of three <emphasis>things:</emphasis> one Scrum Master, one Product Owner, and multiple Developers. Notice how I called them 'things.'</simpara>
<simpara>People like to call them 'roles.' The Scrum Guide never uses the term 'role' once. Technically, these are not roles.  The Scrum Guide later refers to them as 'accountabilities.' They are technically not 'roles.'</simpara>
<figure>
<title>A Scrum Team must have one Product Owner, one Scrum Master and some Developers to do the work. What does your Scrum Team look like?</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-team.jpg"/>
</imageobject>
<textobject><phrase>A Scrum Teams has one Product Owner, one Scrum Master and developers.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_test_yourself_20">
<title>Test Yourself</title>
<simpara>Here&#8217;s a typical Scrum Certification exam question that tests your knowledge of the proper structure of a Scrum Team.</simpara>
<sidebar>
<simpara>Which one of the following best describes the typical composition of a Scrum Team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) A Scrum Team is made up of one Scrum Master, many Product Owners, and many Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) A Scrum Team is made up of one Scrum Master, one Product Owner, and many Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) A Scrum Team is made up of many Scrum Masters, many Project Managers, and many Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) A Scrum Team is made up of one Scrum Master, one Project Manager, one Product Owner, and many Developers</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is B.</simpara>
<simpara>A Scrum Team is made up of one Scrum Master, one Product Owner, and many Developers</simpara>
<simpara>You will often see the term <emphasis>Project Manager</emphasis> appear in certification questions to throw you off. There is no <emphasis>Project Manager</emphasis> in Scrum. There is a Product Owner, but there is no such thing as a Project Manager in Scrum.</simpara>
<simpara>There are also no:</simpara>
<itemizedlist>
<listitem>
<simpara>Testers</simpara>
</listitem>
<listitem>
<simpara>Engineers</simpara>
</listitem>
<listitem>
<simpara>Architects</simpara>
</listitem>
<listitem>
<simpara>Carpenters</simpara>
</listitem>
<listitem>
<simpara>Rocket Scientists</simpara>
</listitem>
<listitem>
<simpara>Heavy Equipment Operators or</simpara>
</listitem>
<listitem>
<simpara>Hairdressers referenced in the Scrum Guide.</simpara>
</listitem>
</itemizedlist>
<simpara>If people with those skills are required to build the product you&#8217;re working on, then they all fall under the term 'Developer.' There are no separate <emphasis>Quality Assurance (QA)</emphasis> people or <emphasis>Business Analysts</emphasis> in Scrum. There are no separate testing teams.</simpara>
<simpara>If your project needs testers, blacksmiths, or QA people, then they are considered developers on the team.</simpara>
<simpara>If you ever see references to <emphasis>Quality Assurance Teams</emphasis> or <emphasis>Project Managers</emphasis> or <emphasis>Tester</emphasis> roles as options on the Scrum Master certification exam, those options are typically incorrect.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_21">
<title>Test Yourself</title>
<sidebar>
<simpara>The software developers on the Scrum Team are frustrated that their time is being consumed by tasks like user documentation and user acceptance testing. They would prefer to concentrate on core development activities.</simpara>
<simpara>Which one of the following options best describes how a team of software developers should operate under the Scrum framework? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Software developers should do as much development as they can and then pass quality control work off to QA people.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Software developers should only build core features and then allow others to take care of non-functional aspects.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Software developers should outsource work they are not skilled to perform to third parties or external teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) All work should be completed by the developers on a Scrum Team, including testing and documentation.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>This question is a typical example of a Scrum Master certification question describing how many software development teams who say they are doing Scrum behave in an attempt to get you to incorrectly answer the question.</simpara>
<simpara>Many Scrum Master certification exam questions will talk about professions like QAs, business analysts, or engineers who are not on the Scrum team.</simpara>
<simpara>Anyone doing work as part of product development must be <emphasis>on</emphasis> a Scrum Team. Regardless of what their skills are, they are simply seen as a Developer in the eyes of the Scrum Guide.</simpara>
<simpara>Options on the Scrum Certification exam where they start talking about specific professions are usually wrong because a Scrum Team only has three accountabilities:</simpara>
<itemizedlist>
<listitem>
<simpara>One Scrum Master</simpara>
</listitem>
<listitem>
<simpara>One Product Owner</simpara>
</listitem>
<listitem>
<simpara>Scrum Developers</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>You will often see questions on the Scrum Master certification exam where options include a reference to a <emphasis>manager</emphasis> or a <emphasis>Project Manager.</emphasis> The Scrum Guide never once mentions the terms <emphasis>Project Manager</emphasis> or <emphasis>manager</emphasis>. Options that refer to these positions are most likely wrong.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_there_are_no_subteams_in_scrum">
<title>There are no Subteams in Scrum</title>
<simpara>In Scrum, the development team is a collection of 'equals', regardless of their skills or experience.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Within a Scrum Team, there are no subteams or hierarchies. It is a cohesive unit of professionals focused on one objective at a time, the Product Goal.</simpara>
</blockquote>
<simpara>In Scrum Team, there are no separate 'QA Teams' or 'Testing Teams', nor is there even a team lead.</simpara>
<simpara>Everyone pitches in to do the required work, and with the team&#8217;s cross-functional skills, they can accomplish any specified testing or QA requirements.</simpara>
<simpara>The topic of subteams and hierarchies will be at the heart of seven or eight questions on the 80 question Scrum Master certification exam. They&#8217;re easy to get right if you just remember that there are no sub-teams and there are no hierarchies in Scrum.</simpara>
<section xml:id="_subteams_are_radioactive_in_scrum">
<title>Subteams are Radioactive in Scrum</title>
<simpara>What does it mean to say there are no subteams in Scrum?</simpara>
<itemizedlist>
<listitem>
<simpara>It means there is no QA team to check for quality issues. The development team does that.</simpara>
</listitem>
<listitem>
<simpara>It means there is no testing team to check for bugs. The development team does that.</simpara>
</listitem>
<listitem>
<simpara>It means there is no performance team to do load testing. The development team does that.</simpara>
</listitem>
<listitem>
<simpara>It means there is no team of technical writers to do documentation. The development team does that.</simpara>
</listitem>
</itemizedlist>
<simpara>If bugs need to be fixed, if quality needs to be assured, or if performance needs to be tested, then the people doing that work are part of the development team.</simpara>
<simpara>To be without hierarchies means developers aren&#8217;t given titles like 'Team Lead' or 'Sr. Developer.' Everyone on the team is equal in the eyes of the Scrum framework.</simpara>
<figure>
<title>The only time you have a subteam in Scrum is if there is literally a team of developers working on a sub. (Credit: USS Albacore, US Navy)</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/subteam.jpg"/>
</imageobject>
<textobject><phrase>The only time you have a subteam in Scrum is if there is literally a team of developers working on a sub. (USS Albacore, credit: US Navy)</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_test_yourself_22">
<title>Test Yourself</title>
<simpara>Here&#8217;s a prototypical Scrum exam question that tests you on hierarchies and subteams:</simpara>
<sidebar>
<simpara>There is an issue. What should you do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Talk to the Senior Developer on the Scrum Team about it</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Talk to someone on the QA team about it</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Talk to someone on the testing team about it</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Coach the developers around strategies of how to address it as a team</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>You should immediately identify the first three options as being wrong because they talk about a Senior Developer (hierarchy), a QA team (subteam) and a testing team (subteam).</simpara>
<simpara>Scrum doesn&#8217;t have subteams or hierarchies. If there&#8217;s ever an issue that falls on the shoulders of the Scrum Master to solve, the solution is typically for the Scrum Master coach around it.</simpara>
</section>
</section>
<section xml:id="_cross_functional_scrum_teams">
<title>Cross-functional Scrum Teams</title>
<simpara>The importance of the concept of cross-functional teams that can accomplish everything required of them without resorting to third parties or outsourced help, can&#8217;t be emphasized enough for people who wish to pass the Scrum Certification exam.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Scrum Teams are cross-functional, meaning the members have all the skills necessary to create value for each Sprint.</simpara>
</blockquote>
<simpara>The cross-functional aspect of a Scrum Team confuses a lot of test takers.</simpara>
<simpara>If you bake a cake, you need all the ingredients before you begin, right? And if you want to build a product, you need a team of developers who have all of the skills needed to build that product.</simpara>
<simpara>If your team is going to build, test, secure and load test an application, then your team has to have developers on it with all of those skills.</simpara>
<simpara>Does the product under development require a warp drive made from dilithium crystals? Then your cross-functional team better have someone with the skills to build that, or at the very least, they better be actively learning how to do it.</simpara>
<simpara>A Scrum team doesn&#8217;t outsource their work, nor do they hand their work over to a 'testing team' or a 'quality assurance' team. The Scrum Team itself is cross-functional and capable of doing whatever is required to produce the product under development. That&#8217;s what it means to be cross-functional.</simpara>
<section xml:id="_test_yourself_23">
<title>Test Yourself</title>
<sidebar>
<simpara>The next feature required by the Product Owner is a Mars orbiter, but nobody on your team knows how to build a Mars orbiter.</simpara>
<simpara>What should you, the Scrum Master, advise the team to do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Tell the dev team the Mars Orbiter will be removed from the required features list.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Cancel the Sprint until the team finds someone who can build a Mars orbiter.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Tell the dev team the Mars Orbiter feature will be outsourced to Elon Musk and SpaceX.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Coach the dev team on the importance of learning and acquiring the skills required to complete all of the required product features.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>This may sound like a silly question, but what would happen if you were on a team that needed to build a Mars Orbiter?</simpara>
<simpara>You&#8217;d have to research how to do it and figure it out.</simpara>
<simpara>And if you were hired to build a Mars Orbiter, the assumption is that you are indeed someone smart enough to figure out how to solve that impossible problem.</simpara>
</section>
</section>
<section xml:id="_cross_functional_and_self_managed">
<title>Cross-Functional and Self-managed</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>In Scrum, the developers are assumed to be cross-functional, and as a group, they will possess all of the skills needed to produce the product being built.</simpara>
<simpara>That&#8217;s what it means to have a cross-functional team.</simpara>
<simpara>Scrum Teams are also self-managing, meaning they internally decide who does what, when, and how.</simpara>
</blockquote>
<simpara>Scrum self-describes as an 'incomplete framework.' That means it doesn&#8217;t have a lot of rules or requirements.</simpara>
<simpara>Scrum practitioners are encouraged to 'find their path' and do what works for them. The developers should be allowed to manage themselves as much as possible.</simpara>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>There is no reference to a 'Sprint 0', 'infrastructure Sprint' or 'release Sprint' in the Scrum Guide. Options that reference these concepts on the exam are typically wrong.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_24">
<title>Test Yourself</title>
<sidebar>
<simpara>Your company just hired 50 new developers. How should they be put into teams? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Have the Project Manager split them up to create balanced teams based on education, experience, and skill level.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Have the Scrum Master split them up into evenly divided teams where their skills match their problem domain.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Have Human Resources split them up into equally divided teams based on their personality types.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Let the developers split themselves up into any number of groups in any way they like.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>In this case, option D would be the correct answer.</simpara>
<simpara>If the teams are truly self-managed, they should be allowed to group in whichever way they see fit. Scrum does limit the size of a team to 10 individuals, so that is the only hard constraint that would be put on the grouping.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_25">
<title>Test Yourself</title>
<sidebar>
<simpara>You, the Scrum Master, come to work on the first day of the new Sprint, and you find out from the Product Owner that the 8-member development team has split up into one group of 3, and another group of 5. The Product Owner is worried about how this will impact the project.</simpara>
<simpara>What one option would you, as the Scrum Master, choose?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Coach the developers on the importance of staying together as a single, cohesive team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Explain that groups can&#8217;t be broken up midway through the development of a product.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Have Human Resources talk to the developers about making rash, surprise decisions</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Allow the team to split up in whatever way they see fit, and coach the Product Owner on the importance of self-managed teams.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>In this case, the development team wants to split up into two groups. If that&#8217;s what they want, then let them do it.</simpara>
<simpara>The development team is a group of self-motivated, highly motivated individuals with one overarching objective - to achieve the Product Goal. If the developers believe two teams would be more productive, then that&#8217;s their decision. They get to self-organize in any way they see fit.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_26">
<title>Test Yourself</title>
<simpara>Here&#8217;s another self-management question that often catches test-takers off guard.</simpara>
<sidebar>
<simpara>Who has the right to remove a Developer from a Scrum Team? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Human Resources</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Development Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Again, the development team is self-managing. If there is a Developer that they believe is best removed from the team, then the Developer should be removed from the team.</simpara>
<simpara>That doesn&#8217;t mean the Developer should be fired. Maybe they were under-utilized. Or maybe they somehow impeded progress. But if the development team believes that removing an individual from the team would better serve the Product Goal, then that&#8217;s a decision the team should be allowed to make.</simpara>
<figure>
<title>A cross-functional Scrum Team has all the skills needed to complete a Product Backlog item from beginning to end. (Credit: Pierre Selim)</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/cross-functional-teams.jpg"/>
</imageobject>
<textobject><phrase>A cross-functional team has all the skills needed to complete a Product Backlog item from beginning to end. (Credit: Pierre Selim)</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>Daily reports, status meetings, and allowing managers to attend the Daily Scrum are all practices that run counter to the principles of Scrum. If you ever see options on the exam that suggest such practices, immediately discount them because they are wrong.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_why_only_10_to_a_scrum_team">
<title>Why only 10 to a Scrum team?</title>
<simpara>A Scrum Team&#8217;s maximum size, including the Scrum Master and Product Owner, is 10. Here&#8217;s why:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>The Scrum Team is small enough to remain nimble and large enough to complete significant work within a Sprint, typically 10 or fewer people. In general, we have found that smaller teams communicate better and are more productive.</simpara>
</blockquote>
<simpara>You&#8217;ll be tested on the maximum size of a Scrum Team: it&#8217;s 10 or fewer.
That includes the Product Owner and the Scrum Master, so generally speaking, that implies 8 developers.</simpara>
<simpara>However, there are many instances where a Scrum Master or even a Product Owner might be doing development too. This means there might be 10 developers, with two of them playing double-duty as a Scrum Master or Product Owner.</simpara>
</section>
<section xml:id="_can_developers_also_be_scrum_masters">
<title>Can Developers also be Scrum Masters?</title>
<simpara>People often wonder if a Scrum Master can also be a Developer, or if a Scrum Master can also be the Product Owner. There&#8217;s nothing in the Scrum Guide that forbids it, so it&#8217;s fair dinkum.</simpara>
<itemizedlist>
<listitem>
<simpara>Is it ideal for the Scrum Master to also be the Product Owner? Probably not.</simpara>
</listitem>
<listitem>
<simpara>Is it pragmatic for the Scrum Master to also be the Product Owner? Maybe sometimes it is?</simpara>
</listitem>
</itemizedlist>
<simpara>If a Product Owner has amazing skills with regards to the development of a Product Backlog item or two, why not allow them to contribute to the Increment? Again, there&#8217;s nothing in the Scrum Guide that forbids a Product Owner or Scrum Master from doing working on Product Backlog items.</simpara>
<figure>
<title>One person may wear different hats and assume multiple roles on a Scrum Team.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/different-hats.jpg"/>
</imageobject>
<textobject><phrase>A single person may wear different hats and assume multiple roles or accountabilities on a Scrum Team.</phrase></textobject>
</mediaobject>
</figure>
<simpara>It&#8217;s nice to think of the Scrum Master and Product Owner as dedicated roles. But on small startups, where there may only be five people in the entire company, you may have all of them doing some sort of development during a Sprint. In that case, the person who took on the Scrum Master accountability also takes on accountabilities as a Developer.</simpara>
<simpara>There&#8217;s absolutely nothing in the Scrum Guide that says a Scrum Master can&#8217;t also do development, and pragmatically speaking, for many small companies, it&#8217;s a reality.</simpara>
<section xml:id="_test_yourself_27">
<title>Test Yourself</title>
<sidebar>
<simpara>What is the optimal size of a Scrum team? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) 3-9 people</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) 7 plus or minus 2</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) 10 people or less</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) At least 5 people</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Scrum lets self-managed teams determine their own size</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>Normally, Scrum allows self-managed teams to decide what is best for them. But when it comes to team size, Scrum recommends teams are made up of 10 people or less.</simpara>
<simpara>I believe SAFe uses 7 plus or minus 2 as the team-size standard, and the old Scrum Guide said 3-9, but this isn&#8217;t a SAFe certification guide, and you&#8217;re not being tested on what the old Scrum Guide said.</simpara>
<simpara>10 people or less is the correct size of a Scrum Team on the 2020 Scrum Certification exam.</simpara>
</section>
<section xml:id="_test_yourself_28">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum team is kept small because:
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Small teams are easier for the Scrum Master to control</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Small teams communicate better</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Small teams are more productive</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Small teams demand fewer employee benefits</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Small teams have lower maintencance costs</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and C are correct.</simpara>
<simpara>According to the Scrum Guide, small teams communicate better and are more productive.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_multiple_scrum_teams_working_on_one_product">
<title>Multiple Scrum Teams Working on One Product</title>
<simpara>Ever wonder how Scrum manages a big project with multiple development teams working on it?</simpara>
<simpara>The Scrum Guide doesn&#8217;t say much about the issue, but it does outline a few important rules to follow when more than one Scrum Team works on the development of the same product.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>If Scrum Teams become too large, they should consider reorganizing into multiple cohesive Scrum Teams, each focused on the same product. Therefore, they should share:</simpara>
<itemizedlist>
<listitem>
<simpara>The same Product Goal</simpara>
</listitem>
<listitem>
<simpara>The same Product Backlog</simpara>
</listitem>
<listitem>
<simpara>The same Product Owner</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>You can expect 5 or 6 questions about this one paragraph on the Scrum Master certification exam. It&#8217;s significant.</simpara>
<simpara>The first takeaway from this paragraph is that you can have multiple Scrum Teams working on the same product.</simpara>
<section xml:id="_keep_your_teams_small">
<title>Keep Your Teams Small</title>
<simpara>Another takeaway is that Scrum advises you to break up your teams if they become too big, and that doesn&#8217;t necessarily mean if they are over 10 people.</simpara>
<simpara>Maybe 9 people on the Scrum Team is too large to be nimble and productive? In that case, if the self-managed team thinks splitting into two groups of 4 and 5 developers makes sense, then they should be encouraged to do it.</simpara>
<simpara>Also notice that when multiple teams work on the same product, they share the same Product Goal, Product Backlog, and Product Owner. Commit those facts to memory, because you are guaranteed to see a question like this on the exam:</simpara>
</section>
<section xml:id="_test_yourself_29">
<title>Test Yourself</title>
<sidebar>
<simpara>Five Scrum Teams are working on the same product. Which of the following statements is not true?<?asciidoc-br?>
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Each team must share the same Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Each team must share the same Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Each team must share the same Product Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Each team must share the same Product Backlog</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A, C, and D are true, which makes option B the incorrect answer.</simpara>
<simpara>When multiple teams work on the same product, they share the same Product Owner, Product Goal, and the same Product Backlog.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_to_share_or_not_to_share_a_scrum_master">
<title>To Share or Not to Share a Scrum Master?</title>
<simpara>Notice how the rule about multiple teams sharing the same Product Owner does not apply to the Scrum Master when multiple teams work on the same product.</simpara>
<simpara>Multiple teams on the same project might share the same Scrum Master, or each team might have its own Scrum Master. The Scrum Guide doesn&#8217;t care either way.</simpara>
<section xml:id="_test_yourself_30">
<title>Test Yourself</title>
<sidebar>
<itemizedlist>
<listitem>
<simpara>True or False: A Product Owner must dedicate 100% of their time to a single Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>True or False: A Scrum Master must dedicate 100% of their time to a single Scrum Team.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Both of those statements are false.</simpara>
<simpara>We know the first statement is false because the Scrum Guide insists that if five teams are working on a single product, the Product Owner must be split across all five teams, which makes it impossible to be dedicated 100% to just one.</simpara>
<simpara>Furthermore, there is no rule in the Scrum Guide that says a Scrum Master must be 100% dedicated to a single Scrum team. It&#8217;s quite common for one Scrum Master to work on multiple Scrum Teams within an organization.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_scrum_team_responsibilities">
<title>Scrum Team Responsibilities</title>
<simpara>You will often see questions on the Scrum Master certification exam about who should be responsible for maintenance or research or user acceptance testing (UAT) or quality assurance (QA).</simpara>
<simpara>An 'incorrect answer' will suggest a subteam or external resource should do UAT or QA. That&#8217;s wrong. If QA or UAT is part of a Product Backlog item or it&#8217;s part of the Definition of Done, then the Scrum Team is responsible for it.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>The Scrum Team is responsible for all product-related activities including:</simpara>
<itemizedlist>
<listitem>
<simpara>stakeholder collaboration,</simpara>
</listitem>
<listitem>
<simpara>verification,</simpara>
</listitem>
<listitem>
<simpara>maintenance,</simpara>
</listitem>
<listitem>
<simpara>operation,</simpara>
</listitem>
<listitem>
<simpara>experimentation,</simpara>
</listitem>
<listitem>
<simpara>research and development,</simpara>
</listitem>
<listitem>
<simpara>and anything else that might be required.</simpara>
</listitem>
</itemizedlist>
</blockquote>
</section>
<section xml:id="_end_to_end_feature_development">
<title>End-to-End Feature Development</title>
<simpara>This statement reinforces the idea that a Scrum Team is cross-functional.</simpara>
<simpara>Every skill required to build your product, at least within the scope of your Scrum project, must exist on your team, or at least, your team should be able to acquire those skills.</simpara>
<simpara>There are no separate research or development or quality assurance teams in Scrum. The Scrum team is responsible for all of the work on its plate.</simpara>
<section xml:id="_test_yourself_31">
<title>Test Yourself</title>
<sidebar>
<simpara>In Scrum, who is responsible for quality control and testing before an Increment is released into production? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Quality Assurance Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) And external user acceptance testing (UAT) team</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The DevOps team</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Developers</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>There are no external teams in Scrum. All of the skills required to incrementally build the product must exist amongst the Scrum Team&#8217;s developers.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_sustainable_self_managed_teams">
<title>Sustainable, Self-Managed Teams</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>They are structured and empowered by the organization to manage their work.</simpara>
<simpara>Working in Sprints at a sustainable pace improves the Scrum Team’s focus and consistency.</simpara>
</blockquote>
<simpara>This section is interesting because it speaks to the responsibilities an organization has to the Scrum Team:</simpara>
<itemizedlist>
<listitem>
<simpara>The organization allows the Scrum Team to manage their work</simpara>
</listitem>
<listitem>
<simpara>The Scrum team is allowed to work at a sustainable pace</simpara>
</listitem>
</itemizedlist>
<simpara>The best way for the organization to empower a Scrum Team is to leave them alone and allow them to manage themselves. That&#8217;s an important concept in Scrum. If the organization isn&#8217;t committed to Scrum, the Scrum Team will inevitibly encounter needless impediments that the Scrum Master will have to resolve.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_32">
<title>Test Yourself</title>
<sidebar>
<simpara>How does the organization help to manage the work of the development team? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The organization reads daily reports created by the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The organization regularly sends a manager to attend the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The organization pulls developers into a weekly meeting to hear status reports</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The organization allows Scrum teams to manage themselves</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The best thing an organization can do to help manage a Scrum Team is to not manage a Scrum Team. The other three options are all Scrum anti-patterns.</simpara>
<section xml:id="_test_yourself_33">
<title>Test Yourself</title>
<sidebar>
<simpara>When should the Scrum Team add a new Developer to the project? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) When the Project Manager provides enough funding for a new Developer</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) When the development team repeatedly fails to meet the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) When the development team fails to estimate the amount of work they can complete in a Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) When a new Developer is required to maintain a sustainable pace of development</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Motivated developers will work hard to achieve the Sprint Goal and the Product Goal. If developers are getting overworked and are no longer working at a sustainable pace, it is the organization&#8217;s responsibility to hire new developers to help the team.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Working in Sprints at a <emphasis>sustainable pace</emphasis> improves the Scrum Team’s focus and consistency.</simpara>
</blockquote>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_increments_must_be_valuable_and_useful">
<title>Increments Must Be Valuable and Useful</title>
<simpara>In every Sprint, the Scrum Team must create an Increment that is valuable and useful. Well, they must try to. That is always the goal.</simpara>
<simpara>The implication of needing to create a useful Increment in every single sprint is that you can&#8217;t have an 'infrastructure sprint' that just gets things organized. There is no such thing as a 'Sprint Zero' in Scrum.</simpara>
<simpara>Even if the increment is small and minor, each Sprint should try to create something that is valuable and will be used in the final product.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>The entire Scrum Team is accountable for creating a valuable, useful Increment every Sprint.</simpara>
</blockquote>
<simpara>Every Sprint must create at least one valuable, useful Increment.</simpara>
<simpara>An Increment must be something 'useful.' The means simply setting up infrastructure doesn&#8217;t count as a 'useful' Increment. The Increment must be useful in terms of the usability and integration with the end product.</simpara>
<simpara>Furthermore, the Scrum Guide says the entire team is responsible for the creation of at least one, valuable, useful Increment each Sprint - not the Scrum Master, not the Product Owner, and not the developers alone, but the whole Scrum Team is responsible for the creation of a useful increment.</simpara>
<section xml:id="_test_yourself_34">
<title>Test Yourself</title>
<simpara>You&#8217;re guaranteed to get a question like this on the exam:</simpara>
<sidebar>
<simpara>Who is accountable for the creation of a useful Increment each Sprint? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Development Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The Scrum Team as a whole</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>In this case, E is the correct option.</simpara>
<simpara>The Scrum Team as a whole is responsible for the creation of a valuable and useful Increment.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_scrum_accountabilities">
<title>Scrum Accountabilities</title>
<simpara>Scrum plays a few word games with the 'accountabilities' it defines.</simpara>
<simpara>The Scrum Guide never mentions the term 'role' or 'job.' When it comes to the Developers, Product Owners, and Scrum Masters, the Scrum Guide is very careful to use the much more abstract term 'accountability.'</simpara>
<simpara>The term 'role' is not found in the 2020 Scrum Guide even once.</simpara>
</section>
<section xml:id="_test_yourself_35">
<title>Test Yourself</title>
<sidebar>
<simpara>Be as exact as possible when you answer this question. The Scrum Guide defines:
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) 3 Roles</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) 4 Roles</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) 3 Accountabilities</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) 4 Accountabilities</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer to this question is C.</simpara>
<simpara>The Scrum Guide defines 3 accountabilities, not roles.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Scrum defines three specific accountabilities within the Scrum Team:</simpara>
<itemizedlist>
<listitem>
<simpara>The Developers</simpara>
</listitem>
<listitem>
<simpara>The Product Owner</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>Throughout this book I hope you&#8217;ll allow me to use the terms 'roles' and 'accountabilities' interchangeably. 'Roles' just sounds more natural. Just be aware of the distinction on the exam.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_5_the_developers">
<title>Chapter 5: The Developers</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>Scrum has its roots in software development, but the stewards of the framework have worked hard to push Scrum into other domains including:</simpara>
<itemizedlist>
<listitem>
<simpara>Construction</simpara>
</listitem>
<listitem>
<simpara>Manufacturing</simpara>
</listitem>
<listitem>
<simpara>Engineering</simpara>
</listitem>
<listitem>
<simpara>Bee Keeping</simpara>
</listitem>
</itemizedlist>
<simpara>To pass the Scrum certification exam, you must shake yourself out of the mindset that Scrum is all about software development.</simpara>
<simpara>A big mental transition many software developers have difficulty with is realizing that in terms of Scrum, a 'developer' isn&#8217;t necessarily a 'software developer.'</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Developers are the people in the Scrum Team that are committed to creating any aspect of a usable Increment each Sprint.</simpara>
</blockquote>
<section xml:id="_who_is_a_developer">
<title>Who is a Developer?</title>
<simpara>According to Scrum, the term 'developer' refers to anyone on the team who is adding value and working towards the creation of a usable and valuable increment of work.</simpara>
<itemizedlist>
<listitem>
<simpara>In construction, a developer could be the person painting the walls</simpara>
</listitem>
<listitem>
<simpara>For castaways on a deserted island, a developer could be the person digging a trench for irrigation</simpara>
</listitem>
<listitem>
<simpara>In beekeeping, a developer might be the person who disposes of the slumgum</simpara>
</listitem>
</itemizedlist>
<simpara>As you read this section about the 'developer', it is easy to fall into the trap of thinking that Scrum is specifically talking about a 'software developer.' They&#8217;re not.</simpara>
<simpara>Quite often, framing a scenario or exam question outside the world of software development will help you see things more clearly and choose the correct answer.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_feature_development_vs_overall_accountability">
<title>Feature Development vs. Overall Accountability</title>
<simpara>The Scrum Certification exam will likely ask you one of these two questions:</simpara>
<itemizedlist>
<listitem>
<simpara>Who is accountable for creating a useful Increment?</simpara>
</listitem>
<listitem>
<simpara>Who is committed to creating <emphasis>aspects</emphasis> of a usable Increment?</simpara>
</listitem>
</itemizedlist>
<simpara>The two questions sound very similar, and if you&#8217;re unprepared, the nuance between the job of the Scrum Developers and the duties of the Scrum Team might lose you an exam mark.</simpara>
<simpara>The Scrum Team as a whole is accountable for creating a useful Increment, not just the Scrum Developers.</simpara>
<simpara>However, it is the developers who create the various features, or <emphasis role="strong">aspects</emphasis>, of the usable Increment.</simpara>
<simpara>Compare the quote prior to the one below and notice the difference the Scrum Guide makes between the Scrum Team and the Developers when it comes to the Increment:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide - Scrum Team Section
</attribution>
<simpara>The entire Scrum Team is accountable for creating a valuable, useful Increment every Sprint.</simpara>
</blockquote>
<blockquote>
<attribution>
2020 Scrum Guide - Developer Section
</attribution>
<simpara>Developers are the people in the Scrum Team that are committed to creating any aspect of a usable Increment each Sprint.</simpara>
</blockquote>
<simpara>The whole point of Scrum is to deliver value to the stakeholders, and it is the developers who create all of the parts of the Increment, which is the additive unit of value in Scrum.</simpara>
</section>
<section xml:id="_the_developers_job_is_simple_create">
<title>The Developer&#8217;s Job is Simple: Create</title>
<simpara>Despite the importance of the developer to the Scrum framework, the Guide only dedicates 84 words to them. It&#8217;s because their job is quite simple - just create the product.</simpara>
<simpara>The remaining verbiage about the Scrum Developers outlines the key tasks they are accountable for:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide - Developer Section
</attribution>
<simpara>The specific skills needed by the Developers are often broad and will vary with the domain of the work.</simpara>
<simpara>However, the Developers are always accountable for:</simpara>
<itemizedlist>
<listitem>
<simpara>Creating a plan for the Sprint, the Sprint Backlog;</simpara>
</listitem>
<listitem>
<simpara>Instilling quality by adhering to a Definition of Done;</simpara>
</listitem>
<listitem>
<simpara>Adapting their plan each day toward the Sprint Goal; and,</simpara>
</listitem>
<listitem>
<simpara>Holding each other accountable as professionals.</simpara>
</listitem>
</itemizedlist>
</blockquote>
</section>
<section xml:id="_developer_accountabilities">
<title>Developer Accountabilities</title>
<simpara>Let&#8217;s look at the accountabilities of the Developer one point at a time.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide - Developer Section
</attribution>
<simpara>Developers are always accountable for creating a plan for the Sprint: the Sprint Backlog.</simpara>
</blockquote>
<simpara>There are two backlogs in Scrum:</simpara>
<itemizedlist>
<listitem>
<simpara>One is the Product Backlog owned by a Product Owner. It outlines all of the work necessary to build the product.</simpara>
</listitem>
<listitem>
<simpara>The other is the Sprint backlog which is owned by the developers.</simpara>
</listitem>
</itemizedlist>
<simpara>The Sprint Backlog is the developer&#8217;s plan of what they intend to get done during the Sprint.</simpara>
<simpara>The developers own it, and nobody tells them how to manage it, not even the Scrum Master.</simpara>
<section xml:id="_test_yourself_36">
<title>Test Yourself</title>
<sidebar>
<simpara>Who on the Scrum Team has the right to add new items to the Sprint Backlog? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Developers</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is D.</simpara>
<simpara>Only the Developers have the authority to add or remove items from the <emphasis role="strong">Sprint</emphasis> Backlog.</simpara>
<simpara>In contrast, only the Product Owner can add or remove items from the <emphasis role="strong">Product</emphasis> Backlog.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_instilling_quality">
<title>Instilling Quality</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Developers are always accountable for Instilling quality by adhering to a Definition of Done.</simpara>
</blockquote>
<simpara>Notice the connection between quality and the Definition of Done.</simpara>
<simpara>Any time the Scrum Master certification asks how to enforce quality, the answer will usually get mapped to the application of the Definition of Done.</simpara>
<section xml:id="_test_yourself_37">
<title>Test Yourself</title>
<sidebar>
<simpara>The gatekeeper of quality for the Scrum Framework is: (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Product Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Definition of Done</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is D. The Definition of Done is the quality gate all increments must pass through to become valid.</simpara>
<note>
<simpara>The Scrum Guide uses a maddening set of rules for capitalization. They always capitalize 'Developer.' I just can&#8217;t do that. I capitalize 'Scrum Developer', but other references to developer I leave lower case.</simpara>
</note>
</section>
</section>
<section xml:id="_daily_adaptation">
<title>Daily Adaptation</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Developers are always accountable for adapting their plan each day toward the Sprint Goal.</simpara>
</blockquote>
<simpara>It is an assumption that things will change and plans will go awry during a Sprint. Developers are expected to constantly adapt their plans and adjust to changing condition.</simpara>
<simpara>Since the developer&#8217;s plan is the Sprint Backlog, that means the developers will be tinkering with, adding, deleting, and managing their Sprint Backlog constantly throughout the Sprint.</simpara>
<section xml:id="_test_yourself_38">
<title>Test Yourself</title>
<sidebar>
<simpara>When are developers allowed to adapt their plan by changing the Sprint Backlog? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Any time during the sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Only during Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Only during the Daily Scrum</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>If the developers see an opportunity to adapt to changes, they are encouraged to update their plans immediately. In Scrum, the Sprint Backlog is the developer&#8217;s plan. The developers can update the Sprint Backlog anytime during the Sprint if they feel it is necessary.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_interpersonal_accountability">
<title>Interpersonal Accountability</title>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>Developers are always accountable for holding each other accountable as professionals.</simpara>
</blockquote>
<simpara>You are guaranteed to get a question on the Scrum Certification exam about who holds the developers accountable for monitoring or tracking their progress.</simpara>
<simpara>The answer is the developers. The developers hold each other accountable.</simpara>
<simpara>People new to Scrum will often think the 'Scrum Master', by virtue of their official sounding name, holds the developers accountable for their work.</simpara>
<section xml:id="_the_role_of_the_scrum_master">
<title>The Role of the Scrum Master</title>
<simpara>That&#8217;s not the case. The Scrum Master is really just a coach and facilitator.</simpara>
<simpara>It might also be understandable if you thought the whole team keeps the Scrum Developers accountable.</simpara>
<simpara>Again, that&#8217;s not the case, which makes sense, because the Scrum Master or the Product Owner might not interact with the developers every day. On the other hand, the developers interact with each other at least once during the Daily Scrum.</simpara>
<simpara>In Scrum, the developers hold each other accountable for what they do and how they perform.</simpara>
</section>
</section>
<section xml:id="_whats_not_said_about_developers">
<title>What&#8217;s not said about Developers</title>
<simpara>About 90% of the question on the Scrum certification exam come directly out of the Scrum Guide. However, there are a few questions that require some additional knowledge.</simpara>
<simpara>Two topics you&#8217;ll want to familiarize yourself with in regards to developers on a Scrum Team are:</simpara>
<itemizedlist>
<listitem>
<simpara>The fact that adding new developers can temporarily slow down a team&#8217;s velocity</simpara>
</listitem>
<listitem>
<simpara>The fact that new developers can be added any time throughout the Sprint</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_adding_new_developers">
<title>Adding New Developers</title>
<simpara>When should you add new developers to a Team?</simpara>
<itemizedlist>
<listitem>
<simpara>During Sprint Planning?</simpara>
</listitem>
<listitem>
<simpara>During the Sprint Review?</simpara>
</listitem>
<listitem>
<simpara>During the Sprint Retrospective?</simpara>
</listitem>
</itemizedlist>
<simpara>The Scrum Guide doesn&#8217;t say anything decisive about this subject. It doesn&#8217;t need to.</simpara>
<simpara>You can add new developers to a project any time you need them.</simpara>
<simpara>If you&#8217;re halfway through a Sprint, and Human Resources just hired the four new programmers you&#8217;ve wanted for months, it wouldn&#8217;t make sense to just keep those developers on the bench for two weeks so they can 'officially start' at the beginning of the next Sprint. That would be silly and wasteful. Scrum is lean and pragmatic.</simpara>
<section xml:id="_sustainable_development">
<title>Sustainable Development</title>
<simpara>When should new developers be added to a team?</simpara>
<simpara>Scrum says developers should always work at a sustainable pace. Any time the pace starts to become unsustainable, add some new developers to the team.</simpara>
<simpara>The Scrum Certification exam might talk about budget money or internships or something like that, but those factors don&#8217;t have anything to do with Scrum.</simpara>
<simpara>In terms of Scrum, developers can be added to a project any time they are needed. They can be removed at any time too.</simpara>
</section>
<section xml:id="_test_yourself_39">
<title>Test Yourself</title>
<sidebar>
<simpara>Who holds the Scrum Developers accountable for their work?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Management Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Development Team as a whole</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is D.</simpara>
<simpara>The Scrum Developers on the development team holds each other accountable for their actions.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_the_impact_of_adding_developers">
<title>The Impact of Adding Developers</title>
<simpara>One reality of adding new developers to a team is that it temporarily slows the rest of the team down.</simpara>
<simpara>When new developers are onboarded, they usually take other developers away from their work, as the new developers are given help setting up printers, finding out where the washrooms are, learning about the project and figuring out how to connect to GitHub.</simpara>
<simpara>That&#8217;s just the reality of adding new people to a team.</simpara>
<simpara>For the short term, the productivity of individual members on the team will dip. Over time, individual productivity will go back to normal.</simpara>
<simpara>Just be aware of that fact on the Scrum Certification exam.</simpara>
<figure>
<title>A new log thrown on a hot campfire will temporarily lower the fire&#8217;s temperature. The same holds true for a new developer added to a hot project.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/wet-log.jpg"/>
</imageobject>
<textobject><phrase>A new developer can temporarily slow down a development team.</phrase></textobject>
</mediaobject>
</figure>
</section>
</chapter>
<chapter xml:id="_chapter_6_the_product_owner">
<title>Chapter 6: The Product Owner</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>It all starts with the Product Owner (PO).</simpara>
<simpara>Seriously, the whole idea of Scrum is for a team to work toward the creation of a product that makes stakeholders and customers happy.</simpara>
<itemizedlist>
<listitem>
<simpara>Who knows what the product&#8217;s supposed to do?</simpara>
</listitem>
<listitem>
<simpara>Who knows what features the product needs?</simpara>
</listitem>
<listitem>
<simpara>Who has the product vision?</simpara>
</listitem>
<listitem>
<simpara>Who knows what features matter the most?</simpara>
</listitem>
<listitem>
<simpara>Who can quickly answer questions about the product?</simpara>
</listitem>
<listitem>
<simpara>Who do the stakeholders trust to make decisions about the product?</simpara>
</listitem>
</itemizedlist>
<simpara>The answer to all of those questions is 'The Product Owner.'</simpara>
<simpara>Who is completely useless in terms of knowing <emphasis>how</emphasis> to build a product, <emphasis>estimating</emphasis> completion times or even <emphasis>decomposing</emphasis> product features into easily manageable chunks? That&#8217;s probably the Product Owner too.</simpara>
<simpara>The Product Owner (PO) knows the product. Just be careful never to ascribe more competency to the PO than they deserve. Assume they know nothing about actually building a product. That&#8217;s not what they&#8217;re accountable for according to Scrum.</simpara>
<section xml:id="_product_owners_maximize_value">
<title>Product Owners Maximize Value</title>
<simpara>The Product Owner knows everything there is to know about the product the team&#8217;s trying to build.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 5
</attribution>
<simpara>The Product Owner is accountable for maximizing the value of the product, resulting from the work of the Scrum Team.</simpara>
<simpara>How this is done may vary widely across organizations, Scrum Teams, and individuals.</simpara>
</blockquote>
<simpara>The Product Owner knows all about the Product, but what is the Product Owner most accountable for? The Scrum Guide makes the Product Owner&#8217;s job clear: to maximize the value of the product being created.</simpara>
<simpara>Interestingly, the Scrum Guide doesn&#8217;t make it clear how the Product Owner goes about doing that. Fortunately, I can help you out here.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_how_do_product_owners_maximize_value">
<title>How do Product Owners Maximize Value?</title>
<simpara>The PO maximizes the value of the work done by the Scrum Team by convincing the developers to work on the most important and valuable features of the product first.</simpara>
<itemizedlist>
<listitem>
<simpara>If the PO gets the developers to work on a bunch of features nobody is going to use, the PO <emphasis>is not</emphasis> maximizing value.</simpara>
</listitem>
<listitem>
<simpara>If the PO gets the developers to create features the clients are dying to get their hands on, the PO <emphasis>is</emphasis> maximizing value.</simpara>
</listitem>
</itemizedlist>
<simpara>That&#8217;s how the PO maximizes the value of the stuff the developers are delivering.</simpara>
</section>
<section xml:id="_product_backlog_management">
<title>Product Backlog Management</title>
<simpara>Effective Product Backlog management is the key to maximizing the work done by developers.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Product Owner is also accountable for effective Product Backlog management, which includes:</simpara>
<itemizedlist>
<listitem>
<simpara>Developing and explicitly communicating the Product Goal;</simpara>
</listitem>
<listitem>
<simpara>Creating and communicating Product Backlog items;</simpara>
</listitem>
<listitem>
<simpara>Ordering Product Backlog items; and,</simpara>
</listitem>
<listitem>
<simpara>Ensuring that the Product Backlog is transparent, visible, and understood.</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>Take these four bullet points seriously, because Product Backlog Management is one of the 13 categories in which the questions on the Scrum certification exam are categorized. Furthermore, from what I&#8217;ve seen, this category is more heavily weighted on the exam than other categories.</simpara>
<simpara>There is a great deal of nuance to the responsibilities, or <emphasis>accountabilities,</emphasis> of the Product Owner. The exam will test your understanding of Product Backlog management by offering false statements or providing incorrect options that seem to make plausible sense.</simpara>
</section>
<section xml:id="_product_owner_accountabilities">
<title>Product Owner Accountabilities</title>
<simpara>For example, the exam will assert in a True or False question that the <emphasis>stakeholders</emphasis> or <emphasis>customers</emphasis> are responsible for communicating the Product Goal to the team.</simpara>
<simpara>On the surface, that almost sounds like it makes sense. After all, the product is for the customers, right? So shouldn&#8217;t they communicate the Product Goal?</simpara>
<simpara>Don&#8217;t fall for the trick. The Product Owner communicates the Product Goal, not the stakeholders or the customers. The same trick goes for communicating Product Backlog items (PBIs).</simpara>
<simpara>It sounds logical that a customer or stakeholder might be the one creating or communicating details about Product Backlog items, after all, the Product Backlog represent features and functionality that the customers want, right?</simpara>
<simpara>Again, don&#8217;t fall for it. It&#8217;s the Product Owner&#8217;s job to create and communicate details about Product Backlog items to the team.</simpara>
<simpara>When it comes to the Product Backlog and the Product Goal, the responsibility falls on the shoulders of the Product Owner, nobody else.</simpara>
<section xml:id="_test_yourself_40">
<title>Test Yourself</title>
<sidebar>
<simpara>Who is responsible for managing the Product Backlog and maximizing the value of the product produced? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The management team</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The development team as a whole</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>As we just learned, the Product Owner manages the Product Backlog, and it&#8217;s also the Product Owner&#8217;s job to 'maximize the value of the product resulting from the work of the Scrum Team.'</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_41">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following statements is true? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master can add items to both the Sprint Backlog and the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner can add items to both the Sprint Backlog and the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Product Owner is fully accountable for all items added to the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Master is fully accountable for all items added to the Sprint Backlog</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Only Option C is correct.</simpara>
<simpara>The developers have full control over the <emphasis role="strong">Sprint</emphasis> Backlog and only the developers can add to it.</simpara>
<simpara>The Product Owner has full control over the <emphasis role="strong">Product</emphasis> Backlog and only the PO can add items to it.</simpara>
<simpara>Notice in the question above the term 'accountable' was used.</simpara>
<simpara>The Product Owner can delegate any of the work they are accountable for to anyone they deem fit. However, the Product Owner remains fully accountable for the results, regardless of who does the work.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_42">
<title>Test Yourself</title>
<sidebar>
<simpara>It is the job of the Scrum Master to ensure that items in the Product Backlog are properly understood by both stakeholders and team members.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false. It is stated quite clearly in the Scrum Guide that it is the job of the <emphasis>Product Owner</emphasis> to make sure "that the Product Backlog is transparent, visible and <emphasis>understood.</emphasis>"</simpara>
<simpara>Nobody should be expected to 'get into the head' of the Product Owner and assume what they are thinking.</simpara>
<simpara>While the Product Owner&#8217;s vision may not always be complete, what vision they do have should be clear to everyone involved in the project.</simpara>
</section>
</section>
<section xml:id="_who_does_the_product_owners_work">
<title>Who Does the Product Owner&#8217;s Work?</title>
<simpara>In Scrum, the developers do the development.</simpara>
<simpara>In Scrum, the Scrum Master does the Scrum Mastering.</simpara>
<simpara>Yet according to the Scrum Guide, the Product Owner can get someone else to do the gruntwork for them, just so long as they remain responsible and accountable for the final results.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Product Owner may do the Product Backlog management work, or they may delegate the responsibility to others.</simpara>
<simpara>Regardless, the Product Owner remains accountable.</simpara>
</blockquote>
</section>
<section xml:id="_product_ownership_and_trust">
<title>Product Ownership and Trust</title>
<simpara>Perhaps the most important quality of the Product Owner is that they have the complete and total trust of the organization to make decisions about what&#8217;s best for the product being built.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>For Product Owners to succeed, the entire organization must respect their decisions.</simpara>
</blockquote>
<simpara>The importance of PO trust can&#8217;t be understated with regards to product development.</simpara>
<itemizedlist>
<listitem>
<simpara>Scrum teams move quickly</simpara>
</listitem>
<listitem>
<simpara>Conditions change from day to day</simpara>
</listitem>
<listitem>
<simpara>Adaptation should happen constantly</simpara>
</listitem>
<listitem>
<simpara>Product Backlog item clarity is of utmost importance</simpara>
</listitem>
</itemizedlist>
<simpara>When developers have questions about the work they&#8217;re doing, they need answers that are clear and definitive. The Product Owner must be able to respond quickly, and the development team needs to know that the decisions of the Product Owner will not be second-guessed by management.</simpara>
<simpara>If someone else in the organization keeps overriding the decisions of the PO, the team will quickly lose trust in the Product Owner, and the whole Scrum framework falls apart.</simpara>
</section>
<section xml:id="_a_single_product_owner">
<title>A Single Product Owner</title>
<simpara>The job of the Product Owner cannot be shared amongst multiple individuals. There can&#8217;t be two co-Product Owners on a team.</simpara>
<simpara>As the Scrum Guide stated earlier, the Product Owner can delegate some of the Product Backlog management work to a cohort, but in the end, all of the accountabilities associated with being a Product Owner fall on the shoulders of only one person: the PO.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Product Owner is one person, not a committee.</simpara>
<simpara>The Product Owner may represent the needs of many stakeholders in the Product Backlog.</simpara>
</blockquote>
<simpara>Notice how the Scrum Guide states that the Product Owner may represent the needs of many stakeholders. Implied in that statement is that different stakeholders might have different interests about which features or enhancements should be prioritized.</simpara>
<simpara>When it comes to competing interests, the Product Owner is responsible for managing expectations and building a consensus amongst the stakeholders.</simpara>
</section>
<section xml:id="_keeping_tabs_on_the_product_owner">
<title>Keeping Tabs on the Product Owner</title>
<simpara>Stakeholders will always be interested in how the product is progressing. They will constantly want to know what&#8217;s been created and what the team will be working on next.</simpara>
<simpara>The three Scrum artifacts, namely the Product Backlog, Sprint Backlog, and inspectable Increments are how stakeholders get the answers to their questions about how the project is progressing.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The entire organization must respect the PO&#8217;s decisions. These decisions are visible in two ways:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>through the content and ordering of the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>through the inspectable Increment at the Sprint Review</simpara>
</listitem>
</orderedlist>
<simpara>Those wanting to change the Product Backlog can do so by trying to convince the Product Owner.</simpara>
</blockquote>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_43">
<title>Test Yourself</title>
<sidebar>
<simpara>Important decisions that about the future direction of the product being built must be made by: (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Product Owner along with a stakeholder committee</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Stakeholders or executive management</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer to this question is B, the Product Owner.</simpara>
<simpara>The Scrum Guide states quite emphatically that product-based decisions are not to be made by a committee.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_44">
<title>Test Yourself</title>
<sidebar>
<simpara>There are many stakeholder groups with many competing interests, including the priority of features, the cost of the project, the release date, and community outreach.</simpara>
<simpara>How does Scrum ensure the interests of each of these groups are recognized and respected? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Have the Scrum Master represent the interests of each stakeholder group</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Have multiple Scrum Masters, with a different Scrum Master assigned to each stakeholder group</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Have one Product Owner represent the interests of each stakeholder group</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Have multiple Product Owners, with a different Product Owner assigned to each stakeholder group</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer is C.</simpara>
<simpara>There is only one Product Owner on a Scrum Team, and that one Product Owner represents the interests of all the stakeholders.</simpara>
<simpara><?asciidoc-hr?></simpara>
<note>
<simpara>Notice how the Scrum pillars of transparency, inspection and adaptation always arise when talking about Scrum events, accountabilities and artifacts.</simpara>
</note>
</section>
</section>
<section xml:id="_trust_transparency_and_the_product_backlog">
<title>Trust, Transparency, and the Product Backlog</title>
<simpara>The PO must have the complete and total trust of the organization concerning product ownership, but trust is a two-way street. If the Product Owner is to be trusted, the Product Owner must also be transparent about what they are doing.</simpara>
<simpara>So how does the Product Owner make their decisions transparent? They do so by making the Product Backlog visible and available to all stakeholders.</simpara>
<itemizedlist>
<listitem>
<simpara>Want to know what the Product Owner is building? Look at the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>Want to know what the Product Owner has prioritized? Look at the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>Want to know what the Product Owner wants to build next? Look at the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>Want to know how features are described? Look at the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>Want to know the vision and goal for the product? Look at the Product Backlog&#8217;s Product Goal.</simpara>
</listitem>
</itemizedlist>
<simpara>The Prodcut Backlog is the key to making the decisions of the Product Owner transparent.</simpara>
</section>
<section xml:id="_inspection_of_the_increment">
<title>Inspection of the Increment</title>
<simpara>If a stakeholder wants to know what needs to be done, they look at the Product Backlog. If a stakeholder wants to know what&#8217;s being done, they look at the Product Backlog items that are part of the current Sprint&#8217;s backlog.</simpara>
<simpara>At the end of every Sprint, a Sprint Review takes place where stakeholders inspect the Product Backlog items that have met the Definition of Done to produce a product Increment.</simpara>
<simpara>The Product Owner&#8217;s commitment to visibility and transparency with regard to the Product Backlog is what builds confidence and allows management to have trust in the Scrum framework.</simpara>
</section>
<section xml:id="_negotiating_product_features">
<title>Negotiating Product Features</title>
<simpara>Not everyone will agree with what should be built next, what features should be prioritized, or how product development should be managed.</simpara>
<itemizedlist>
<listitem>
<simpara>Stakeholders might disagree.</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master might disagree.</simpara>
</listitem>
<listitem>
<simpara>The Developers might disagree.</simpara>
</listitem>
</itemizedlist>
<simpara>Disagreement is expected, especially in a fast-moving environment where things change quickly.</simpara>
<simpara>If anyone wants to change the Product Backlog, update the Product Backlog, delete something from the Product Backlog, or add something to the Product Backlog, they go through the Product Owner.</simpara>
<simpara>When it comes to the Product, and the Product Backlog that describes everything that needs to be built, the Product Owner has full control.</simpara>
<section xml:id="_test_yourself_45">
<title>Test Yourself</title>
<sidebar>
<simpara>How does the Product Owner ensure their decisions are transparent and open?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) By making their decisions visible in the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) By allowing stakeholders to see how the Product Backlog has been ordered and prioritized</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) By sending regular status updates to stakeholders.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) By scheduling weekly meetings between the Scrum Developers and stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A and B are correct.</simpara>
<simpara>Everyone who has 'skin in the game' is allowed access to the Product Backlog. This allows stakeholders, developers and every team member to know exactly what needs to be built.</simpara>
<simpara>The ordering of the Product Backlog also allows stakeholders to know which items have been given top priority, and which items are less likely to be developed in the near future.</simpara>
</section>
<section xml:id="_test_yourself_46">
<title>Test Yourself</title>
<sidebar>
<simpara>The CEO has told you, the Scrum Master, that if a key feature isn&#8217;t added to the product within the next three week, the project will be cancelled.</simpara>
<simpara>What action should you, the Scrum Master, take? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Add the feature as a Sprint Backlog item so developers can start working on it immediately</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Add a new item to the Product Backlog to represent the feature</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Cancel the Sprint and have the developers shift their focus to this new feature</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Inform the Product Owner and facilitate a conversation between the Product Owner and the CEO</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>If a change needs to be made to the Product Backlog, it&#8217;s the Product Owner who does it.</simpara>
<simpara>If the CEO needs a feature prioritized, the CEO has to go through the Product Owner.</simpara>
<simpara>Nobody has the right to add features to the Product Backlog other than the Product Owner, and nobody can inform the developers about which items are the highest priority other than the Product Owner.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_7_the_scrum_master">
<title>Chapter 7: The Scrum Master</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>People new to Scrum often assume that the Scrum Master has a great deal of power over other members of the Scrum Team.</simpara>
<simpara>They don&#8217;t.</simpara>
<simpara>Scrum Masters don&#8217;t have much power at all.</simpara>
<simpara>Most of what a Scrum Master does revolves around coaching and educating people about the Scrum framework.</simpara>
<itemizedlist>
<listitem>
<simpara>The Scrum Master doesn&#8217;t make decisions about the Product</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master doesn&#8217;t tell the developers how to manage their work</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master can&#8217;t make changes to the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master can&#8217;t make changes to the work planned for the Sprint</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master can&#8217;t hire or fire people</simpara>
</listitem>
</itemizedlist>
<simpara>Even when the Scrum Master does do something of substance, such as helping to remove impediments or acting as a <emphasis>leader who serves,</emphasis> they typically do this by educating others about how Scrum is <emphasis>supposed</emphasis> to work and coaching people about how to properly embrace the ideas expressed in the Scrum Guide.</simpara>
<figure>
<title>The Scrum Master coaches others on how to implement Scrum in accordance with the principles and ideas outlined in the Scrum Guide.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-master-guide2.jpg"/>
</imageobject>
<textobject><phrase>The Scrum Master coaches others on how to implement Scrum in accordance with the ideas outlined in the Scrum Guide.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_scrum_requires_a_scrum_master">
<title>Scrum Requires a Scrum Master</title>
<simpara>Every Scrum Team needs a Scrum Master. Scrum Teams have one Scrum Master, one Product Owner and one or more developers.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master is accountable for establishing Scrum as defined in the Scrum Guide.</simpara>
<simpara>They do this by helping everyone understand Scrum theory and practice, both within the Scrum Team and the organization.</simpara>
<simpara>The Scrum Master is accountable for the Scrum Team’s effectiveness.</simpara>
<simpara>They do this by enabling the Scrum Team to improve its practices, within the Scrum framework.</simpara>
</blockquote>
<simpara>A Scrum Master does not have to be 100% dedicated to a single Scrum Team.</simpara>
<simpara>New Scrum Teams will likely need a great deal of guidance on how to implement Scrum, but as teams mature, they typically require less coaching and less facilitation. At that point, a Scrum Master will likely split their time across several teams.</simpara>
<simpara>A great Scrum Master aims to coach themselves into irrelevance.</simpara>
<section xml:id="_test_yourself_47">
<title>Test Yourself</title>
<sidebar>
<simpara>The developers say they don&#8217;t feel ready to start development and would like to do an infrastructure Sprint to get everything set up first.</simpara>
<simpara>However, the Product Owner wants to get the first Sprint, and the first increment, under the team&#8217;s belt. What should the Scrum Master do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Cancel the first Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Tell the developers there will not be an 'infrastructure Sprint.'</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Tell the Product Owner there will be no Increment on the first Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Help the Scrum Developers understand the importance Scrum places on creating an increment in every Sprint.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The job of the Scrum Master is to:</simpara>
<itemizedlist>
<listitem>
<simpara>Coach</simpara>
</listitem>
<listitem>
<simpara>Facilitate</simpara>
</listitem>
<listitem>
<simpara>Help everyone understand how Scrum works.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="_what_the_scrum_master_doesnt_do">
<title>What the Scrum Master Doesn&#8217;t Do</title>
<simpara>People new to Scrum often ascribe too many responsibilities to the Scrum Master. They think the Scrum Master has a great deal of control over all aspects of a development project.</simpara>
<simpara>That&#8217;s not true. A Scrum Master is the master of Scrum and its implementation. They are not a business consultant, they dont determine project timelines and they definitely don&#8217;t manage a project&#8217;s budget.</simpara>
<simpara>A Scrum Master does not:</simpara>
<itemizedlist>
<listitem>
<simpara>Manage the project</simpara>
</listitem>
<listitem>
<simpara>Assign tasks to members of the team</simpara>
</listitem>
<listitem>
<simpara><emphasis>Tell</emphasis> developers what to do</simpara>
</listitem>
<listitem>
<simpara>Cancel, delay, or extend Sprints</simpara>
</listitem>
<listitem>
<simpara>Assign developers to teams</simpara>
</listitem>
</itemizedlist>
<figure>
<title>The Scrum Master facilitates, coaches and removes Scrum related impediments.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-master-job.png"/>
</imageobject>
<textobject><phrase>The Scrum Master facilitates, coaches and removes Scrum related impediments.</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_scrum_masters_and_servant_leadership">
<title>Scrum Masters and Servant Leadership</title>
<simpara>Previous editions of the Scrum Guide talked about servant leadership. Yet the 2020 Scrum Guide removes all references to the term 'servant leader.'</simpara>
<simpara>Instead, the 2020 Scrum Guide includes this line that spins the idea of servant leadership around a bit:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>Scrum Masters are true leaders who serve the Scrum Team and the larger organization.</simpara>
</blockquote>
<simpara>The Scrum Guide always tries to be very precise in its words.</simpara>
<simpara>The stewards of the Scrum framework want everyone to know that a Scrum Master is a leader first, and then a servant to the team. They are a leader who serves, not a servant who leads.</simpara>
<simpara>It&#8217;s a persnickety distinction, but an important one nevertheless.</simpara>
</section>
<section xml:id="_test_yourself_48">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following statements is most true about a Scrum Master?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master manages others with a command and control leadership approach</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master is a leader first, and a servant to their Scrum Team second</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Master is a servant-leader on the Scrum Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Master is a leader and not a servant</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>The Scrum Master is a leader first who also serves the team.</simpara>
</section>
</section>
<section xml:id="_how_scrum_masters_serve_the_scrum_team">
<title>How Scrum Masters Serve the Scrum Team</title>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the Scrum Team in several ways, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Coaching the team members in self-management and cross-functionality;</simpara>
</listitem>
<listitem>
<simpara>Helping the Scrum Team focus on creating high-value Increments that meet the Definition of Done;</simpara>
</listitem>
<listitem>
<simpara>Causing the removal of impediments to the Scrum Team’s progress;</simpara>
</listitem>
<listitem>
<simpara>Ensuring that all Scrum events take place and are positive, productive, and kept within the timebox.</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>The first two bullet points emphasize the point made earlier in the Scrum Guide. Namely that the Scrum Master is there to help the team by coaching them on how Scrum work.</simpara>
<simpara>Notice the use of terms such as 'coaching' and 'helping' in the definition of the Scrum Master&#8217;s <emphasis>accountabilities</emphasis>.</simpara>
<simpara>On the Scrum Certification exam, if you ever see an option that implies a Scrum Master will force somebody to do something, or <emphasis>tell</emphasis> somebody to do something, that option will typically be wrong.</simpara>
<simpara>A Scrum Master is:</simpara>
<itemizedlist>
<listitem>
<simpara>an educator</simpara>
</listitem>
<listitem>
<simpara>a facilitator</simpara>
</listitem>
<listitem>
<simpara>a coach</simpara>
</listitem>
<listitem>
<simpara>a diplomat</simpara>
</listitem>
<listitem>
<simpara>a leader who serves</simpara>
</listitem>
</itemizedlist>
<simpara>They are not managers or commanders who coerce others through intimidation or Machiavellian tactics.</simpara>
<section xml:id="_test_yourself_49">
<title>Test Yourself</title>
<sidebar>
<simpara>A developer is having a problem with some of the front end code. What should the Scrum Master do?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Tell the Developer what needs to be fixed in the code</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Coach the Developer on how the could approach the problems</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Instruct the Developer to change the framework</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Facilitate the Developer with access to an expert</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Force the Developer to take a different approach</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and D are correct.</simpara>
<simpara>There will be questions on the Scrum Certification exam where some of the options include the Scrum Master telling, instructing, insisting, or demanding a Developer does something. Answers like that will always be wrong and can be disqualified immediately.</simpara>
<simpara>A Scrum Master is a coach, facilitator, and a leader who serves. They are not army generals.</simpara>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>Avoid options on the Scrum Master exam that use terms like <emphasis>tell</emphasis>, <emphasis>assign</emphasis> or <emphasis>reprimand</emphasis>. Scrum Masters coach and facilitate. They don&#8217;t <emphasis>tell</emphasis>, <emphasis>assign</emphasis> or <emphasis>reprimand</emphasis>.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_removal_of_impediments">
<title>Removal of Impediments</title>
<simpara>The Scrum Guide says the Scrum Master should work to cause the removal of impediments to the progress of the team.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the Scrum Team by causing removal of impediments to the Scrum Team’s progress</simpara>
</blockquote>
<simpara>So what&#8217;s an impediment?</simpara>
<simpara>It&#8217;s important to keep in mind that we are talking about impediments within the context of the Scrum framework.</simpara>
<simpara>For example, if a manager starts asking for daily status reports from the developers detailing what they&#8217;re working on, that infringes on the development team&#8217;s ability to self-manage.</simpara>
<simpara>The demand to needlessly fill out status reports that zap the dev team&#8217;s productivity is an impediment that the Scrum Master should work to remove.</simpara>
<simpara>In this case, the Scrum Master would coach management on the need to allow developers to manage themselves, while at the same time showing the managers how the Sprint Backlog and the Sprint Review are much better ways to gain insight into the progress of the development.</simpara>
<simpara>Similarly, if a manager is trying to attend the Daily Scrum, or the Product Owner is not properly communicating the details of their Product Backlog items, these are impediments the Scrum Master can work to remove.</simpara>
</section>
<section xml:id="_in_the_context_of_scrum">
<title>In the Context of Scrum</title>
<simpara>Impediments that fall outside the context of Scrum are not typically things the Scrum Master would be expected to solve.</simpara>
<itemizedlist>
<listitem>
<simpara>If a developer can&#8217;t figure out how to book a conference room for the Daily Scrum, that&#8217;s not exactly a blocker for the Scrum Master to solve.</simpara>
</listitem>
<listitem>
<simpara>If the computer hosting the Git repository goes up in flames and the team needs a new computer, that&#8217;s not exactly a blocker for the Scrum Master to solve.</simpara>
</listitem>
</itemizedlist>
<simpara>The Scrum Master works to cause the removal of blockers that slow the team down, but only within the context of the Scrum Guide and the Scrum framework.</simpara>
<simpara>Removing blockers typically involves coaching, helping, and educating others about Scrum.</simpara>
<simpara>It doesn&#8217;t involve doing people&#8217;s jobs for them. That&#8217;s enablement, not impediment removal.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_50">
<title>Test Yourself</title>
<sidebar>
<simpara>A developer is trying to book a conference room for the Daily Scrum, but they can&#8217;t figure out how to use the company&#8217;s conference room booking system.</simpara>
<simpara>Which one of the following courses of actions should the Scrum Master take?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master should remove the blocker by learning the booking system and booking the room for the developer</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Allow the developer to book a different room each day for the daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Coach the developer on the importance of Scrum Events always taking place at the same time and location</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Have the developer only schedule the Daily Scrum on days when the same room is available</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The booking system may be a blocker or impediment to the developer, but it does not impede progress in terms of the Scrum framework. It&#8217;s not the Scrum Master&#8217;s job to teach a developer how to use their own tools.</simpara>
<simpara>Perhaps a Scrum Master could advise the developer on how to find training that would teach them how to better use the tool, or facilitate a learning session with other developers where knowledge sharing about the booking system could happen. But doing the developer&#8217;s work for them is not what the Scrum Guide means when it talks about removing impediments.</simpara>
<simpara>In this case, the only correct option in the question is for the Scrum Master to coach the developer on the importance of having Scrum Events always take place at the same time and location, so long as it&#8217;s reasonable to do so.</simpara>
</section>
</section>
<section xml:id="_examples_of_impediments_a_scrum_master_can_resolve">
<title>Examples of Impediments a Scrum Master Can Resolve</title>
<simpara>The types of impediments a Scrum Master is expected to help solve are typically things that go beyond issues that self-managed and self-organized teams can solve on their own, while at the same time falling within the context of Scrum. Examples include:</simpara>
<itemizedlist>
<listitem>
<simpara>Availability of the Product Owner</simpara>
</listitem>
<listitem>
<simpara>The team being pushed beyond a sustainable pace</simpara>
</listitem>
<listitem>
<simpara>External attempts to micro-manage the team</simpara>
</listitem>
<listitem>
<simpara>Unclear Sprint and Product Goals</simpara>
</listitem>
</itemizedlist>
<simpara>All of these issues are impediments the Scrum Master should be able to help remove through coaching, facilitation, and educating people about the proper application of the Scrum framework.</simpara>
</section>
<section xml:id="_positive_productive_and_timeboxed">
<title>Positive, Productive, and Timeboxed</title>
<simpara>The final bullet point from the Scrum Guide emphasizes the Scrum Master&#8217;s role in making sure all Scrum events happen throughout the Sprint, that they are productive, and that they are time-boxed.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the Scrum Team by ensuring that all Scrum events take place and are positive, productive, and kept within the timebox.</simpara>
</blockquote>
<simpara>When answering questions on the certification exam, remember that according to this point:</simpara>
<itemizedlist>
<listitem>
<simpara>It&#8217;s the Scrum Master&#8217;s job to ensure that all Scrum Events take place</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s the Scrum Master&#8217;s job to ensure that all Scrum Events fall within their timebox</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s the Scrum Master&#8217;s job to ensure all Scrum Events are positive</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s the Scrum Master&#8217;s job to ensure all Scrum Events take place at the same time</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s the Scrum Master&#8217;s job to ensure all Scrum Events take place in the same location</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_positivity_occurrence_and_timeboxing">
<title>Positivity, Occurrence, and Timeboxing</title>
<simpara>There will be questions on the exam that state the developers don&#8217;t want to do the Daily Scrum every day, or they want to hold the Daily Scrum in different locations on certain days of the month.</simpara>
<simpara>In these situations, the Scrum Master much coach the team on the importance of taking part in all Scrum events and making sure they take place at the same time and in the same location every time.</simpara>
<simpara>There will also be questions about whose job it is to keep Scrum Events within their allotted time. In situations like these, it is the Scrum Master&#8217;s job to coach the team about the importance of keeping within the timebox.</simpara>
<simpara>Other questions will say that developers are not enjoying the Daily Scrum, or they don&#8217;t want to take part in the Sprint Review or Retrospective. In these situations, it&#8217;s the Scrum Master&#8217;s job to coach the team about the importance of these events and try to facilitate a strategy that will make the events more positive and rewarding for those who attend them.</simpara>
<section xml:id="_test_yourself_51">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum Developers are frustrated, not clear on what they are developing, and do not want to attend the Daily Scrum. What should the Scrum Master do?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Cancel the Daily Scrum so the developers can focus on their work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Coach the team on the value the Daily Scrum brings to the team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Reprimand developers who don&#8217;t attend the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Facilitate the creation of a clearer Sprint goal during the next Sprint Planning event</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>B and D are correct.</simpara>
<simpara>The Scrum Master can&#8217;t cancel any Scrum Events. The Scrum Master must coach the team to ensure <emphasis>all Scrum Events take place,</emphasis> are positive, and are productive, so option A is incorrect. The Scrum Master also doesn&#8217;t have the authority to reprimand anyone, so option C is incorrect.</simpara>
<simpara>The Scrum Master should coach the team on the value of the Daily Scrum, and also help the team create clearer goals so they have more focus on future Sprints.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_scrum_master_and_the_product_owner">
<title>Scrum Master and the Product Owner</title>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the Product Owner in several ways, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Helping find techniques for effective Product Goal definition and Product Backlog management;</simpara>
</listitem>
<listitem>
<simpara>Helping the Scrum Team understand the need for clear and concise Product Backlog items;</simpara>
</listitem>
<listitem>
<simpara>Helping establish empirical product planning for a complex environment;</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>Notice how the term 'helping' is used repeatedly when describing how the Scrum Master serves the Product Owner. Furthermore, each item the Scrum Master is helping with is an element of Scrum, such as:</simpara>
<itemizedlist>
<listitem>
<simpara>The Product Goal</simpara>
</listitem>
<listitem>
<simpara>The Product Backlog</simpara>
</listitem>
<listitem>
<simpara>Empiricism</simpara>
</listitem>
</itemizedlist>
<simpara>Helping the Product Owner with these things works to remove impediments for the team.</simpara>
<simpara>For example, poorly defined Product Backlog items make it difficult for the developers to understand what is required of them. Encouraging the Product Owner to create clear Product Backlog items removes an impediment.</simpara>
<section xml:id="_product_owner_impediments">
<title>Product Owner Impediments</title>
<simpara>A poorly defined Product Goal means it&#8217;s not clear what the Scrum Team&#8217;s efforts are aiming at. By helping the Product Owner effectively define the Product Goal, another impediment to progress is removed.</simpara>
<simpara>A lack of empirical product planning can lead to budgetary problems, timelines getting overshot and development grinding to a halt because of unsatisfied dependencies on other teams.</simpara>
<simpara>These are all impediments to progress that can be resolved if the Scrum Master helps the Product Owner to more effectively do what the Scrum Guide requires of them.</simpara>
</section>
<section xml:id="_the_scrum_master_and_the_stakeholders">
<title>The Scrum Master and the Stakeholders</title>
<simpara>Many people approach Scrum with the assumption that the framework employs some type of command and control structure that rigidly defines hierarchies and sets boundaries around who can talk to each other and when.</simpara>
<simpara>Nothing could be further from the truth.</simpara>
<simpara>Developers, Scrum Masters, Product Owners, stakeholders, and even customers are encouraged to talk to each other. There are no rules in Scrum about stakeholders only talking to Product Owners, or developers not being allowed to talk to customers.</simpara>
<simpara>Scrum promotes the exact opposite type of approach. Scrum values openness and transparency.</simpara>
<simpara>One of the Scrum Master&#8217;s main responsibilities is to remove barriers between the stakeholders and the Scrum Team, helping to open up channels of communication and enhance transparency in the process.</simpara>
</section>
</section>
<section xml:id="_removing_barriers_between_stakeholders_and_teams">
<title>Removing Barriers Between Stakeholders and Teams</title>
<simpara>Imagine a small startup where the office has 8 desks for the following people:</simpara>
<itemizedlist>
<listitem>
<simpara>The two owners of the startup, who are also the stakeholders in the product being built</simpara>
</listitem>
<listitem>
<simpara>One Product Owner</simpara>
</listitem>
<listitem>
<simpara>One Scrum Master</simpara>
</listitem>
<listitem>
<simpara>Four developers</simpara>
</listitem>
</itemizedlist>
<simpara>Do you think the stakeholders and the developers should never talk to each other in that situation?</simpara>
<simpara>Do you think there should be some rule that says the owners should put on noise-cancelling headsets any time two developers talk about the project?</simpara>
<simpara>Or do you think it would improve transparency if the developers and the stakeholders talked to each other all the time?</simpara>
<simpara>One of the jobs of the Scrum Master is to remove barriers between stakeholders and Scrum Teams. It&#8217;s always preferable to have open and healthy lines of communication between everyone on a project.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the organization by removing barriers between stakeholders and Scrum Teams.</simpara>
</blockquote>
<simpara>Some people also get the incorrect impression that developers can only talk to stakeholders during the Sprint Review.</simpara>
<simpara>The Sprint Review is a scheduled event that makes sure the stakeholders and the Scrum Team get a chance to talk, but it is not the only time such communication is allowed.</simpara>
<simpara>Openness and transparency are always better than secrecy and ambiguity.</simpara>
</section>
<section xml:id="_planning_and_advising">
<title>Planning and Advising</title>
<simpara>The Scrum Guide doesn&#8217;t speak much about activities that happen outside of a Sprint. However, the Scrum Guide does say the Scrum Master is expected to help an organization get up and running with Scrum by helping to plan the adoption of Scrum.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the organization by planning and advising Scrum implementations within the organization</simpara>
</blockquote>
<simpara>Along with helping to get Scrum up and running, the Scrum Master is also expected to help the organization as a whole by coaching others about how Scrum works and how Scrum&#8217;s empirical approach to problem-solving can aid in product development.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 6
</attribution>
<simpara>The Scrum Master serves the organization in several ways, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Leading, training, and coaching the organization in its Scrum adoption;</simpara>
</listitem>
<listitem>
<simpara>Helping employees and stakeholders understand, and enact an empirical approach for complex work;</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>The job of the Scrum Master is to teach people how to do Scrum, how to implement Scrum, and how to improve on Scrum-based practices.</simpara>
<section xml:id="_test_yourself_52">
<title>Test Yourself</title>
<sidebar>
<simpara>The management wants regular status updates on the progress of the project, so they have scheduled a standup meeting every Friday afternoon.</simpara>
<simpara>How should you, as the Scrum Master, handle this situation?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Tell the development team they need to attend a Friday afternoon standup meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Replace Friday&#8217;s Daily Scrum with management&#8217;s standup meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Have the Product Owner speak to the management about the need for the Friday meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Speak personally to the management about the need for the Friday meeting</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>In this case, there is an issue between the Stakeholders and the Scrum Team.</simpara>
<simpara>Hopefully, management can be coached on the transparency built into Scrum, and gain enough value from the Sprint Review to remove the request for additional meetings with the Scrum Teams.</simpara>
<simpara>Also, by keeping the Scrum Developers out of an unneeded meeting, the Scrum Master has removed an impediment to the Scrum team.</simpara>
<figure>
<title>The Scrum Master is a leader who serves a team of peers and equals.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-master-leader.jpg"/>
</imageobject>
<textobject><phrase>The Scrum Master is a leader who serves a team of peers and equals.</phrase></textobject>
</mediaobject>
</figure>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_8_scrum_events">
<title>Chapter 8: Scrum Events</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>The are four events in Scrum that occur within the confines of a Sprint:</simpara>
<itemizedlist>
<listitem>
<simpara>The Sprint Planning event</simpara>
</listitem>
<listitem>
<simpara>The Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>The Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>The Sprint Review</simpara>
</listitem>
</itemizedlist>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>The Sprint is a container for all other events.</simpara>
</blockquote>
<section xml:id="_the_sprint_container">
<title>The Sprint Container</title>
<simpara>The Scrum Guide says the Sprint is a container for all other events. That means the Sprint Review, Sprint Planning, the Sprint Retrospective, and the Daily Scrum all happen within the Sprint.</simpara>
<itemizedlist>
<listitem>
<simpara>None of the Scrum events happen before the Sprint.</simpara>
</listitem>
<listitem>
<simpara>None of the Scrum events happen after the Sprint</simpara>
</listitem>
<listitem>
<simpara>Nothing in Scrum happens at the moment where one Sprint ends and the next Sprint begins</simpara>
</listitem>
</itemizedlist>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>A new Sprint starts immediately after the conclusion of the previous Sprint.</simpara>
<simpara>All the work necessary to achieve the Product Goal, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Sprint Planning,</simpara>
</listitem>
<listitem>
<simpara>Daily Scrums,</simpara>
</listitem>
<listitem>
<simpara>The Sprint Review, and;</simpara>
</listitem>
<listitem>
<simpara>The Sprint Retrospective, happen <emphasis>within</emphasis> Sprints.</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_53">
<title>Test Yourself</title>
<sidebar>
<simpara>The team wants to update their Definition of Done. When is the right time to make this change?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Any time after the current Sprint ends so long as it happens before the next Sprint starts.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) During the current Sprint&#8217;s Sprint Retrospective.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Immediately after the current Sprint ends, but before the next Sprint begins.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Any time between Sprints.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The correct answer is B.</simpara>
<simpara>Since nothing happens before or after a Sprint, all options other than B are incorrect.</simpara>
<simpara>The Sprint Retrospective is the right time to update the team&#8217;s Definition of Done.</simpara>
<simpara>Don&#8217;t be caught off guard by the fact that this question is talking about the Definition of Done (DoD) or the Sprint Retrospective, topics we don&#8217;t cover until a little later. The question isn&#8217;t testing you on your knowledge of the Definition of Done. It&#8217;s testing you on your understanding of how the Sprint works.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_the_importance_of_the_scrum_events">
<title>The Importance of the Scrum Events</title>
<simpara>The pillars of Scrum are transparency, inspection and adaptation. The Scrum events are like feedback loops that happen at regular intervals which allow inspection and adaptation to happen.</simpara>
<simpara>For the inspection that happens and the adaptations that result to be beneficial, full transparency with regards to the team&#8217;s progress, which is shown through Scrum artifacts like the Increment and the Product Backlog, is required.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Each event in Scrum is a <emphasis>formal</emphasis> opportunity to inspect and adapt Scrum artifacts.</simpara>
<simpara>These events are specifically designed to enable the transparency required. Failure to operate any events as prescribed results in lost opportunities to inspect and adapt.</simpara>
</blockquote>
<simpara>Inspection and adaptation are important concepts in the Scrum framework. The Scrum events provide scheduled opportunities for that to happen, but you should be prepared to adapt to change at any point in time.</simpara>
<simpara>Any time a Scrum Team recognizes a change that demands a response, the team should respond and adapt immediately. If it&#8217;s possible to adapt and change the plan prior to a scheduled event, the team should do so.</simpara>
<section xml:id="_test_yourself_54">
<title>Test Yourself</title>
<sidebar>
<simpara>Only the Sprint Review provides the opportunity for the Scrum Team to inspect and adapt.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false.</simpara>
<simpara>All of the Scrum events provide the opportunity for the team to inspect their work and adapt their plans.</simpara>
<simpara>Furthermore, the Scrum Team is encouraged to inspect and adapt constantly.</simpara>
<simpara>There is never a bad time to adapt your plan if it helps your team achieve the Sprint Goal or come closer to achieving the Product Goal.</simpara>
<simpara><?asciidoc-hr?></simpara>
<figure>
<title>The four Scrum events all take placed within a fifth event known as the Sprint. Each event is timeboxed, which means it cannot exceed the maximum amount of time allotted to it.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/scrum-events-times.jpg"/>
</imageobject>
<textobject><phrase>Know the timebox of each Scrum Event.</phrase></textobject>
</mediaobject>
</figure>
</section>
</section>
<section xml:id="_regularity_and_consistency">
<title>Regularity and consistency</title>
<simpara>Scrum doesn&#8217;t place restrictive controls over how development takes place, but it does request that certain patterns be followed, and it requires that those patterns happen with predictable regularity.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Events are used in Scrum to create regularity and to minimize the need for meetings not defined in Scrum.</simpara>
</blockquote>
</section>
<section xml:id="_every_scrum_event_serves_a_purpose">
<title>Every Scrum Event Serves a Purpose</title>
<simpara>Many people complain that Scrum has too many meetings. It doesn&#8217;t.</simpara>
<itemizedlist>
<listitem>
<simpara>There is one timeboxed meeting to plan what to do during the Sprint</simpara>
</listitem>
<listitem>
<simpara>There&#8217;s a quick, 15-minute Daily Scrum to allow developers to touch base</simpara>
</listitem>
<listitem>
<simpara>There is a Sprint Review where the team shares their progress</simpara>
</listitem>
<listitem>
<simpara>There&#8217;s a Sprint Retrospective where the team talks about what they could do better</simpara>
</listitem>
</itemizedlist>
<simpara>That doesn&#8217;t sound like too many meetings to me.</simpara>
<simpara>The meetings that Scrum has are intended to have maximum effectiveness on transparency, while at the same time eliminating the need for other meetings.</simpara>
<simpara>Teams that complain about Scrum having too many meetings probably aren&#8217;t doing Scrum properly. Scrum has exactly the right number of meetings.</simpara>
<section xml:id="_test_yourself_55">
<title>Test Yourself</title>
<sidebar>
<simpara>The CTO wants to schedule afternoon status meetings with the dev team to monitor the progress of an important feature. What should you, the Scrum Master, do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Allow the afternoon meetings to take place until the feature is complete</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Invite the CTO to participate in the Daily Scrum in place of the afternoon meetings</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Coach the CTO on how Scrum provides transparency through existing Scrum events and artifacts</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Have the Product Owner send reports from the Daily Scrum to the CTO to avoid the extra meetings</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>When stakeholders attempt to manage the Scrum Developers, it is often because they want more transparency into what is happening in terms of product development.</simpara>
<simpara>Scrum already provides enough meetings, in the form of events, to allow for transparent inspection of progress. Scrum artifacts like the Product Backlog and the Increment provide further transparency. If a stakeholder is concerned about transparency, a Scrum Master should coach them on how to use existing events and artifacts to get the transparency they need.</simpara>
<simpara><?asciidoc-hr?></simpara>
<warning>
<simpara>Every event in Scrum is required. You can never allow any Scrum event to be skipped. If you skip any events, you&#8217;re not doing Scrum.</simpara>
</warning>
</section>
</section>
<section xml:id="_same_time_same_place">
<title>Same Time, Same Place</title>
<simpara>While it&#8217;s not always pragmatically possible, Scrum asks that all of the Scrum events happen at the same time and in the same place.</simpara>
<itemizedlist>
<listitem>
<simpara>Sprint Planning should always take place at the same time and location</simpara>
</listitem>
<listitem>
<simpara>The Daily Scrum should always take place at the same time and location</simpara>
</listitem>
<listitem>
<simpara>The Sprint Review should always take place at the same time and location</simpara>
</listitem>
<listitem>
<simpara>The Sprint Retrospective should always take place at the same time and location</simpara>
</listitem>
</itemizedlist>
<simpara>This makes the Scrum events more predictable, easier to plan around, and more likely to have full participation from everyone involved.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Optimally, all events are held at the same time and place to reduce complexity.</simpara>
</blockquote>
<simpara>Of course, Scrum isn&#8217;t completely unreasonable and unforgiving when it comes to a rule like this. The time and place are allowed to be adjusted for pragmatic reasons.</simpara>
<simpara>I mean, if the place you typically hold the Daily Scrum is being fumigated, it&#8217;s okay to move the Daily Scrum to Conference Room B. Just try to keep the time and place as unchanged as possible.</simpara>
<section xml:id="_test_yourself_56">
<title>Test Yourself</title>
<sidebar>
<simpara>The development team wants to move Friday&#8217;s Daily Scrum, which normally takes place at 1pm, to 8 am so developers can leave work early for the weekend.</simpara>
<simpara>How do you respond as the Scrum Master? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Respect the self-managing Scrum Team and reschedule Friday&#8217;s Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Change the time of the Daily Scrum to 8am for every day of the week</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Explain to the team that the Daily Scrum must always take place at the same time and location</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Ask the Product Owner if it&#8217;s agreeable to changing the Daily Scrum to 8 am on Friday</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>Since the Daily Scrum is a Scrum Event, and since Scrum Events are supposed to take place at the same time and location every time they occur, the Scrum Master would need to explain to the team that it can&#8217;t arbitrarily change the time the Daily Scrum takes place on Fridays.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_9_the_sprint">
<title>Chapter 9: The Sprint</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>All of the development, planning, retrospectives, and reviews that happen in Scrum happen within the scope of a Sprint. It&#8217;s the most important part of Scrum.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Sprints are the heartbeat of Scrum, where ideas are turned into value.</simpara>
</blockquote>
<section xml:id="_fixed_length_sprints">
<title>Fixed Length Sprints</title>
<simpara>A Sprint has a fixed length of one month or less.</simpara>
<simpara>Not to sound pedantic, but 'fixed' means the length of a Sprint can&#8217;t be changed once it&#8217;s been started.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Sprints are fixed-length events of one month or less to create consistency.</simpara>
</blockquote>
<simpara>Sometimes the Scrum Certification exam will ask you when it&#8217;s possible to change the length of a Sprint.</simpara>
<simpara>The temptation is to say 'during Sprint planning,' but Sprint planning happens <emphasis>during</emphasis> the Sprint, so if you were to change the duration of the Sprint during Sprint Planning, it would be the length of the <emphasis>next</emphasis> Sprint you&#8217;d be changing, not the current one.</simpara>
<simpara>Discussions about the length of the Sprint and whether the Sprint should be shortened or extended are best to take place during the Sprint Retrospective. That way, if you do decide to change the Sprint length, the change can apply to the Sprint that starts after the current Sprint Retrospective finishes.</simpara>
<simpara>Having said that, the length of the Sprint shouldn&#8217;t be changed too often. It should remain relatively consistent throughout the project.</simpara>
</section>
<section xml:id="_one_month_or_less">
<title>One Month or Less</title>
<simpara>Another key point here is the fact that a Sprint is a month or less.</simpara>
<itemizedlist>
<listitem>
<simpara>It&#8217;s not 28 days</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s not 30 days</simpara>
</listitem>
<listitem>
<simpara>It&#8217;s not 4 weeks</simpara>
</listitem>
</itemizedlist>
<simpara>The length of a Sprint is one month or less.  You&#8217;ll be tested on that, so commit it to memory.</simpara>
</section>
<section xml:id="_the_start_of_the_sprint">
<title>The Start of the Sprint</title>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>A new Sprint starts immediately after the conclusion of the previous Sprint.</simpara>
</blockquote>
<simpara>We&#8217;ve already discussed how the next Sprint starts immediately after the current Sprint ends.</simpara>
<simpara>The Scrum Guide re-states this point again here, which is a good clue for you to pay attention to it. You&#8217;ll be tested on this fact several times on the exam.</simpara>
<simpara>On page 10 of the Scrum Guide, more clarification is given about exactly when the Sprint ends:</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Sprint Retrospective concludes the Sprint.</simpara>
</blockquote>
<simpara>This means there are technically two correct answers when asked when a new Sprint begins:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>A new Sprint begins as soon as the previous Sprint finishes.</simpara>
</listitem>
<listitem>
<simpara>A new Sprint begins when the Sprint Retrospective ends, since the Sprint Retrospective concludes the Sprint.</simpara>
</listitem>
</orderedlist>
<figure>
<title>All of the Scrum events happen within the scope of a Sprint. When one Sprint ends, a new immediately begins.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/sprint-container.jpg"/>
</imageobject>
<textobject><phrase>The Sprint contains all the Scrum events.</phrase></textobject>
</mediaobject>
</figure>
<simpara>&#160;<?asciidoc-br?></simpara>
<section xml:id="_test_yourself_57">
<title>Test Yourself</title>
<simpara>Sprint Zero can last for up to 49 days.</simpara>
<sidebar>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false for two reasons.</simpara>
<simpara>First, there is no such thing as 'Sprint Zero' as far as the Scrum Guide goes.</simpara>
<itemizedlist>
<listitem>
<simpara>There are no Release Sprints in Scrum</simpara>
</listitem>
<listitem>
<simpara>There are no UAT Sprints in Scrum</simpara>
</listitem>
<listitem>
<simpara>There are no QA Sprints in Scrum</simpara>
</listitem>
<listitem>
<simpara>There are no Infrastructure Sprints in Scrum</simpara>
</listitem>
<listitem>
<simpara>There are no Sprint Zeros in Scrum</simpara>
</listitem>
</itemizedlist>
<simpara>Whenever you see the term 'Sprint Zero' on the Scrum Master Certification exam, it&#8217;s usually a red herring.</simpara>
<simpara>Secondly, this statement is false because the maximum length of a Sprint in Scrum is one month. That&#8217;s the max. Often it is shorter.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_what_happens_during_the_sprint">
<title>What Happens During the Sprint?</title>
<simpara>It&#8217;s always assumed that things will change unpredictably from day to day during a Sprint. This is why Scrum advocates constantly inspecting and adapting.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>All the work necessary to achieve the Product Goal, including Sprint Planning, Daily Scrums, Sprint Review, and Sprint Retrospective, happen within Sprints.</simpara>
<simpara>During the Sprint:</simpara>
<itemizedlist>
<listitem>
<simpara>No changes are made that would endanger the Sprint Goal;</simpara>
</listitem>
<listitem>
<simpara>Quality does not decrease;</simpara>
</listitem>
<listitem>
<simpara>The Product Backlog is refined as needed; and,</simpara>
</listitem>
<listitem>
<simpara>Scope may be clarified and renegotiated with the Product Owner as more is learned.</simpara>
</listitem>
</itemizedlist>
</blockquote>
<simpara>Here are two things that are not allowed to change during the Sprint:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>No changes are made that put the Sprint Goal at risk</simpara>
</listitem>
<listitem>
<simpara>No changes are made to decrease the quality of the existing product</simpara>
</listitem>
</orderedlist>
<simpara>The Scrum Guide doesn&#8217;t have many hard and fast rules, but those are two of them.</simpara>
<tip>
<simpara>Some organizations declare a <emphasis>Sprint Zero</emphasis> at the start of the project to get the team organized. This is not a Scrum endorsed concept. When mentioned on the exam, it is typically an incorrect option.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_58">
<title>Test Yourself</title>
<sidebar>
<simpara>During development, the Scrum Team has found a selected Product Backlog item is much more complex than initially anticipated.</simpara>
<simpara>The developers believe this PBI should be broken into multiple Product Backlog items that should be scheduled across multiple Sprints.
What should you as the Scrum Master do?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Have the Scrum Developers clarify the requirements and renegotiate the scope of the Product Backlog items with the PO</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Expand the length of the Sprint so the Development team can complete the complex Product Backlog items</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Rewrite the user story so the work related to the Product Backlog Item can be completed within the current Sprint</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>A is correct.</simpara>
<simpara>If the developers have issues with the size, scope, complexity, and clarity of their work, they simply contact the Product Owner so requirements can be clarified and scope can be renegotiated.</simpara>
<simpara>Sprints are a fixed length, so they can&#8217;t ever be extended, which makes B incorrect.</simpara>
<simpara>And the Scrum Guide makes zero references to user stories, so any talk of user stories on the Scrum Master certification exam will likely be a red herring.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_59">
<title>Test Yourself</title>
<simpara>A Sprint can be any length a team decides is best, so long as it is less than a month.</simpara>
<sidebar>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is true.</simpara>
<simpara>The Scrum Guide doesn&#8217;t specify the minimum length of a Sprint. When the Scrum Guide doesn&#8217;t explicitly define something, it&#8217;s up to the Scrum Teams to figure things out for themselves.</simpara>
<simpara>I couldn&#8217;t imagine fitting a Sprint Planning meeting, Sprint Retrospective, and Sprint Review into a 24-hour Sprint, but nothing in the Scrum Guide forbids it.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_why_do_we_have_short_sprints_in_scrum">
<title>Why do we have Short Sprints in Scrum?</title>
<simpara>Some people often wonder why Scrum emphasizes short sprints.</simpara>
<simpara>The answer is simple. The longer the Sprint, the less predictable things become.</simpara>
<simpara>It&#8217;s hard enough to predict four days into the future, let alone four weeks.</simpara>
<simpara>Short Sprints make things more predictable. Short Sprints also allow more frequent interactions with stakeholders as Sprint Reviews, which occur at the end of the Sprint, take place more often.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Sprints enable predictability by ensuring inspection and adaptation of progress toward a Product Goal at least every calendar month.</simpara>
<simpara>When a Sprint’s horizon is too long the Sprint Goal may become invalid, complexity may rise, and risk may increase.</simpara>
<simpara>Shorter Sprints can be employed to generate more learning cycles and limit the risk of cost and effort to a smaller time frame.</simpara>
<simpara>Each Sprint may be considered a short project.</simpara>
</blockquote>
</section>
<section xml:id="_the_benefits_of_short_sprints">
<title>The Benefits of Short Sprints</title>
<simpara>The Scrum Guide places a great deal of emphasis on short Sprints, and there are plenty of reasons for that.</simpara>
<simpara>Remember, a Sprint Review happens at the end of a Sprint. With a 2 week Sprint, the stakeholders get to review the product twice in a month. With a 4 week Sprint, they only get to see it once.</simpara>
<simpara>A short Sprint makes it easier to manage risk. If the team is doing something wrong, they&#8217;ll find out sooner from the stakeholders in a 2-week Sprint than one that lasts a month.</simpara>
<simpara>It&#8217;s also arguably easier to estimate work for two weeks, as opposed to three or four, and the project is less likely to go completely sideways in two weeks as opposed to two months.</simpara>
</section>
<section xml:id="_empiricism_trumps_scrum_metrics">
<title>Empiricism Trumps Scrum Metrics</title>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>Various practices exist to forecast progress, like burn-downs, burn-ups, or cumulative flows.</simpara>
<simpara>While proving useful, these do not replace the importance of empiricism.</simpara>
<simpara>In complex environments, what will happen is unknown. Only what has already happened may be used for forward-looking decision-making.</simpara>
</blockquote>
<simpara>The Scrum Guide is light on metrics.</simpara>
<simpara>The only Scrum metrics referenced in the guide are mentioned here:</simpara>
<itemizedlist>
<listitem>
<simpara>Burn-down charts</simpara>
</listitem>
<listitem>
<simpara>Burn-up charts</simpara>
</listitem>
<listitem>
<simpara>Cumulative flows</simpara>
</listitem>
</itemizedlist>
<simpara>What&#8217;s more, the guide kinda throws shade on them, saying that while they are useful, they&#8217;re not as good as empirical analysis, which is a bit of a diss.</simpara>
<simpara>Still, for the exam, you do need to know what each of these charts does. You don&#8217;t need to understand them in depth, but questions will arise about what they can tell you.</simpara>
<section xml:id="_test_yourself_60">
<title>Test Yourself</title>
<sidebar>
<simpara>The development team is working with a new technology which has introduced a great deal of risk and uncertainty into the project. The Product Owner wants to reduce the Sprint time down to 2 or 3 weeks from the current Sprint length of one month.</simpara>
<simpara>What should the Scrum Master do?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Act on the Product Owner&#8217;s recommendation and reduce the Sprint length to 2 weeks</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Coach the Scrum Team on how shorter Sprints reduce risk and ask them to consider reducing the Sprint length to 2 or 3 weeks.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Explain to the Product Owner that the Sprint length cannot be changed after development has started.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Plan a week-long 'learning Sprint' where developers learn the new technology and don&#8217;t try to deliver an Increment.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Assign work with the new technology to an external Scrum Team that specializes in it.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The correct answer is B.</simpara>
<simpara>As a Scrum Master, your job is to teach people about Scrum practices and Scrum Theory and coach them on how to apply Scrum in a manner that works best for them. Neither the Scrum Master nor the Product Owner can arbitrarily set the length of a Sprint in Scrum. This is a decision that must come about through the consensus of the team.</simpara>
<simpara>C is incorrect because the length of future Sprint can be changed if the team agrees a change is needed. However, the Sprint length cannot be changed mid-sprint.</simpara>
<simpara>D is incorrect because there is no 'learning Sprints' in Scrum. Furthermore, it is a requirement that every Sprint works toward the creation of a valuable and useful Increment.</simpara>
<simpara>E is incorrect because Scrum Teams should be able to learn new technologies as required.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_scrum_cant_predict_the_future">
<title>Scrum Can&#8217;t Predict the Future</title>
<simpara>Managers and team leaders always want metrics that will help predict when a given project will be finished, or when a product will hit a given milestone. Scrum is quick to downplay the various charting techniques Agile teams frequently use to predict the future.</simpara>
<simpara>The Scrum Guide emphasizes that there are limits to the accuracy of charts and metrics, and there is no replacement for empiricism.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>While proving useful, these [charts and metrics] not replace the importance of empiricism.</simpara>
<simpara>In complex environments, what will happen is unknown.</simpara>
<simpara>Only what has already happened may be used for forward-looking decision-making.</simpara>
</blockquote>
</section>
<section xml:id="_the_importance_of_empiricism">
<title>The Importance of Empiricism</title>
<simpara>Empiricism insists that experience and evidence should form the basis of belief and knowledge, not just graphs and metrics.</simpara>
<simpara>For example, a chart might say a team is completing 20 backlog items a week. Does that mean you&#8217;ll complete 20 backlog items next week?</simpara>
<simpara>You might <emphasis>empirically</emphasis> know that two developers will be on vacation next week, or perhaps one developer is coming down with the flu.</simpara>
<simpara>Maybe World Cup starts next week and your entire offshore team is in Brazil?</simpara>
<simpara>The trend on the chart may indicate that the team will complete 20 backlog items next week, by you empirically know that sickness or vacation or the start of the World Cup will likely decimate that number.</simpara>
<simpara>That&#8217;s an example of empirical knowledge being a much better and a much more informed indicator of future performance than a burn-down chart.</simpara>
</section>
<section xml:id="_who_can_cancel_a_sprint">
<title>Who Can Cancel a Sprint?</title>
<simpara>The Scrum Certification exam will undoubtedly ask you who has the power to cancel a Sprint, and under what conditions the Sprint can be canceled.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 7
</attribution>
<simpara>A Sprint could be canceled if the Sprint Goal becomes obsolete.</simpara>
<simpara>Only the Product Owner has the authority to cancel the Sprint.</simpara>
</blockquote>
<simpara><?asciidoc-pagebreak?></simpara>
<simpara>These two points surprise people for the following three reasons:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>It is indeed possible for an active Sprint to be canceled</simpara>
</listitem>
<listitem>
<simpara>The only reason to cancel a Sprint is if the Sprint Goal becomes obsolete</simpara>
</listitem>
<listitem>
<simpara>Only the Product Owner can cancel a Sprint, not the Scrum Master or any stakeholder</simpara>
</listitem>
</orderedlist>
<simpara>Just by the authoritative nature of the name, people think a Scrum Master would have the authority to cancel a Sprint.</simpara>
<simpara>Scrum Masters don&#8217;t. Scrum Masters don&#8217;t really have much authority in Scrum.</simpara>
<simpara>A Scrum Master can&#8217;t cancel a Sprint. Only the Product Owner can, and there is only one reason why a Sprint can be canceled: the Sprint Goal has become obsolete.</simpara>
<simpara>That means none of the following reasons are justifications to cancel the Sprint:</simpara>
<itemizedlist>
<listitem>
<simpara>The development team needs more time to finish their work</simpara>
</listitem>
<listitem>
<simpara>The lead developer quit and change the GitHub password</simpara>
</listitem>
<listitem>
<simpara>The building flooded and there&#8217;s no power</simpara>
</listitem>
<listitem>
<simpara>The Scrum Master has gone on vacation</simpara>
</listitem>
<listitem>
<simpara>The CEO wants a different feature developed</simpara>
</listitem>
</itemizedlist>
<simpara>There are plenty of reasons why someone in the organization might want to cancel a Sprint, but the only reason a Sprint can be canceled is if the Sprint Goal has become obsolete, and the only person allowed to make that call is the Product Owner.</simpara>
</section>
<section xml:id="_what_isnt_said_about_the_sprint">
<title>What isn&#8217;t said about the Sprint</title>
<simpara>People want the Scrum Guide to answer all of their questions about how to run a big project. Scrum doesn&#8217;t do that.</simpara>
<simpara>Scrum provides a set of basic rules written out in a guide that&#8217;s less than 4000 words long. I wrote college papers longer than that.</simpara>
<simpara>If Scrum doesn&#8217;t provide a rule or guideline around something, then it&#8217;s up to the group of self-managing, self-organized, highly motivated professionals on the Scrum Team to figure it out on their own.</simpara>
</section>
<section xml:id="_when_to_start_the_sprint">
<title>When to Start the Sprint?</title>
<simpara>The Scrum Certification exam often tries to trick you into applying some arbitrary rule that seems to makes logical sense but doesn&#8217;t actually appear anywhere in the Scrum Guide.</simpara>
<simpara>For example, say a product has two Scrum Teams working on it, which happens quite regularly.</simpara>
<itemizedlist>
<listitem>
<simpara>Should those two teams start their Sprints on the same day?</simpara>
</listitem>
<listitem>
<simpara>Should those two teams end their Sprints on the same day?</simpara>
</listitem>
<listitem>
<simpara>Should those two teams have Sprints of equal length?</simpara>
</listitem>
<listitem>
<simpara>Should those two teams have the same Scrum Master?</simpara>
</listitem>
</itemizedlist>
<simpara>On the surface, all of those assertions seem reasonable. It seems like a nice way to keep the two Scrum Teams in sync.</simpara>
<simpara>At the same time, that approach might create chaos. Imagine stakeholders having to go to two Sprint Reviews on the same day. That might be too much for them.</simpara>
<simpara>Or maybe two teams who finish their Sprints on the same day would end up pushing their releases into production on the same day, which might cause panic for system administrators?</simpara>
<simpara>So maybe it&#8217;d be better to stagger the Sprints? Have one team start a 4 week Sprint on the first of the month, and have the other start the Sprint in the middle of the month?</simpara>
</section>
<section xml:id="_no_rule_means_theres_no_rule">
<title>No Rule Means There&#8217;s No Rule</title>
<simpara>The fact is, the Scrum Guide doesn&#8217;t care what those two teams do. The teams are expected to figure it out on their own.</simpara>
<simpara>If the Scrum Guide doesn&#8217;t speak directly to the topic, then there are no rules about it.</simpara>
<simpara>The Scrum Guide <emphasis role="strong">does</emphasis> say two teams working on the same project must share the same Product Backlog and the same Product Owner.</simpara>
<itemizedlist>
<listitem>
<simpara>Should their Sprints be the same length?</simpara>
</listitem>
<listitem>
<simpara>Should their Sprints start on the same day?</simpara>
</listitem>
</itemizedlist>
<simpara>Scrum doesn&#8217;t provide any guidance on these topics. It&#8217;s assumed your team will use empirical measures and apply lean thinking and come up with a plan that is best for them.</simpara>
<simpara>Scrum wants you to figure out what&#8217;s best for you. It just wants you to do that within the confines of the incomplete framework it provides.</simpara>
</section>
<section xml:id="_non_empirical_scrum_metrics">
<title>Non-Empirical Scrum Metrics</title>
<note>
<simpara>I queried ChatGPT so you don&#8217;t have to! I got ChatGPT to generate these descriptions. ChatGPT gets a lot of stuff about Scrum wrong, but I thought these descriptions were better than I could do on my own.</simpara>
</note>
<simpara><emphasis role="strong">Burn-Down Chart:</emphasis>
A burn-down chart is a graphical representation of the amount of work remaining in a project versus time. It tracks the progress of a project by showing the remaining work that needs to be completed on the vertical axis and the time on the horizontal axis. The chart starts with the total amount of work to be completed at the beginning of the project, and as work is completed, the line on the chart gradually moves down until it reaches zero at the end of the project.</simpara>
<simpara>Burn-down charts are useful because they help teams track progress over time and adjust their approach as necessary. For example, if the team is falling behind schedule, they can identify this early on and make changes to get back on track.</simpara>
<simpara><emphasis role="strong">Burn-Up Chart:</emphasis>
A burn-up chart is similar to a burn-down chart but shows progress differently. Rather than showing the remaining work on the vertical axis, a burn-up chart shows the amount of work completed over time. The chart starts with zero completed work at the beginning of the project, and as work is completed, the line on the chart moves up until it reaches the total amount of work to be completed at the end of the project.</simpara>
<simpara>Burn-up charts are useful because they show progress towards a goal and can help teams identify whether they are on track to complete the project on time.</simpara>
<simpara><emphasis role="strong">Cumulative Flow Chart:</emphasis>
A cumulative flow chart is a graphical representation of the flow of work in a project. It shows the amount of work in progress at any given time, as well as the rate at which work is being completed. The chart has a horizontal axis representing time and a vertical axis representing the number of tasks.</simpara>
<simpara>The chart starts with a backlog of tasks at the beginning of the project and shows how tasks move through different stages of completion over time. For example, a task might start in the "to do" column, move to "in progress", and then finally move to "completed".</simpara>
<simpara>Cumulative flow charts are useful because they help teams identify bottlenecks in their workflow and optimize their processes to increase efficiency. By tracking the rate of completion over time, teams can also identify whether they are on track to complete the project on time.</simpara>
</section>
</chapter>
<chapter xml:id="_chapter_10_sprint_planning">
<title>Chapter 10: Sprint Planning</title>
<simpara>Scrum is simple. It really is.</simpara>
<simpara>I often hear people say they hate Scrum because it&#8217;s too complicated, but I just don&#8217;t see how that&#8217;s possible. At the heart of it, Scrum just says this:</simpara>
<itemizedlist>
<listitem>
<simpara>Teams should take a bit of time every month or so to plan out the work they&#8217;re going to do</simpara>
</listitem>
<listitem>
<simpara>Developers should meet for 15 minutes every workday just to get the ball rolling again</simpara>
</listitem>
<listitem>
<simpara>At least once a month developers should share what they&#8217;ve done with stakeholders</simpara>
</listitem>
<listitem>
<simpara>After talking to stakeholders, the team should talk a bit about what did and didn&#8217;t work</simpara>
</listitem>
</itemizedlist>
<simpara>That&#8217;s it. That&#8217;s the basics of Scrum right there.</simpara>
<simpara>I honestly don&#8217;t know how anyone could say a strategy like that is a bad thing. It seems pretty basic, pretty reasonable, and pretty straightforward to me.</simpara>
<simpara>And it all starts with Sprint Planning.</simpara>
<figure>
<title>Sprint Planning is the first of the four Scrum events that take place within a Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/chart-sprint-planning.jpg"/>
</imageobject>
<textobject><phrase>Sprint Planning is the first of the four Scrum events that take place within a Sprint.</phrase></textobject>
</mediaobject>
</figure>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>Sprint Planning initiates the Sprint by laying out the work to be performed for the Sprint.</simpara>
<simpara>This resulting plan is created by the collaborative work of the entire Scrum Team.</simpara>
</blockquote>
<simpara>Harking back to a theme we&#8217;ve crowed about before: Sprint Planning happens within the Sprint, not before the Sprint begins.</simpara>
<simpara>Many questions on the Scrum Master certification exam will suggest that Sprint Planning happens before the Sprint, but that&#8217;s always a red herring. None of the Scrum events happen <emphasis>before</emphasis> or <emphasis>after</emphasis> a Sprint. Every Scrum event takes place <emphasis>within</emphasis> the Sprint.</simpara>
<section xml:id="_product_backlog_items_and_the_product_goal">
<title>Product Backlog Items and the Product Goal</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>The Product Owner ensures that attendees are prepared to discuss the most important Product Backlog items and how they map to the Product Goal.</simpara>
</blockquote>
<simpara>We learned earlier in the section about the Product Owner that the PO is the one accountable for maximizing the value of the product created by the Scrum Developers.</simpara>
<simpara>Here the Scrum Guide re-emphasizes that point, stating that the Product Owner comes to the Sprint Planning meeting with a list of the most important features for the team to work on.</simpara>
</section>
<section xml:id="_whos_invited_to_the_sprint_planning_meeting">
<title>Who&#8217;s Invited to the Sprint Planning Meeting?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>The Scrum Team may also invite other people to attend Sprint Planning to provide advice.</simpara>
</blockquote>
<simpara>Notice how anyone can be invited to participate in the Sprint Planning meeting. That&#8217;s a significant point and a concept you&#8217;ll be tested on often.</simpara>
<simpara>There are often multiple Scrum Teams working on a single product.</simpara>
<simpara>Remember, the maximum size of a Scrum team is 10 people, but it&#8217;s not unusual for an enterprise software development project to have thirty or forty developers working on it. That means there will be at least four or five Scrum teams all working on the same product at the same time.</simpara>
</section>
<section xml:id="_minimizing_inter_team_dependencies">
<title>Minimizing Inter-team Dependencies</title>
<simpara>So how do multiple teams avoid stepping on each other&#8217;s toes, working on the same backlog items at the same time, or working on items that might block another team&#8217;s progress?</simpara>
<simpara>How do teams avoid being blocked by a dependency their chosen work has on something that has to be completed by another team first?</simpara>
<simpara>One way to manage these issues is to have representatives from other Scrum Teams attend your team&#8217;s Sprint Planning meeting. Representatives from other teams can share their progress, insights, and even deliverable dates for dependencies your project might have on their work.</simpara>
<simpara>Or better yet, if you know that certain Product Backlog items have dependencies on work that might not get completed by another team by the time you need them, then you can just pick different backlog items to work on.</simpara>
<simpara>The fewer the dependencies your work has on other teams, the better.</simpara>
<section xml:id="_test_yourself_61">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum Developers might want to invite someone outside the Scrum Team to attend the Sprint Planning meeting to discuss pertinent issues.</simpara>
<simpara>Which one of the following is true about people not on the Scrum Team and Sprint Planning?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Outsiders can discuss how Product Backlog items align with corporate strategy and business goals</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Outsiders can discuss how certain Product Backlog items may be of importance to customers</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Outsiders can discuss dependencies on other items other teams are developing</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Outsiders can discuss risks or problems that might be encountered in the current Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) All of the above are true.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option E is correct.</simpara>
<simpara>There is nothing in the Scrum Guide that forbids Scrum Developers from inviting people outside the team to the Sprint Planning meeting, and there are no pragmatic restriction on what outsiders can talk about.</simpara>
<simpara>If someone outside the Scrum Team can provide guidance on how to best plan the Sprint, they are more than welcome to speak up and contribute during Sprint Planning.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_62">
<title>Test Yourself</title>
<sidebar>
<simpara>It is the Scrum Master&#8217;s responsibility to ensure all Sprint Planning attendees are ready and prepared to discuss the Product Backlog.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false. It&#8217;s the <emphasis>Product Owner</emphasis> who ensures attendees are prepared to discuss how Product Backlog items map to the Product Goal.</simpara>
<simpara>Don&#8217;t over-assign responsibilities to the Scrum Master. The name 'Scrum Master' is deceptively authoritative. The reality is, the Scrum Master has very few powers on the Scrum Team outside of coaching people on how to implement Scrum effectively.</simpara>
<simpara>The Product Owner owns the Product Backlog. Duties related to the Product Backlog typically fall in the Product Owner&#8217;s lap.</simpara>
</section>
</section>
<section xml:id="_answering_why_what_and_how">
<title>Answering Why, What, and How</title>
<simpara>The goal of Sprint Planning is to come up with good answers to the questions of why, what, and how. You&#8217;ll be asked 'straight up' on the Scrum Master certification exam which three questions the Sprint Planning event tries to solve.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>Sprint Planning addresses the following topics:</simpara>
<itemizedlist>
<listitem>
<simpara>Topic One: Why is this Sprint valuable?</simpara>
</listitem>
<listitem>
<simpara>Topic Two: What can be Done in this Sprint?</simpara>
</listitem>
<listitem>
<simpara>Topic Three: How will the chosen work get done?</simpara>
</listitem>
</itemizedlist>
<simpara>Sprint Planning is timeboxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter.</simpara>
</blockquote>
</section>
<section xml:id="_time_boxing_sprint_planning_to_8_hours">
<title>Time Boxing Sprint Planning to 8 Hours</title>
<simpara>To pass the Scrum certification exam you have to know the timeboxes for Scrum events like you know the back of your hand. Memorize these:</simpara>
<itemizedlist>
<listitem>
<simpara>Sprint Planning is timeboxed to a maximum of 8 hours for a one-month Sprint</simpara>
</listitem>
<listitem>
<simpara>The Daily Scrum is timeboxed to a maximum of 15 minutes</simpara>
</listitem>
<listitem>
<simpara>The Sprint Review is timeboxed to a maximum of 4 hours</simpara>
</listitem>
<listitem>
<simpara>The Sprint Retrospective is timeboxed to a maximum of 3 hours</simpara>
</listitem>
</itemizedlist>
<section xml:id="_test_yourself_63">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following Scrum events can last the longest?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The Review, Planning, and Retrospective are all time-boxed to 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; F) There is no time limit for the Sprint Planning</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The answer to this question is C, Sprint Planning.</simpara>
<simpara>Sprint Planning is timeboxed to a maximum of 8 hours. Hopefully, your team can get it done a bit faster.</simpara>
</section>
</section>
<section xml:id="_why_is_the_sprint_valuable">
<title>Why is the Sprint valuable?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>The Product Owner proposes how the product could increase its value and utility in the current Sprint.</simpara>
</blockquote>
<simpara>It is the Product Owner who is responsible for ensuring the work of the Scrum Team produces the greatest amount of value.</simpara>
<simpara>The Product Owner knows what needs to be built to make the product better. However, the Product Owner has no innate knowledge  of <emphasis>how</emphasis> to build it. That&#8217;s the job of the developers.</simpara>
<section xml:id="_negotiating_product_backlog_item_selection">
<title>Negotiating Product Backlog Item Selection</title>
<simpara>During Sprint Planning, the Product Owner can only propose their ideas of what should be built next.</simpara>
<simpara>The Developers may have pragmatic objections to what the Product Owner proposes and push for other Product Backlog items to be made part of the current Sprint instead.</simpara>
<simpara>Just think about a Scrum Team constructing a house.</simpara>
<simpara>The Product Owner would likely want the kitchens and the bathrooms done first, but the foundation of the house may not be laid. In that case, the developers would need to explain how the kitchen and the bathrooms will need to wait for a future Sprint as the home&#8217;s foundation has to be poured first.</simpara>
<simpara>Figuring out exactly what&#8217;s required to implement a Product Backlog item is known as <emphasis>decomposition.</emphasis></simpara>
<figure>
<title>The Developers will negotiate with the Product Owner over which PBIs can feasibly be selected for the Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/negotiate-backlog.jpg"/>
</imageobject>
<textobject><phrase>The PO and developers negotiate over the Sprint Backlog.</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_test_yourself_64">
<title>Test Yourself</title>
<sidebar>
<simpara>Who on the Scrum Team is responsible for maximizing the value of the work performed by the developers? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Team as a whole</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>Maximizing the value of the work performed by the Scrum Team is the job of the Product Owner.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_65">
<title>Test Yourself</title>
<sidebar>
<simpara>Who first proposes an initial plan for the Sprint at the Sprint Planning meeting? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Team as a whole</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>It is the Product Owner who presents a list of Product Backlog items they would like to have built in the current Sprint.</simpara>
<simpara>This becomes the starting point for negotiations, suggestions, decomposition and compromises during Sprint Planning.</simpara>
<simpara><?asciidoc-hr?></simpara>
<note>
<simpara>The term <emphasis>epic</emphasis> is used by some Agile practitioners to describe large Product Backlog items that will take multiple Sprints to complete. While most people in the Agile community are familiar with the term, it is not a term that is ever used in the Scrum Guide.</simpara>
</note>
</section>
</section>
<section xml:id="_sprint_planning_and_the_sprint_goal">
<title>Sprint Planning and the Sprint Goal</title>
<simpara>The Sprint Goal must be finalized by the end of the Sprint Planning meeting, and while other things may change during a Sprint, the Sprint Goal is one of the Scrum artifacts that is not allowed to be edited, adjusted, or changed once Sprint Planning has concluded.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>The whole Scrum Team then collaborates to define a Sprint Goal that communicates why the Sprint is valuable to stakeholders.</simpara>
<simpara>The Sprint Goal must be finalized before the end of Sprint Planning.</simpara>
</blockquote>
<simpara>Each Sprint needs a goal. The Sprint Goal keeps the developers focused throughout the Sprint.</simpara>
<simpara>The Sprint Goal also provides another important function - it provides transparency into the Sprint, as it allows stakeholders to know what developers are working towards.</simpara>
<simpara>The Sprint Goal must be finalized before the Sprint Planning meeting ends and it cannot change throughout the Sprint. The Sprint Plan can change, and the items in the Sprint Backlog can change. It&#8217;s expected that those things will change as conditions change throughout the Sprint. But the Sprint Goal must be finalized before the Sprint Planning meeting ends, and it cannot change during the Sprint.</simpara>
<section xml:id="_test_yourself_66">
<title>Test Yourself</title>
<sidebar>
<simpara>What happens if it becomes clear towards the end of the Sprint that the team will not achieve the Sprint Goal? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Sprint is canceled and a new Sprint Planning meeting takes place</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The next Sprint adopts the current Sprint&#8217;s Goal continuously  until the goal is achieved</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The developers update the Sprint Goal so that it is achievable by the end of the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The developers talk about the Sprint Goal during the Sprint Retrospective</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>It&#8217;s not unusual for a Sprint Goal to go unfulfilled. Sometimes things just don&#8217;t go according to plan.</simpara>
<simpara>If the Sprint Goal is not achieved, the Scrum Team talks about what they can do better during the Sprint Retrospective.</simpara>
<simpara>Nothing ever gets automatically rolled over from one Sprint into the next. Each Sprint starts new with an empty Sprint Backlog, as it&#8217;s assumed that since conditions, expectations, and realities are constantly changing, what made sense when the prior Sprint was planned won&#8217;t necessarily make sense for the current one.</simpara>
<simpara>The only exception to this rule is when suggestions on how to improve team practices made during the Sprint Retrospective get added to the next Sprint&#8217;s Sprint Backlog. Other than that one corner case, items in the Sprint Backlog are never carried over from one Sprint to the next.</simpara>
</section>
<section xml:id="_test_yourself_67">
<title>Test Yourself</title>
<sidebar>
<simpara>Who creates the Sprint Goal? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Team as a whole</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The Scrum Team as a whole creates the Sprint Goal.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_product_backlog_item_selection">
<title>Product Backlog Item Selection</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>Through discussion with the Product Owner, the Developers select items from the Product Backlog to include in the current Sprint.</simpara>
<simpara>The Scrum Team may refine these items during this process, which increases understanding and confidence.</simpara>
</blockquote>
<simpara>During Sprint Planning, the Product Owner proposes what they believe should be built during the Sprint. The Product Owner explains what they believe will provide the most value to stakeholders and customers. However, it&#8217;s the developers who decide which Product Backlog items get added to the Sprint.</simpara>
<simpara>Going back to the home construction analogy, the construction workers know more about how to build a house than the homeowner.</simpara>
<simpara>The developers know what dependencies exist, what order certain Product Backlog items need to be created in, and what&#8217;s the best path forward in order to complete the highest value Product Backlog items.</simpara>
<simpara>The developers, not the Scrum Master or the Product Owner, have the final say over what gets added to the Sprint.</simpara>
</section>
<section xml:id="_product_backlog_refinement">
<title>Product Backlog Refinement</title>
<simpara>While Sprint Planning is an opportunity for the developers to talk about Product Backlog items, clarify them and refine them, this is not the only time developers are allowed to talk with the Product Owner. The developers can call up the Product Owner at any time during the Sprint to clarify details about Product Backlog items.</simpara>
<simpara>Quite often the Product Owner works out of the same war room as the developers. That way the PO can answer developer&#8217;s questions about the product as soon as they arise.</simpara>
<simpara>The Scrum Master certification exam will often provide an incorrect option that indicates there are only certain times a developer can talk to a stakeholder or Product Owner. Discussion between everyone on the Scrum Team and every stakeholder in the organization is never discouraged in the Scrum Guide. The more conversations the better!</simpara>
<section xml:id="_test_yourself_68">
<title>Test Yourself</title>
<sidebar>
<simpara>The Product Owner selects the Product Backlog items developers will work on during the Sprint.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false.</simpara>
<simpara>The Product Owner can prioritize the Product Backlog and inform the developers about which Product Backlog items provide the most value, but the developers have the final say over which items they build during the Sprint.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_69">
<title>Test Yourself</title>
<sidebar>
<simpara>Sprint Planning is the only time Scrum Developers are allowed to talk to the Product Owner to discuss Product Backlog items.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false.</simpara>
<simpara>The Product Owner should always be available to answer questions about the product.</simpara>
<simpara>Conversations between the Product Owner, the developers, the Scrum Master, and the stakeholders should happen freely and openly. Nothing in the Scrum Guide forbids it.</simpara>
</section>
</section>
<section xml:id="_what_can_be_done_in_this_sprint">
<title>What can be Done in this Sprint?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>Selecting how much can be completed within a Sprint may be challenging.</simpara>
<simpara>However, the more the Developers know about:</simpara>
<itemizedlist>
<listitem>
<simpara>their past performance,</simpara>
</listitem>
<listitem>
<simpara>their upcoming capacity, and;</simpara>
</listitem>
<listitem>
<simpara>their Definition of Done,</simpara>
</listitem>
</itemizedlist>
<simpara>the more confident they will be in their Sprint forecasts.</simpara>
</blockquote>
<simpara>According to the Scrum Guide, it&#8217;s the Scrum Developers who are expected to estimate how much can be done in a Sprint.</simpara>
<simpara>It is up to the Scrum Developers to know about their capacity, past performance, and ability to follow through on the Definition of Done to estimate how much work they can accomplish.</simpara>
<simpara>This makes sense. After all, it is the developers who choose the PBIs they plan to implement in the Sprint. If they were unable to estimate their work capacity, they wouldn&#8217;t know how many Product Backlog items to choose.</simpara>
<section xml:id="_test_yourself_70">
<title>Test Yourself</title>
<sidebar>
<simpara>Who estimates how much work can be accomplished in a Sprint? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Team as a whole</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The Scrum Team and stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Developers are the ones who select how many Product Backlog items to include in the Sprint. The Developers are the ones who are estimating how much they believe can be accomplished.</simpara>
</section>
</section>
<section xml:id="_how_will_the_chosen_work_get_done">
<title>How will the chosen work get done?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 8
</attribution>
<simpara>For each selected Product Backlog item, the Developers plan the work necessary to create an Increment that meets the Definition of Done.</simpara>
<simpara>This is often done by decomposing Product Backlog items into smaller work items of one day or less.
How this is done is at the sole discretion of the Developers. No one else tells them how to turn Product Backlog items into Increments of value.</simpara>
</blockquote>
<simpara>A Product Backlog item may take months to complete.</simpara>
<simpara>In Scrum, the Developers need to break epic Product Backlog items down into smaller pieces. This is known as decomposition.</simpara>
<simpara>The goal of decomposition is to break each Product Backlog item down into a series of chunks that can be estimated to take a day or less to complete.</simpara>
</section>
<section xml:id="_no_points_or_user_stories_in_scrum">
<title>No Points or User Stories in Scrum</title>
<simpara>Note that the Scrum Guide never talks about <emphasis>points</emphasis> or <emphasis>user stories.</emphasis></simpara>
<simpara>Quite often you will see a question on the Scrum Master certification exam where one of the answers talks about breaking user stories down into a certain number of points. Those answers are always wrong.</simpara>
<simpara>That&#8217;s not to say Scrum Teams can&#8217;t use points or user stories if they find them helpful. It&#8217;s just that they&#8217;re not discussed in the Scrum Guide and are not a part of the Scrum Framework.</simpara>
<simpara>The Scrum Master certification exam is testing you on Scrum, not peripheral processes and methodologies people sometimes integrate into Scrum.</simpara>
<section xml:id="_test_yourself_71">
<title>Test Yourself</title>
<sidebar>
<simpara>What is the best way for a developer to approach a complicated Product Backlog item?<?asciidoc-br?>
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Have the development team break the Product Backlog item down into smaller user stories.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Have the Product Owner break the Product Backlog item down into smaller user stories.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Break the Product Backlog item down into 1-point increments, representing 1 day of work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Break the Product Backlog items into multiple work items of one day or less</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The term 'user story' is never mentioned once in the Scrum Guide. Neither is 'points.' That makes the first three options wrong.</simpara>
<simpara>Given an epic Product Backlog item, the Scrum Developers should try to decompose it into multiple, smaller work items that will take a day or less for a developer to complete.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_the_outcome_of_sprint_planning">
<title>The Outcome of Sprint Planning</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Sprint Goal, the Product Backlog items selected for the Sprint, plus the plan for delivering them are together referred to as the Sprint Backlog.</simpara>
</blockquote>
<simpara>Note that the Sprint Backlog is more than just the set of Product Backlog items the team has selected for the Sprint. It also includes a Sprint Goal that cannot change during the Sprint, along with a plan that is expected to change daily.</simpara>
<section xml:id="_test_yourself_72">
<title>Test Yourself</title>
<sidebar>
<simpara>The Sprint Backlog is composed of: (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Backlog items selected for the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Product Backlog items selected for the Sprint, and the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Product Backlog items selected for the Sprint, the Sprint Goal, and the Sprint Plan</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Product Backlog items selected for the Sprint, the Sprint Goal the Sprint Plan, and the Product Goal</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Sprint Backlog consists of the Product Backlog items selected for the Sprint, the Sprint Goal and the Sprint Plan.</simpara>
</section>
<section xml:id="_test_yourself_73">
<title>Test Yourself</title>
<sidebar>
<simpara>Who is allowed to view the Sprint Goal? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Only members of the Scrum Team</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Team and stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The Sprint Goal helps to build transparency into the development process by allowing stakeholders to know what the team is trying to achieve during the current Sprint.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_74">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following are the most <emphasis>empirical</emphasis> measures of how much the Scrum Developers can accomplish in a given Sprint?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Burndown charts</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Past performance</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Burnup charts</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Upcoming capacity</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and D are correct.</simpara>
<simpara>Upcoming capacity and knowledge of past performance are more empirical measures than burndown or burnup charts.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_11_the_daily_scrum">
<title>Chapter 11: The Daily Scrum</title>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>Some frameworks and methodologies have a <emphasis>Daily Standup</emphasis>.</simpara>
<simpara>We don&#8217;t have <emphasis>Daily Standups</emphasis> in Scrum.</simpara>
<simpara>First of all, the term is ableist. Not everyone can stand.</simpara>
<simpara>Secondly, the idea behind a Daily <emphasis>Standup</emphasis> is that it won&#8217;t last long because people will eventually get tired of standing.</simpara>
<simpara>Scrum practitioners don&#8217;t believe the infliction of pain is the proper way to motivate people.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Daily Scrum is a 15-minute event for the Developers of the Scrum Team.</simpara>
<simpara>The purpose of the Daily Scrum is to inspect progress toward the Sprint Goal and adapt the Sprint Backlog as necessary, adjusting the upcoming planned work.</simpara>
</blockquote>
<figure>
<title>The purpose of the Daily Scrum is for the developers to metaphorically get the ball moving again.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/daily-scrum-ball-moving.jpg"/>
</imageobject>
<textobject><phrase>The Daily Scrum gets the ball moving again.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_adapting_to_change">
<title>Adapting to Change</title>
<simpara>Things change from day to day, and changes can mess up your plans.</simpara>
<simpara>That&#8217;s why developers get together everyday for a Daily Scrum so they can talk about anything that is impeding or accelerating their progress towards the Sprint Goal.</simpara>
<simpara>If things are going sideways, the developers adapt. If things are going better than expected, the developers adapt.</simpara>
<simpara>The goal of the Daily Scrum is for developers to talk, discuss progress, and quickly solve any problems that have arisen since they last spoke.</simpara>
<simpara>The Daily Scrum is time-boxed to 15 minutes.</simpara>
<figure>
<title>The Daily Scrum takes place on every workday during the Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/chart-daily-scrum.jpg"/>
</imageobject>
<textobject><phrase>The Daily Scrum takes place on every workday during the Sprint.</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_keep_the_time_and_location_consistent">
<title>Keep the Time and Location Consistent</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>To reduce complexity, it is held at the same time and place every working day of the Sprint.</simpara>
</blockquote>
<simpara>All Scrum events are supposed to be held at the same time and in the same location. This applies to the Daily Scrum as well.</simpara>
<simpara>This particular point is more salient when developers work in the same office building. You don&#8217;t want the developers wasting 10 minutes every day trying to figure out which conference room to go to.</simpara>
<simpara>In the post-COVID age where teams are largely remote, 'the same time and location' now equates to a Zoom or Microsoft Teams call that takes place at the same time every day.</simpara>
</section>
<section xml:id="_demystifying_the_daily_scrum">
<title>Demystifying the Daily Scrum</title>
<simpara>Let&#8217;s get real about the Daily Scrum for a minute.</simpara>
<simpara>People always complain that Scrum has too many time wasting meetings. When they say that, they&#8217;re usually talking about the Daily Scrum.</simpara>
<simpara>If your Daily Scrum feels like a waste of time, you&#8217;re doing the Daily Scrum wrong. The Daily Scrum shouldn&#8217;t feel like a formal, highly structured meeting. The Daily Scrum should feel casual and natural.</simpara>
<simpara>Scrum doesn&#8217;t try to put an overwhelming amount of structure and ceremony around the development process. At it&#8217;s heart, Scrum just says:</simpara>
<itemizedlist>
<listitem>
<simpara>Plan your work before you start. That&#8217;s why we have the Sprint Planning meeting.</simpara>
</listitem>
<listitem>
<simpara>Regularly review your work with stakeholders. That&#8217;s why we have the Sprint Review.</simpara>
</listitem>
<listitem>
<simpara>Regularly talk about how you can improve things. That&#8217;s why we have the Sprint Retrospective.</simpara>
</listitem>
</itemizedlist>
<simpara>It&#8217;s hard to think someone could argue that any of these meeting are bad. These activities just naturally evolve from any team that&#8217;s serious about software development.</simpara>
<simpara>Scrum also says that every workday the developers should talk to each other about what they&#8217;re doing. That hardly seems unreasonable.</simpara>
</section>
<section xml:id="_keep_the_daily_scrum_simple">
<title>Keep the Daily Scrum Simple</title>
<simpara>Scrum isn&#8217;t some framework that demands developers use some crazy set of new and revolutionary techniques. All Scrum really does is document the practices good development teams already do.</simpara>
<simpara>Did you ever work on a group project in High School or College? One where you had to meet-up with five friends in the library a few times to get the project finished?</simpara>
<simpara>What did you all do for the first 15 minutes when you got together?</simpara>
<itemizedlist>
<listitem>
<simpara>You bitched about your prof</simpara>
</listitem>
<listitem>
<simpara>You talked about what other teams were doing</simpara>
</listitem>
<listitem>
<simpara>You discussed what you managed to get done</simpara>
</listitem>
<listitem>
<simpara>You talked about what you didn&#8217;t get done</simpara>
</listitem>
<listitem>
<simpara>You asked others for help with things you couldn&#8217;t manage</simpara>
</listitem>
<listitem>
<simpara>You talked about things that were blocking your progress and you offered help to others</simpara>
</listitem>
</itemizedlist>
<simpara>You&#8217;d have a pretty dysfunctional team if y&#8217;all didn&#8217;t chat casually about these types of things when you got together.</simpara>
<simpara>The Daily Scrum is simply trying to capture the natural energy and enthusiasm highly motivated teams should already have when working collaboratively on a project.</simpara>
</section>
<section xml:id="_rules_of_the_daily_scrum">
<title>Rules of the Daily Scrum</title>
<simpara>The basic rules of the Daily Scrum are as follows:</simpara>
<itemizedlist>
<listitem>
<simpara>The Daily Scrum should take place at the same time every workday</simpara>
</listitem>
<listitem>
<simpara>The Daily Scrum should take place in the same location every day</simpara>
</listitem>
<listitem>
<simpara>During the Daily Scrum developers talk about their work, not last night&#8217;s hockey game</simpara>
</listitem>
<listitem>
<simpara>The Daily Scrum should never last longer than 15 minutes</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_daily_scrum_time_and_location">
<title>Daily Scrum Time and Location</title>
<simpara>When I think about developers chatting about their work, their progress and their blockers, I envision them doing it when they all get into the office in the morning. However, the Daily Scrum doesn&#8217;t have to take place in the morning. It can take place at lunch-hour or even at the end of the day.</simpara>
<simpara>In fact, with modern teams distributed across the globe, what might be the start of the day for some members of the team might be the afternoon for others.</simpara>
<simpara>The Scrum Guide doesn&#8217;t say what time the Daily Scrum needs to take place, only that it should take place every workday - not every day, just every <emphasis>workday.</emphasis></simpara>
<figure>
<title>The Daily Scrum is for the developers and managed by the developers. If the Scrum Master or the Product Owner attends, they do so at the behest of the developers.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/developers-in-scrum.jpg"/>
</imageobject>
<textobject><phrase>The Daily Scrum is for the developers. Neither the Scrum Master nor the Product Owner is required to attend.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_test_yourself_75">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following is the responsibility of the Scrum Master during the Daily Scrum?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Scrum Master should coach the developers about keeping the Daily Scrum timeboxed to 15 minutes</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master should ensure each developer gets a chance to speak</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Master starts the Daily Scrum by asking the 3 standard Daily Scrum questions</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Scrum Master starts the Daily Scrum by asking every developer to stand up.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The only correct option here is A.</simpara>
<simpara>The Daily Scrum is for the developers. It is run by developers and managed by developers.</simpara>
<simpara>The only responsibility the Scrum Master has with regards to the Daily Scrum is ensuring it is run in such a way that complies with the rules of Scrum. In regards to this quiz question, that means the only correct option is keeping the Daily Scrum to less than 15 minutes.</simpara>
<simpara>Past Scrum Guides mentioned the 3 Daily Scrum questions:</simpara>
<itemizedlist>
<listitem>
<simpara>What did you do yesterday?</simpara>
</listitem>
<listitem>
<simpara>What do you plan to do today?</simpara>
</listitem>
<listitem>
<simpara>Is anything impeding your progress?</simpara>
</listitem>
</itemizedlist>
<simpara>These questions were removed from the 2020 Scrum Guide. They can be asked if the developers find them helpful, but they are certainly not a requirement of the Daily Scrum.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_76">
<title>Test Yourself</title>
<sidebar>
<simpara>The development team has decided to only work one day a week and will only hold the Daily Scrum on Mondays.</simpara>
<simpara>How do you react as a Scrum Master? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Inform the team Scrum development cannot happen only one day a week</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Have Human Resources talk to the development lead about their proposed work schedule</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Cancel the Sprint and consult the Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Inform the team this is fine so long as the only workday is Monday</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>There&#8217;s nothing in the Scrum Guide that forbids a team from working only one day a week.</simpara>
<simpara>The only Scrum requirement with regards to this question is that the Daily Scrum happens every <emphasis>workday.</emphasis> So if the team holds the Daily Scrum on the Monday, then the work should be happening on the Monday too.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Daily Scrum is a 15-minute event for the Developers of the Scrum Team. To reduce complexity, it is held at the same time and place <emphasis>every working day</emphasis> of the Sprint.</simpara>
</blockquote>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_77">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum team wants to move the Daily Scrum to the atrium on Fridays to help them wind down after a busy workweek. How do you, as a Scrum Master, respond? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Explain to them that the Daily Scrum should always take place at the same time and place</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Allow the developers to be self-managed and hold their Daily Scrum in the Atrium on Fridays</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Confirm with the Product Owner that it is okay to change the Daily Scrum location on Fridays</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) As the Scrum Master, work to remove any impediments standing in the way of running the Friday Scrum in the atrium</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>The Scrum Guide says the Daily Scrum should always take place at the same time and place.</simpara>
<simpara>This is true for all Scrum events. For the sake of consistency, their time and location should remain constant.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_when_scrum_masters_and_pos_do_development">
<title>When Scrum Masters and POs do Development</title>
<simpara>Have you ever seen a Scrum Master or Product Owner do some work that becomes part of a usable Increment?</simpara>
<simpara>When they do, they become developers themselves.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>If the Product Owner or Scrum Master is actively working on items in the Sprint Backlog, they participate as Developers.</simpara>
</blockquote>
<simpara>This is an interesting statement that answers several questions about how Scrum works.</simpara>
<simpara>People often wonder if a Scrum Master or Product Owner is allowed to actively do development. The answer is a big YES.</simpara>
<simpara>If a Scrum Team of five people is cast away on a deserted island and scrambling to build a shelter before a storm comes, everyone on that Scrum Team is going to pitch in. If your life is on the line, you&#8217;re not going to refuse to help build a shelter just because you&#8217;ve accepted the designation of <emphasis>Scrum Master.</emphasis></simpara>
<simpara>On small teams and startups, the Scrum Master might also be the Product Owner and they might be a developer as well. It might not be a best practice, but there&#8217;s nothing that forbids it. More to the point, it might make a lot of sense in a really small development firm.</simpara>
<simpara>So yes, a developer can also be a Scrum Master or a Product Owner or vice versa.</simpara>
<simpara>The only requirement is that if a Scrum Master or Product Owner does development, they are expected to attend the Daily Scrum and participate as though they were a developer, not the Scrum Master or PO. They relinquish their Scrum Master or Product Owner accountabilities while the Daily Scrum takes place.</simpara>
</section>
<section xml:id="_who_participates_in_the_daily_scrum">
<title>Who participates in the Daily Scrum?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Developers can select whatever structure and techniques they want, as long as their Daily Scrum focuses on progress toward the Sprint Goal and produces an actionable plan for the next day of work.
This creates focus and improves self-management.</simpara>
</blockquote>
<simpara>The Daily Scrum is for the developers. It should be run by the developers, organized by developers and managed by the developers. How they manage or organize it is up to them.</simpara>
<simpara>Anyone can <emphasis>attend</emphasis> the daily Scrum. If the developers want to hire a circus clown to create balloon animals while the Daily Scrum proceeds, then all the power to them. But only the developers are supposed to <emphasis>participate.</emphasis></simpara>
<simpara>Now that&#8217;s not to say the developers can&#8217;t ask the Scrum Master or Product Owner a question during the Daily Scrum. That may be necessary to properly adapt their plan towards the Sprint Goal. But the Scrum Master, Product Owner and stakeholders shouldn&#8217;t be active participants driving the even. The Daily Scrum must be driven by the developers.</simpara>
</section>
<section xml:id="_purpose_of_the_daily_scrum">
<title>Purpose of the Daily Scrum</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>Daily Scrums improve communications, identify impediments, promote quick decision-making, and consequently eliminate the need for other meetings.</simpara>
</blockquote>
<simpara>Things change from day to day. The Daily Scrum is a time for developers to deal with issues that have arisen that may delay their progress and put the Sprint Goal in jeopardy.</simpara>
<simpara>Hopefully, having the whole team of developers together in the Daily Scrum will help to bring about quick solutions to problems that may have arisen.</simpara>
</section>
<section xml:id="_meetings_dont_replace_pragmatic_communication">
<title>Meetings Don&#8217;t Replace Pragmatic Communication</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Daily Scrum is not the only time Developers are allowed to adjust their plans.</simpara>
<simpara>They often meet throughout the day for more detailed discussions about adapting or re-planning the rest of Sprint’s work.</simpara>
</blockquote>
<simpara>Don&#8217;t ever think that the Daily Scrum is the only time developers are allowed to talk about their work, or that it&#8217;s the only time to change the Sprint plan.</simpara>
<simpara>If a team of construction workers was putting up a roof, and a wind gust blew all their shingles away, would they wait until the next day&#8217;s Scrum to form a new plan, or would they reformulate their plans right away?</simpara>
<simpara>Developers can meet with each other any time they like. They can schedule additional meetings as a group. They can meet one-on-one at each other&#8217;s desks. They can have dinner together after work.</simpara>
<simpara>There&#8217;s nothing in the Scrum Guide that restricts communication between developers, stakeholders, Product Owners, Scrum Masters, or anyone else. The only thing the Scrum Guide recommends is a few time-boxed events that guarantee opportunities for communication, transparency, and adaptation to take place.</simpara>
<section xml:id="_test_yourself_78">
<title>Test Yourself</title>
<sidebar>
<simpara>A critical bug has appeared in your code that may put the Sprint Goal at risk. What should you, as a developer, do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Speak to your fellow developers as soon as possible to find a way to adapt the Sprint plan</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Bring the issue up in the next day`s Daily Scrum meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Inform the Scrum Master and have the Scrum Master remove the impediment</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Pass the issue to the Quality Assurance team and continue working on Product Backlog items</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>Any time an issue comes up it should be addressed as soon as possible. If a critical bug appears in your code, and you think it will impact the Sprint Goal, then meet with your fellow developers right away and see if you can adapt by adjusting the Sprint plan.</simpara>
<simpara>Don&#8217;t ever let the Scrum Guide and the various Scrum events and artifacts impede pragmatic thinking. If a problem arises that needs to be taken care of immediately, take care of it immediately. Don&#8217;t wait for the next Scrum event to adapt.</simpara>
</section>
</section>
<section xml:id="_does_scrum_really_have_too_many_meetings">
<title>Does Scrum Really Have Too Many Meetings?</title>
<simpara>When people say Scrum has too many meetings, I ask them which ones they think should be removed?</simpara>
<itemizedlist>
<listitem>
<simpara>Should there be no planning?</simpara>
</listitem>
<listitem>
<simpara>Should there be no product reviews with  clients?</simpara>
</listitem>
<listitem>
<simpara>Should there be no retrospective to reflect on the Sprint?</simpara>
</listitem>
</itemizedlist>
<simpara>Or is the Daily Scrum the problem? Do they think having developers talking to each other in the Daily Scrum for a few minutes every day is too much?</simpara>
<simpara>If a team of six or seven developers is working on a project that burns through $250,000 worth of budget money a month, I&#8217;d say it was a problem if those developers didn&#8217;t talk to each other for a few minutes every day.</simpara>
<simpara>Scrum doesn&#8217;t have too many meetings. Scrum gets it just about right.</simpara>
</section>
</chapter>
<chapter xml:id="_chapter_12_sprint_review">
<title>Chapter 12: Sprint Review</title>
<simpara>On any project, not just in the domain of Scrum, stakeholders should continually get updates on the state of the product they&#8217;ve invested in.</simpara>
<simpara>That&#8217;s one of the ideas behind the continuous delivery of software - to constantly deliver software to your clients and stakeholders every time a new feature or Increment of value has been completed.</simpara>
<figure>
<title>The Sprint Review is the second-last Scrum event to take place within the Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/chart-sprint-review.jpg"/>
</imageobject>
<textobject><phrase>The Sprint Review is the second-last Scrum event to take place within the Sprint.</phrase></textobject>
</mediaobject>
</figure>
<simpara>The more often the stakeholders see new features added to the product, the more in tune they will be with the pace at which the project is progressing. Regular updates allow stakeholders to inspect what has been completed and provide feedback so the team can adapt accordingly.</simpara>
<simpara>The Sprint Review exists to make sure stakeholders get at least one chance to inspect the work completed during every Sprint.</simpara>
<section xml:id="_review_inspect_and_adapt">
<title>Review, Inspect and Adapt</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The purpose of the Sprint Review is to inspect the outcome of the Sprint and determine future adaptations.</simpara>
<simpara>The Scrum Team presents the results of their work to key stakeholders and progress toward the Product Goal is discussed.</simpara>
</blockquote>
<simpara>The Sprint Review is the one Scrum event where everyone is invited and allowed to participate. That not only includes everyone on the Scrum Team but stakeholders as well.</simpara>
<simpara>The purpose of the Sprint Review is pretty self-explanatory. It&#8217;s for everyone to review what was done and talk about what they like, what they don&#8217;t like, and where they think things should go next.</simpara>
</section>
<section xml:id="_sprint_review_participants">
<title>Sprint Review Participants</title>
<simpara>Everyone gets to speak at the Sprint Review. Developers can speak to stakeholders, stakeholders can speak to the Scrum Master, and the Product Owner can speak to developers.</simpara>
<simpara>There are no restrictions in the Scrum Guide about developers ever talking to stakeholders, the Scrum Master talking to stakeholders, or the Product Owner talking to stakeholders.</simpara>
<simpara>The Sprint Review intentionally and concertedly brings everyone together once per Sprint, but there&#8217;s no rule that says developers can&#8217;t talk to stakeholders about development when they pass each other in the hallways at work.</simpara>
<simpara>The more openness and transparency the better, as far as Scrum is concerned.</simpara>
<section xml:id="_test_yourself_79">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following is true about the Sprint Review? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Only the Scrum Master is allowed to talk directly to stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Only the Product Owner is allowed to talk directly to stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Developers are not allowed to talk directly to stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Sprint Review is the only Scrum event where both stakeholders and the Scrum Team are invited</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Everyone who has skin in the game is invited to the Sprint Review.</simpara>
<simpara>As for the other options, there are no rules anywhere in the Scrum Guide that forbids any members of the Scrum Team from talking to the stakeholders.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_what_to_show_in_the_review">
<title>What to show in the Review?</title>
<simpara>There&#8217;s a small detail left out of this discussion of the Sprint Review which is somewhat important. For example, the following sentence doesn&#8217;t exactly specify what the stakeholders get to see during the Sprint Review.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>During the event, the Scrum Team and stakeholders review <emphasis>what was accomplished</emphasis> in the Sprint and what has changed in their environment.</simpara>
</blockquote>
<simpara>The term <emphasis role="strong">what was accomplished</emphasis> is somewhat vague.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_only_completed_increments_in_the_sprint_review">
<title>Only Completed Increments in the Sprint Review</title>
<simpara>We discover in the Scrum Guide&#8217;s section on artifacts that only <emphasis>completed Increments,</emphasis> that is work items that have met the Definition of Done, are to be presented at the Sprint Review.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>Multiple Increments may be created within a Sprint. The sum of the Increments is presented at the Sprint Review thus supporting empiricism.</simpara>
<simpara>Work cannot be considered part of an Increment unless it meets the Definition of Done.</simpara>
</blockquote>
<simpara>Any work that is partially done is not to be presented. Only Increments, or the sum of all the Increments created during the Sprint, are to be discussed at the Sprint Review.</simpara>
</section>
<section xml:id="_a_discussion_on_what_to_do_next">
<title>A Discussion on What to do Next</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>Based on this information, attendees collaborate on what to do next.</simpara>
<simpara>The Product Backlog may also be adjusted to meet new opportunities.</simpara>
</blockquote>
<simpara>The Sprint Review gives everyone on the team, and the stakeholders, a chance to talk about what they like, what they don&#8217;t like, and what they think should change in terms of how the product is being developed.</simpara>
<simpara>If the stakeholders don&#8217;t like the direction development is taking and want some proposed features removed, the Product Owner may remove those features from the Product Backlog.</simpara>
<simpara>If there are features the stakeholders decide they want, then the Product Owner can either add them to the Product Backlog or prioritize them if they already exist.</simpara>
<section xml:id="_another_scrum_pillars_feedback_loop">
<title>Another Scrum Pillars Feedback Loop</title>
<simpara>The Sprint Review helps create transparency, is an opportunity for inspection, and allows for adaptation.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Sprint Review is the second to last event of the Sprint and is time-boxed to a maximum of four hours for a one-month Sprint.</simpara>
<simpara>For shorter Sprints, the event is usually shorter.</simpara>
</blockquote>
<simpara>You are guaranteed to get questions about the timebox length of every event on the Scrum Master certification exam. Remember that the Sprint Review is time-boxed to a maximum of 4 hours.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_80">
<title>Test Yourself</title>
<sidebar>
<simpara>Which of the following Scrum events are time-boxed to 4 hours? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Sprint Review only</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Sprint Retrospective only</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Sprint Planning only</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Sprint Review and the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) The Sprint Review and Sprint Planning</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct. Only the Sprint Review is time-boxed to 4 hours.</simpara>
<simpara>The Sprint Retrospective is 3 hours. The Sprint Planning event is capped at 8 hours, and the Daily Scrum is 15 minutes.</simpara>
<simpara><?asciidoc-hr?></simpara>
<figure>
<title>Death by PowerPoint is not a great way to run a Sprint Review.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/death-by-ppt.jpg"/>
</imageobject>
<textobject><phrase>Death by PowerPoint.</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_the_sprint_review_is_not_simply_a_presentation">
<title>The Sprint Review is not Simply a Presentation</title>
<blockquote>
<attribution>
2020 Scrum Guide page 9
</attribution>
<simpara>The Sprint Review is a working session and the Scrum Team should avoid limiting it to a presentation.</simpara>
</blockquote>
<simpara>The Scrum Master certification exam will likely include a question or two where one of the incorrect options implies that the purpose of the Sprint Review is to simply do a <emphasis>demo</emphasis> or deliver a <emphasis>presentation.</emphasis> Don&#8217;t fall for that bait.</simpara>
<simpara>The Sprint Review is much more than just a presentation to stakeholders.</simpara>
<simpara>The purpose of the Sprint Review is to inspect the work that was performed during the Sprint and adapt according to feedback received from the stakeholders. At the end of a Sprint Review, the stakeholders should know what was done during the Sprint, and the Scrum Team should have a better idea of what they should be working on next.</simpara>
<simpara>When the Sprint Review is complete, it&#8217;s time for the team to do a Sprint Retrospective, after which the Sprint comes to an end.</simpara>
</section>
</chapter>
<chapter xml:id="_chapter_13_sprint_retrospective">
<title>Chapter 13: Sprint Retrospective</title>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>&#160;<?asciidoc-br?></simpara>
<simpara>When the work is done, and the Sprint Review is complete, it&#8217;s time for the Scrum Team to circle the wagons and chat a bit about what went right, what went wrong, and what they want to change when the next Sprint begins.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The purpose of the Sprint Retrospective is to plan ways to increase quality and effectiveness.</simpara>
<simpara>The Scrum Team inspects how the last Sprint concerning:</simpara>
<itemizedlist>
<listitem>
<simpara>individuals</simpara>
</listitem>
<listitem>
<simpara>interactions</simpara>
</listitem>
<listitem>
<simpara>processes</simpara>
</listitem>
<listitem>
<simpara>tools</simpara>
</listitem>
<listitem>
<simpara>the Definition of Done.</simpara>
</listitem>
</itemizedlist>
<simpara>Inspected elements often vary with the domain of work.</simpara>
</blockquote>
<figure>
<title>The Sprint Retrospective is the last Scrum event to take place within the Sprint.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/chart-sprint-retrospective.jpg"/>
</imageobject>
<textobject><phrase>The Sprint Retrospective is the last Scrum event to take place within the Sprint.</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_updating_the_sprint_length_and_the_dod">
<title>Updating the Sprint Length and the DoD</title>
<simpara>One question that comes up regularly on the Scrum Master certification exam is <emphasis>when should the Definition of Done be discussed or updated.</emphasis> This paragraph makes it clear that the Sprint Retrospective is the correct time to do so.</simpara>
<simpara>It&#8217;s not stated explicitly, but the Sprint Retrospective is also the right time to discuss changing the Sprint length if that&#8217;s desired. That way if a change is agreed upon, the change can be applied to the next Sprint that starts when the retrospective ends.</simpara>
<simpara>The Scrum Guide also indicates that discussions about how tools are working, how people are getting along, and how well processes are implemented within the Scrum framework are best discussed during the Sprint Retrospective.</simpara>
<section xml:id="_scrum_never_stifles_communication">
<title>Scrum Never Stifles Communication</title>
<simpara>If the certification exam ever asks when developers should talk about how well their tools are working, or how well they have applied the Scrum framework, the correct answer will be the Sprint Retrospective, not the Daily Scrum.</simpara>
<simpara>This is a bit counter-intuitive because you would think developers would be encouraged to talk about their tools and their processes when they&#8217;re all together in the Daily Scrum, but if it&#8217;s a meta-discussion about how things are working, that type of discussion belongs in the retrospective.</simpara>
<simpara>If a given tool is causing an immediate problem and creating a blocker or impediment that puts the Sprint Goal at risk, then the discussion would be more apt to take place during the Daily Scrum.</simpara>
</section>
<section xml:id="_test_yourself_81">
<title>Test Yourself</title>
<sidebar>
<simpara>The developers are not happy with how the Sprint framework has been implemented. When is the best time to discuss this? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) During the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) During the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) During Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) During the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) During their annual review</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Discussions about how things are working, how various processes are being implemented, and even discussions about how to do Scrum better should happen during the Sprint Retrospective.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_the_8020_principle">
<title>The 80/20 Principle</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>Assumptions that led them astray are identified and their origins explored.</simpara>
<simpara>The Scrum Team discusses:</simpara>
<itemizedlist>
<listitem>
<simpara>what went well during the Sprint,</simpara>
</listitem>
<listitem>
<simpara>what problems it encountered, and</simpara>
</listitem>
<listitem>
<simpara>how those problems were or were not solved.</simpara>
</listitem>
</itemizedlist>
<simpara>The Scrum Team identifies the most helpful changes to improve its effectiveness.</simpara>
<simpara>The most impactful improvements are addressed as soon as possible.</simpara>
<simpara>They may even be added to the Sprint Backlog for the next Sprint.</simpara>
</blockquote>
<simpara>This is a weird section. It&#8217;s the most wishy-washy section of the entire Scrum Guide.</simpara>
<simpara>Terms like 'most helpful', 'most impactful', and 'may even be' don&#8217;t provide much clarity. It&#8217;s strange because the Scrum Guide is usually very precise about the terms and phrases it uses.</simpara>
<simpara>I think the guide is just reflecting the 80/20 principle that asserts a few of your best ideas will end up having the largest impact, so don&#8217;t feel the need to include every single suggestion made during the Sprint Retrospective in the next Sprint.</simpara>
<simpara>The idea is to act upon the best suggestions for improvement right away.</simpara>
</section>
<section xml:id="_adding_to_the_next_sprints_backlog">
<title>Adding to the Next Sprint&#8217;s Backlog?</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>They may even be added to the Sprint Backlog for the next Sprint.</simpara>
</blockquote>
<simpara>That&#8217;s an interesting line.</simpara>
<simpara>In Scrum, we&#8217;re never really supposed to look beyond the current Sprint.</simpara>
<simpara>We don&#8217;t plan for future Sprints before they start because we never really know how conditions are going to change. One of the Scrum values is the <emphasis>focus.</emphasis></simpara>
<simpara>Here is one of the rare instances in the Scrum Guide where something generated in one Sprint is added directly to the next Sprint.</simpara>
<simpara>It was stated earlier in this book that when the team goes into the Sprint Planning meeting, the Sprint Backlog is empty, as all unfinished Sprint Backlog items are returned to the Product Backlog when the previous Sprint ends. This is the only instance I can think of where a Sprint Backlog item can be carried over from the current Sprint to the next.</simpara>
<section xml:id="_test_yourself_82">
<title>Test Yourself</title>
<sidebar>
<simpara>Focus is an important part of the Scrum framework. Scrum Teams are expected to stay focused on the current Sprint.</simpara>
<simpara>When during the current Sprint are developers encouraged to add items to the next Sprint&#8217;s Backlog? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) During Sprint planning before the Sprint begins</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) During the Sprint Review as they collaborate on what to do next</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) During the Sprint Retrospective as the Scrum Team identifies ways to improve its effectiveness</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Scrum Teams should never look beyond the timeline of the current Sprint</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>During the Sprint Retrospective, the Scrum Team may add strategies for improvement to the next Sprint&#8217;s Backlog.</simpara>
</section>
<section xml:id="_test_yourself_83">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum Team has come up with two great ideas on how to improve their processes during the Sprint Retrospective. What should they do with these ideas? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Add them to the current Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Add them to the current Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Add them to the next Product&#8217;s Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Add them to the next Sprint&#8217;s Sprint Backlog</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>According to the Scrum Guide, great ideas that come out in the Sprint Retrospective can be placed in the Sprint Backlog of the next Sprint.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_the_conclusion_of_the_sprint">
<title>The Conclusion of the Sprint</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Sprint Retrospective concludes the Sprint.</simpara>
<simpara>It is timeboxed to a maximum of three hours for a one-month Sprint.</simpara>
<simpara>For shorter Sprints, the event is usually shorter.</simpara>
</blockquote>
<simpara>The Sprint Retrospective is the last timeboxed event mentioned in the Scrum Guide. If you&#8217;re keeping track, the length of the events in Scrum are:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Sprint</emphasis>: up to 1 month</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Planning</emphasis>: up to 8 hours</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Review</emphasis>: up to 4 hours</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Retrospective</emphasis>: up to 3 hours</simpara>
</listitem>
</itemizedlist>
<simpara>While a Sprint is given a fixed time that cannot be extended while a Sprint is in progress, the Scrum Guide never actually refers to a Sprint as a 'timeboxed' event.</simpara>
<simpara>And yes, I do realize this is probably the <emphasis>umpteenth</emphasis> time I&#8217;ve mentioned the duration of each of the Scrum events in this book. That&#8217;s because you&#8217;re likely going to get five or six questions on the topic, so it&#8217;s not a topic to treat trivially.</simpara>
</section>
<section xml:id="_after_the_sprint">
<title>After the Sprint</title>
<simpara>Once the Sprint Retrospective ends, the Sprint is over and the next Sprint begins.</simpara>
<simpara>Every event happens within the scope of a Sprint in Scrum. When one Sprint ends, the next one starts immediately. The end of the Sprint Retrospective is the official end of the Sprint.</simpara>
<section xml:id="_test_yourself_84">
<title>Test Yourself</title>
<sidebar>
<simpara>Which Scrum event marks the end of the Sprint? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Sprint Deployment</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The final event in the Sprint is the Sprint Retrospective.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_85">
<title>Test Yourself</title>
<sidebar>
<simpara>A new Sprint starts: (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Immediately after Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Immediately after the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Immediately after the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Immediately after deployment of the Increment</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>A new Sprint begins immediately after the Sprint Retrospective is over.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_86">
<title>Test Yourself</title>
<sidebar>
<simpara>What is the correct order, from longest to shortest? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Sprint, Review, Retrospective, Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Sprint, Planning, Review, Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Sprint, Planning, Retrospective, Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Planning, Sprint, Review, Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Planning, Review, Retrospective, Sprint</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>The Daily Scrum was left out of these options. It is the shortest of all Scrum Events at 15 minutes.</simpara>
</section>
<section xml:id="_test_yourself_87">
<title>Test Yourself</title>
<sidebar>
<simpara>In what order do the Scrum events run? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Sprint, Review, Retrospective, Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Sprint, Planning, Review, Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Sprint, Planning, Retrospective, Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Planning, Sprint, Review, Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Planning, Review, Retrospective, Sprint</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>Everything happens within a Sprint.</simpara>
<simpara>Once the Sprint starts, planning occurs. Then work is done and a review is performed. Then a retrospective allows the team to discuss ways to improve for the next Sprint, which starts when the Sprint Retrospective ends.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_14_the_scrum_artifacts">
<title>Chapter 14: The Scrum Artifacts</title>
<simpara>There are three Scrum artifacts:</simpara>
<itemizedlist>
<listitem>
<simpara>The Product Backlog</simpara>
</listitem>
<listitem>
<simpara>The Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>The Increment of work the developers create</simpara>
</listitem>
</itemizedlist>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>Scrum’s artifacts represent work or value.</simpara>
<simpara>They are designed to maximize the transparency of key information.</simpara>
<simpara>Thus, everyone inspecting them has the same basis for adaptation.</simpara>
</blockquote>
<section xml:id="_answering_three_important_questions">
<title>Answering Three Important Questions</title>
<simpara>The existence of these artifacts helps provide transparency by answering the three questions stakeholders constantly want answers to:</simpara>
<itemizedlist>
<listitem>
<simpara>What is currently being done? That&#8217;s answered by the Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>What needs to be done? That&#8217;s answered by the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>What&#8217;s been done? That&#8217;s answered by the Increments of work that have been produced</simpara>
</listitem>
</itemizedlist>
<simpara>Stakeholders get angry and upset when they don&#8217;t have answers to these questions. The existence of transparent and inspectable Scrum Artifacts tends to calm the nerves of nervous stakeholders.</simpara>
<figure>
<title>Each Scrum artifact, namely the Product Backlog, Sprint Backlog and the Increment, has a corresponding Scrum commitment. The Product Goal, Sprint Goal and the Increment are the Scrum commitments.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/artifacts-commitments.jpg"/>
</imageobject>
<textobject><phrase>Each of the three Scrum artifacts has a corresponding Scrum commitment.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_test_yourself_88">
<title>Test Yourself</title>
<sidebar>
<simpara>Stakeholders are waiting on a new feature and they want to know if it&#8217;s being actively developed this Sprint. Where would stakeholders go to find this information? (Select 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Definition of Done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Sprint Goal</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>The Sprint Backlog provides transparency into what is being worked on during the current Sprint.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_scrum_commitments">
<title>Scrum Commitments</title>
<simpara>The <emphasis>Scrum commitment</emphasis> is something new that was added to the 2020 Scrum Guide. Each artifact now maps to a Scrum commitment.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>Each artifact contains a commitment to ensure it provides information that enhances transparency and focuses against which progress can be measured:</simpara>
<itemizedlist>
<listitem>
<simpara>For the Product Backlog it is the Product Goal.</simpara>
</listitem>
<listitem>
<simpara>For the Sprint Backlog it is the Sprint Goal.</simpara>
</listitem>
<listitem>
<simpara>For the Increment it is the Definition of Done.</simpara>
</listitem>
</itemizedlist>
<simpara>These commitments exist to reinforce empiricism and the Scrum values for the Scrum Team and their stakeholders.</simpara>
</blockquote>
<simpara>Every arrow needs a target.</simpara>
<simpara>Without a target, an archer doesn’t know where to aim. Nor would they know if they ever hit their mark.</simpara>
<simpara>In Scrum, artifacts are the arrows. Scrum commitments are the targets.</simpara>
<simpara>The Scrum Guide demands that work revolves around the following three artifacts:</simpara>
<itemizedlist>
<listitem>
<simpara>A product backlog that represents every feature to be developed;</simpara>
</listitem>
<listitem>
<simpara>A list of backlog items selected for the Sprint; and</simpara>
</listitem>
<listitem>
<simpara>Increments of progress that stakeholders can regularly review</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_why_do_we_need_scrum_commitments">
<title>Why do we need Scrum commitments?</title>
<simpara>A Scrum commitment is the evaluation criteria against which a Scrum artifact is measured. Scrum commitments improve transparency and enhance an Agile Scrum developer’s focus as the project progresses.</simpara>
<simpara>Here&#8217;s how the three Scrum commitments match up to the three Scrum artifacts mentioned above:</simpara>
<itemizedlist>
<listitem>
<simpara>The product backlog’s Scrum commitment is to the product goal.</simpara>
</listitem>
<listitem>
<simpara>The sprint backlog ‘s Scrum commitment is to the sprint goal.</simpara>
</listitem>
<listitem>
<simpara>The increment’s Scrum commitment is to to the definition of done.</simpara>
</listitem>
</itemizedlist>
<simpara>Agile practitioners don’t like plans. In fact, "responding to change over following a plan" is one of the four declared values stated in the Agile Manifesto.</simpara>
<simpara>Plans aren’t inherently bad. In Scrum, every sprint begins with a sprint planning session. Planning is a requirement of the sprint framework. Not planning is definitely an Agile anti-pattern.</simpara>
<simpara>The problem is that when conscientious people get a plan, they do their best to follow it. Sometimes that is counter-productive, especially when conditions change, which they inevitably do.</simpara>
<figure>
<title>Scrum commitments are the targets for the Scrum artifacts to aim at.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/darts.jpg"/>
</imageobject>
<textobject><phrase>Scrum commitments are targets for artifacts.</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_scrum_commitments_goals_and_plans">
<title>Scrum commitments, goals and plans</title>
<simpara>Compared to a plan, a Scrum commitment is a higher-order calling to which team members aspire. Goal-driven work is just a better motivator than plan-driven work.</simpara>
<simpara>The main purpose of the three commitments is to provide a clear, shared, and agreed upon goal that guides all work. The commitments also encourage participants to constantly evaluate how effectively their planned work will help the team follow through on a given commitment.</simpara>
<simpara>If the work, plan and commitment are misaligned, developers should sound the alarm and change the plan, because the commitment represents a higher calling than the plan.</simpara>
</section>
<section xml:id="_empiricism_and_the_scrum_commitments">
<title>Empiricism and the Scrum Commitments</title>
<simpara>The Scrum framework’s three pillars of empiricism are:</simpara>
<itemizedlist>
<listitem>
<simpara>Transparency</simpara>
</listitem>
<listitem>
<simpara>Inspection</simpara>
</listitem>
<listitem>
<simpara>Adaptation</simpara>
</listitem>
</itemizedlist>
<simpara>With a clear product goal, well-defined sprint goal and a concise definition of done, the software development process is more transparent and becomes more Agile.</simpara>
<simpara>This allows stakeholders to objectively inspect the project’s progress, and immediately change and adapt when individual efforts don’t align with the team’s greater commitments.</simpara>
<simpara>Before an archer pulls back her bow, she aims at a target.</simpara>
<simpara>For Scrum practitioners, the Scrum commitment is the target to which their artifacts aim.</simpara>
<section xml:id="_test_yourself_89">
<title>Test Yourself</title>
<sidebar>
<simpara>The goal of every Sprint is to create an Increment that lives up to what ultimate measure? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Standard performance metrics</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Quality Assurance review</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Definition of Done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) A conflict-free merge into the master branch</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>C is correct.</simpara>
<simpara>The Increment commits to measuring up to and conforming to the Definition of Done.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_90">
<title>Test Yourself</title>
<sidebar>
<simpara>How do the Scrum Artifacts reinforce empiricism for stakeholders? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) They help the stakeholder&#8217;s chart velocity</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) They help Quality Assurance teams confirm quality metrics are achieved</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) They provide insight into what has been done and what is being done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) They help stakeholders estimate the overall cost of the project</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>Empiricism is all about observation and experience. The Scrum Artifacts allow stakeholders to know precisely what has been done and exactly what is currently being worked on.</simpara>
<simpara>This provides more empirical evidence of the state of the project than burndown charts or cumulative flow diagrams.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_91">
<title>Test Yourself</title>
<sidebar>
<simpara>The Scrum Artifacts exist to reinforce empiricism only for the Scrum Team.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false. The Scrum Artifacts are accessible to the Stakeholders as well as the Scrum Team. They help reinforce empiricism for everyone involved in the project.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_15_the_product_backlog">
<title>Chapter 15: The Product Backlog</title>
<simpara>The Product Owner is the one member of the Scrum Team who is tasked solely with the job of 'optimizing the value of the work done by the Scrum Team.'</simpara>
<simpara>The way the Product Owner does that is by keeping an ordered list of all the features and improvements the product under development requires.</simpara>
<simpara>This list is known as the Product Backlog.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Product Backlog is an emergent, ordered list of what is needed to improve the product.</simpara>
</blockquote>
<simpara>The Scrum Guide&#8217;s definition makes it clear that the Product Backlog is the list of the features that need to be built to complete the project. The developers on a Scrum Team should never be working on anything that isn&#8217;t part of the Product Backlog.</simpara>
<figure>
<title>The Product Owner is solely accountable for the Product Backlog.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/emergent-list.jpg"/>
</imageobject>
<textobject><phrase>The Product Owner manages the Product Backlog.</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_an_ordered_list_of_features">
<title>An Ordered List of Features</title>
<simpara>The Scrum Guide&#8217;s definition of the Proudct Backlog demands that the list be ordered in a sequence that puts the important items at the top.</simpara>
<simpara>There is also only one Product Backlog. Any product feature that&#8217;s needed and likely to be build within a reasonable time horizon is listed in the one, true Product Backlog.</simpara>
<simpara>Items that have existed in the backlog for an extended period of time without having been built, or items that are not likely to be built any time soon should be pruned away. The Product Backlog should help provide focus. It shouldn&#8217;t not be cluttered with items that are never likely to be built.</simpara>
<simpara>If there&#8217;s a product enhancement that needs doing it exists in the Product Backlog.</simpara>
<simpara>The Product Backlog will change over time as more is known about what the stakeholders want and what the client needs. That&#8217;s the idea of the Product Backlog being 'emergent.'</simpara>
</section>
<section xml:id="_single_source_of_work">
<title>Single Source of Work</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Product Backlog is the single source of work undertaken by the Scrum Team.</simpara>
</blockquote>
<simpara>The fact that the Product Backlog is the <emphasis>single source</emphasis> of work to be undertaken by the Scrum Team reinforces the fact that it is also the <emphasis>only</emphasis> source of work to be undertaken by the Scrum team.</simpara>
<simpara>If the Scrum Team is going to work on something, then it has to first be part of the Product Backlog.</simpara>
<sidebar>
<simpara>Only the Scrum Master can assign work to the Scrum Developers that is not a part of the Product Backlog.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false for a number of reasons.</simpara>
<simpara>First, the Scrum Master doesn&#8217;t assign anyone any work, ever. A Scrum Master might coach a Product Owner on how to do their job better, but they never assign anyone work.</simpara>
<simpara>Secondly, the Product Backlog is the only source of work for the Scrum Team. If it&#8217;s not part of the Product Backlog, the Scrum Developers shouldn&#8217;t be working on it.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_product_backlog_refinement_2">
<title>Product Backlog Refinement</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>Product Backlog items that can be done by the Scrum Team within one Sprint are deemed ready for selection in a Sprint Planning event.</simpara>
<simpara>They usually acquire this degree of transparency after refining activities.</simpara>
<simpara>Product Backlog refinement is the act of breaking down and further defining Product Backlog items into smaller more precise items. This is an ongoing activity to add details, such as a description, order, and size.</simpara>
<simpara>Attributes often vary with the domain of work.</simpara>
</blockquote>
<simpara>Developers may see a high-priority Product Backlog item that is far too complex to complete in a 3 or 4-week Sprint. When this happens, the developers work with the Product Owner to break the item down into something more manageable.</simpara>
<simpara>The goal is always to break a Product Backlog item into something that can be completed within a Sprint. During Sprint planning, the developers are expected to further break all of the selected Product Backlog items down into units of work that can be completed in a day or less.</simpara>
<blockquote>
<attribution>
Sprint Planning page 8
</attribution>
<simpara>For each selected Product Backlog item, the Developers plan the work necessary to create an Increment that meets the Definition of Done.</simpara>
<simpara>This is often done by decomposing Product Backlog items into smaller work items of one day or less.</simpara>
</blockquote>
<section xml:id="_test_yourself_92">
<title>Test Yourself</title>
<sidebar>
<simpara>Breaking Product Backlog items selected for the Sprint down into smaller work items of one day or less is called: (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Grooming</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Refinement</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Decomposition</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Planning</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Scrum Guide describes decomposition as breaking "Product Backlog items into smaller work items of one day or less." The term 'grooming' has fallen out of favor.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_93">
<title>Test Yourself</title>
<sidebar>
<simpara>A Product Backlog item has remained untouched for over a year, and there are no plans for the developers to work on this item within the next 12 months. What should the Product Owner do with this Product Backlog item? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Remove the Product Backlog item from the Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Create a separate, low-priority Product Backlog to track items like this</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Assign a high-priority status to the item so it gets completed in an upcoming Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Leave the item in the Product Backlog with a low priority</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>A Product Backlog cluttered with items with no real viable prospect of being worked on within the foreseeable future should be removed from the Product Backlog.</simpara>
<simpara>The Proudct Backlog should help the team focus. It shouldn&#8217;t create confusion or anxiety.</simpara>
</section>
<section xml:id="_test_yourself_94">
<title>Test Yourself</title>
<sidebar>
<simpara>When does Product Backlog refinement occur: <?asciidoc-br?>
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Product Backlog refinement happens during Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Product Backlog refinement happens during the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Product Backlog refinement happens during the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Product Backlog refinement is an ongoing activity that happens throughout the Sprint</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The Scrum Guide has very few rules about what should happen and when.</simpara>
<simpara>If a Product Backlog item needs more details, needs to be refined, needs to be decomposed, or anything else, then the team should do it right away.</simpara>
<simpara>When work needs to be done, don&#8217;t wait for an official Scrum event to do it. Just get the work done.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_estimation_and_sizing">
<title>Estimation and Sizing</title>
<blockquote>
<attribution>
2020 Scrum Guide page 10
</attribution>
<simpara>The Developers who will be doing the work are responsible for the sizing.</simpara>
<simpara>The Product Owner may influence the Developers by helping them understand and select trade-offs.</simpara>
</blockquote>
<simpara>This point keeps coming up and up again in the Scrum Guide, and you can expect it to come up again and again on the certification exam.</simpara>
<simpara>Only the developers know what it takes to accomplish a given piece of work. Only the developer can size up Product Backlog items and estimate how much time a given feature will take to complete.</simpara>
<simpara>Do you tell a nuclear engineer how long it should take to cool down a nuclear reactor? No, because you don&#8217;t know anything about nuclear reactors.  They do.</simpara>
<simpara>Developers do the estimating in Scrum.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_95">
<title>Test Yourself</title>
<sidebar>
<simpara>Who is responsible for estimating how many Product Backlog items can be completed in a Sprint? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The stakeholders</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The developers are the experts. Only the developers know how long it will take to complete a Product Backlog item.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_96">
<title>Test Yourself</title>
<sidebar>
<simpara>Taking into account upcoming vacation time is more empirical than estimating productivity based on burndown charts.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is true.</simpara>
<simpara>Burndown charts and velocity calculations are great, but they are not a replacement for actual knowledge and real-world experience.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_commitment_the_product_goal">
<title>Commitment: The Product Goal</title>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Product Goal describes the future state of the product which can serve as a target for the Scrum Team to plan against.</simpara>
</blockquote>
<simpara>Every arrow needs a target.</simpara>
<simpara>As the Scrum Team works to build the product, they need to know what the product is that they&#8217;re building. The Product Goal serves this purpose. It&#8217;s the Product Backlog&#8217;s target.</simpara>
<section xml:id="_test_yourself_97">
<title>Test Yourself</title>
<sidebar>
<simpara>The Product Goal represents the current state of the project?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false.</simpara>
<simpara>The Product Goal represents the future state of the project.</simpara>
<simpara><?asciidoc-hr?></simpara>
<figure>
<title>The Product Goal is the target to which the Product Backlog aims at.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/product-goal-backlog.jpg"/>
</imageobject>
<textobject><phrase>The Product Goal is the target to which the Product Backlog aims at.</phrase></textobject>
</mediaobject>
</figure>
</section>
</section>
<section xml:id="_product_goal_and_the_product_backlog">
<title>Product Goal and the Product Backlog</title>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Product Goal is in the Product Backlog.</simpara>
<simpara>The rest of the Product Backlog emerges to define "what" will fulfill the Product Goal.</simpara>
</blockquote>
<simpara>The Product Goal is a semi-finalized, permanent part of the Product Backlog.</simpara>
<simpara>It&#8217;s semi-finalized because it shouldn&#8217;t be changing very often. It should represent the vision of the Product Owner and act as a steady target for all members of the Scrum Team to aim at.</simpara>
<simpara>On the other hand, the Product Backlog is <emphasis>emergent.</emphasis></simpara>
<simpara>The project may start will little more than a vague idea of how to implement the product vision. The Product Backlog items may be poorly defined, as a full appreciation for exactly what product features are necessary may not exist when the project kicks off.</simpara>
<simpara>Over time, as more is learned about the product, the stakeholders, the tech stack, the timelines and the team&#8217;s capacity, Product Backlog items will be added, refined, decomposed and potentially even deleted.</simpara>
<simpara>The Product Goal represents a stable vision of what the Product Owner would like to build. The Product Backlog emerges and is refined over time.</simpara>
</section>
<section xml:id="_value_delivery">
<title>Value Delivery</title>
<blockquote>
<attribution>
2020 Product Backlog Definition page 11
</attribution>
<simpara>A product is a vehicle to deliver value.</simpara>
<simpara>A product has:</simpara>
<itemizedlist>
<listitem>
<simpara>a clear boundary,</simpara>
</listitem>
<listitem>
<simpara>known stakeholders,</simpara>
</listitem>
<listitem>
<simpara>well-defined users or customers.</simpara>
</listitem>
</itemizedlist>
<simpara>A product could be a service, a physical product, or something more abstract.</simpara>
</blockquote>
<simpara>The people behind the Scrum Guide have worked hard to get people out of the mindset that Scrum is just for software development.</simpara>
<simpara>This section further emphasizes the point that Scrum can be used to develop more than just software.</simpara>
<section xml:id="_test_yourself_98">
<title>Test Yourself</title>
<sidebar>
<simpara>During the Sprint, the product being built will have: (Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) An approved budget</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Known stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Well-defined users</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Potentially unclear boundaries</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options B and C are correct.</simpara>
<simpara>The Scrum Guide does not say anything about the topic of budgets, so option A is correct.</simpara>
<simpara>Option D is incorrect because the Scrum Guide insists that the product being built must have clear boundaries.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_a_single_shared_objective">
<title>A Single, Shared Objective</title>
<blockquote>
<attribution>
2020 Product Backlog Definition page 11
</attribution>
<simpara>The Product Goal is the long-term objective for the Scrum Team.</simpara>
<simpara>They must fulfill (or abandon) one objective before taking on the next.</simpara>
</blockquote>
<simpara>According to the Scrum Guide, a Scrum Team can only work on one project at a time. They can&#8217;t have their efforts split between two separate projects.</simpara>
<simpara>That doesn&#8217;t mean an <emphasis>individual developer</emphasis> or <emphasis>Scrum Master</emphasis> can&#8217;t be on multiple teams at the same time.</simpara>
<simpara>I&#8217;ve quite often seen UI designers who have only a small part to play on a set of active projects be part of multiple Scrum Teams at the same time.</simpara>
<simpara>It&#8217;s also very common for Scrum Masters to be on three or four different teams at a time.</simpara>
<simpara>There is no rule against an individual being on multiple teams with separate objectives, but a single Scrum Team can only have one objective in mind.</simpara>
<section xml:id="_test_yourself_99">
<title>Test Yourself!</title>
<sidebar>
<simpara>The Product Owner believes the Scrum Team has enough capacity to work on two separate projects concurrently. How do you, as the Scrum Master, advise the Product Owner to go forward with this plan? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; Double the timebox for all Scrum events</simpara>
</listitem>
<listitem>
<simpara>&#10063; Create a second Product Backlog for the new project</simpara>
</listitem>
<listitem>
<simpara>&#10063; Add features for the new Project into the current Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; Inform the Product Owner that a Scrum team can only work on one objective at a time</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>A Scrum Team must fulfill or abandon one objective before taking on the next.</simpara>
<simpara>A Scrum Team can have only one objective at a time.</simpara>
<simpara><?asciidoc-hr?></simpara>
<tip>
<simpara>The certification exam will create scenarios that make it sound like it&#8217;s okay for a Scrum Master or CEO to add items to the Product Backlog. That can never happen. Only the PO can add items to the Product Backlog.</simpara>
</tip>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_test_yourself_100">
<title>Test Yourself</title>
<sidebar>
<simpara>The Product Backlog is a ordered list of the things that are needed to improve the product.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is true.</simpara>
<simpara>This precisely describes the purpose of the Product Backlog.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_16_the_sprint_backlog">
<title>Chapter 16: The Sprint Backlog</title>
<simpara>&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?>
&#160;<?asciidoc-br?></simpara>
<simpara>If you&#8217;re ever asked about the Sprint Backlog on the Scrum Master certification exam, there&#8217;s a good chance the answer is 'The Developers.' The Developers own the Sprint Backlog.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Sprint Backlog is composed of:</simpara>
<itemizedlist>
<listitem>
<simpara>the set of Product Backlog items selected for the Sprint (what)</simpara>
</listitem>
<listitem>
<simpara>the Sprint Goal (why)</simpara>
</listitem>
<listitem>
<simpara>an actionable plan for delivering the Increment (how)</simpara>
</listitem>
</itemizedlist>
<simpara>The Sprint Backlog is a plan by and for the Developers.</simpara>
</blockquote>
<section xml:id="_3_questions_to_answer">
<title>3 Questions to Answer</title>
<simpara>The Sprint Backlog answers three important questions:</simpara>
<itemizedlist>
<listitem>
<simpara>What?</simpara>
</listitem>
<listitem>
<simpara>Why?</simpara>
</listitem>
<listitem>
<simpara>How?</simpara>
</listitem>
</itemizedlist>
<simpara>The 'what' is all the items the team hopes to complete during the Sprint. That&#8217;s all the Product Backlog items the team has 'pulled' and made part of the Sprint Backlog.</simpara>
<simpara>The 'why' is the Sprint Goal, which acts as a target for the team to aim at during the Sprint.</simpara>
<simpara>The 'how' is the Development team&#8217;s plan for delivering at least one, and hopefully multiple, usable and valuable Increments of work during the Sprint.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_who_owns_the_sprint_backlog">
<title>Who Owns the Sprint Backlog?</title>
<simpara>The Developers on the Scrum Team completely control the Sprint Backlog.</simpara>
<simpara>The Product Owner cannot add to it and the Scrum Master can&#8217;t delete anything from it.</simpara>
<simpara>The Developers completely control the Sprint Backlog.</simpara>
<simpara>Contrast that against the Product Backlog which is entirely controlled by the Product Owner.</simpara>
<simpara>What does that leave the Scrum Master to control? Very little.</simpara>
<simpara>Other than a responsibility to guide the team and organization on how to properly apply the Scrum framework, the Scrum Master has very little <emphasis>control</emphasis> over the Scrum Team, and virtually no control over the various Scrum artifacts.</simpara>
<simpara>On a really well experienced Scrum Team, the Scrum Master has very little work to do. In mature organizations that have been doing Scrum for a long time, a Scrum Master can easily split their efforts across multiple teams. A great Scrum Master eventually coaches themselves out of a job, as the organization becomes so good at Scrum, they hardly neet the Scrum Master at all.</simpara>
<section xml:id="_test_yourself_101">
<title>Test Yourself</title>
<sidebar>
<simpara>The Sprint Backlog answers which three questions?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) When, where, and why</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Who, when, and where</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Why, what, and how</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) How, what, and where</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Sprint Backlog answers the questions of why, what, and how.</simpara>
<simpara>Who and where is not a concern of the Sprint Backlog.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
<section xml:id="_what_gets_updated_throughout_the_sprint">
<title>What gets Updated Throughout the Sprint</title>
<simpara>Scrum is all about constantly inspecting and adapting. As such, the team is allowed to change their Sprint plan whenever conditions change, just so long as the changes don&#8217;t put the Sprint Goal at risk.</simpara>
<simpara>Developers can add or remove items from the Sprint backlog any time they like.</simpara>
<simpara>Quite often teams choose too much work, or even not enough work, and need to either pull things in or put things back into the Product Backlog. Messing around with the Sprint Backlog is 'fair dinkum', so long as the Sprint Goal is not put at risk.</simpara>
<simpara>Every team must be given the freedom to change their plans when necessary.</simpara>
<simpara>What can&#8217;t change? The Sprint Goal.</simpara>
</section>
<section xml:id="_the_sprint_goal_never_changes_after_planning">
<title>The Sprint Goal Never Changes After Planning</title>
<simpara>The Sprint Goal is never allowed to change throughout the Sprint. Once that&#8217;s finalized in the Sprint Planning meeting, it remains unchanged until the Sprint is over.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Sprint Backlog is a highly visible, real-time picture of the work that the Developers plan to accomplish during the Sprint to achieve the Sprint Goal.</simpara>
<simpara>Consequently, the Sprint Backlog is updated throughout the Sprint as more is learned.</simpara>
<simpara>It should have enough detail so that they can inspect their progress in the Daily Scrum.</simpara>
</blockquote>
</section>
<section xml:id="_transparency_inspection_and_adaptation">
<title>Transparency, Inspection, and Adaptation</title>
<simpara>One of the three pillars of Scrum is transparency.</simpara>
<simpara>The Sprint Backlog helps to create transparency by allowing everyone on the Scrum Team, along with all of the stakeholders, to know exactly what&#8217;s going on during a Sprint.</simpara>
<simpara>Management should never pester the Scrum Team with requests for status meetings or regular updates through email. The Sprint Backlog should transparently answer any questions stakeholders have about what is being developed and how the development process is moving along.</simpara>
<section xml:id="_test_yourself_102">
<title>Test Yourself</title>
<sidebar>
<simpara>When should the Sprint Backlog be updated? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) During Sprint planning when more details emerge</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) During the Daily Scrum as the Scrum developers adapt</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) During the Sprint review as stakeholders give feedback</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) During the Sprint any time more is learned</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The Sprint Backlog should be an up-to-date reflection of what is being done and what has been done.</simpara>
<simpara>It should be updated regularly.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_sprint_goal">
<title>Sprint Goal</title>
<simpara>Every arrow needs a target to aim at. For the Sprint, the target is the Sprint Goal.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Sprint Goal is the single objective for the Sprint.
Although the Sprint Goal is a commitment by the Developers, it provides flexibility in terms of the exact work needed to achieve it.
The Sprint Goal also creates coherence and focus, encouraging the Scrum Team to work together rather than on separate initiatives.</simpara>
</blockquote>
<simpara>The Sprint Goal is the commitment the Sprint Backlog makes.</simpara>
<simpara>The Sprint Goal describes what the developers are trying to achieve in the current Sprint. It gives the team something to aim at.</simpara>
<simpara>Now let&#8217;s make one thing clear - the development team doesn&#8217;t always achieve the Sprint Goal, and that&#8217;s okay.</simpara>
<simpara>Some teams might not achieve the Sprint Goal the majority of the time. If that&#8217;s a problem, then maybe it&#8217;s something the team can talk about in the Sprint Retrospective. But at the same time, it might not be a problem.</simpara>
<simpara>What matters is that the Sprint Goal drives the team forward. So long as a usable increment of work is produced at the end of the Sprint and progress is made towards building the product, a missed goal isn&#8217;t the end of the world.</simpara>
<section xml:id="_test_yourself_103">
<title>Test Yourself</title>
<sidebar>
<simpara>Issues beyond the Scrum Team&#8217;s control have made it almost impossible to achieve the Sprint Goal, and there&#8217;s still a week left in the Sprint. What should the Scrum Master do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Change the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Cancel the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Schedule a mid-Sprint planning session</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Have the team continue to work towards the goal</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>The Sprint can&#8217;t be canceled unless the Sprint Goal becomes obsolete, and that&#8217;s a rare occurrence.</simpara>
<simpara>You&#8217;re also not allowed to change the Sprint Goal once it&#8217;s finalized.</simpara>
<simpara>The correct answer here is D - to just keep working towards the Sprint Goal.</simpara>
<simpara>It&#8217;s not the end of the world if the Sprint Goal is not achieved. Sprints are short. You can create a new Sprint Goal when the current Sprint is finished.</simpara>
</section>
</section>
<section xml:id="_product_owner_and_developer_collaboration">
<title>Product Owner and Developer Collaboration</title>
<simpara>If the Developers have bitten off more than they can chew, and they don&#8217;t think they can complete all of the tasks they&#8217;ve assigned to themselves, they can remove items from the Sprint backlog.</simpara>
<simpara>When this happens, developers should inform the Product Owner. If selected items aren&#8217;t going to get finished during the Sprint, the Product Owner should know.</simpara>
<simpara>Furthermore, the Product Owner knows which Product Backlog items are most important, so the PO might have a better insights into which backlog items should remain in the Sprint and which ones shouldn&#8217;t.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>The Sprint Goal is created during the Sprint Planning event and then added to the Sprint Backlog.</simpara>
<simpara>As the Developers work during the Sprint, they keep the Sprint Goal in mind.</simpara>
<simpara>If the work turns out to be different than they expected, they collaborate with the Product Owner to negotiate the scope of the Sprint Backlog within the Sprint without affecting the Sprint Goal.</simpara>
</blockquote>
<simpara>It&#8217;s not unusual for teams to overestimate how much work they can accomplish during a Sprint.</simpara>
<simpara>If developers need to decompose backlog items or even remove items from the Sprint Backlog, that&#8217;s fine, so long as all of this happens without risking the Sprint Goal.</simpara>
<section xml:id="_test_yourself_104">
<title>Test Yourself</title>
<sidebar>
<simpara>If Developers find the scope of work scheduled for a Sprint is too much, with whom should they negotiate the Sprint Backlog&#8217;s scope? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Their fellow developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The stakeholders.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>Any time the developers need to scale back on their work or break down Product Backlog items into smaller pieces, it&#8217;s always wise to speak with the Product Owner for clarification. The Product Owner can also help developers understand which product features should be included in order to not to put the Sprint Goal at risk.</simpara>
<tip>
<simpara>Developers wholly control the Sprint Backlog. Only the Scrum Developers can add to it or delete from it. However, the Sprint Goal can&#8217;t change during the Sprint.</simpara>
</tip>
</section>
</section>
</chapter>
<chapter xml:id="_chapter_17_the_increment">
<title>Chapter 17: The Increment</title>
<simpara>Scrum is an iterative and incremental framework.</simpara>
<simpara>We see how Scrum is iterative through the cycling of Sprint after Sprint after Sprint. Within those Sprints, the same events occur over and over again.</simpara>
<simpara>But how is Scrum incremental?</simpara>
<section xml:id="_iterative_and_incremental_2">
<title>Iterative and Incremental</title>
<simpara>In Scrum, we add to the product every Sprint. Every Sprint is supposed to deliver an Increment that is <emphasis>useful</emphasis> and <emphasis>valuable.</emphasis> You never do a Sprint that doesn&#8217;t try to create something useful.</simpara>
<simpara>There are no 'infrastructure Sprints' in Scrum where you just make sure everyone has the right software installed and access to the JIRA board.</simpara>
<simpara>In Scrum, every Sprint has to create something of value that adds to the existing product in a useful and meaningful way.</simpara>
<simpara>That&#8217;s how Scrum is incremental. Every Sprint adds to what was created in the Sprints prior. That&#8217;s the objective of every Sprint.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 11
</attribution>
<simpara>An Increment is a concrete stepping stone toward the Product Goal.</simpara>
<simpara>Each Increment is additive to all prior Increments and thoroughly verified, ensuring that all Increments work together.</simpara>
<simpara>To provide value, the Increment must be usable.</simpara>
</blockquote>
<figure>
<title>Like steps in a staircase, each Increment builds on top of previous increments. We move forward by iteratively creating valuable and usable increments that take us progressively closer to the Product Goal.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/increment-steps.jpg"/>
</imageobject>
<textobject><phrase>Increments of value in Scrum..</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_integrated_increments">
<title>Integrated Increments</title>
<simpara>An Increment must be added to what&#8217;s already been done, and it must be able to fully integrate and work with all previous increments. If an Increment isn&#8217;t compatible with past Increments, then it&#8217;s not a valid Increment. If an Increment stands alone and doesn&#8217;t increase the value of the product built to date, then it&#8217;s not valid.</simpara>
<simpara>On the certification exam, there will be many questions about <emphasis>integration,</emphasis> which is intimidating, because there is no talk in the Scrum Guide about integration.</simpara>
<itemizedlist>
<listitem>
<simpara>There are no integration teams in Scrum</simpara>
</listitem>
<listitem>
<simpara>There are no specific Scrum events where integration happens</simpara>
</listitem>
<listitem>
<simpara>The is no designated time for integration to happen</simpara>
</listitem>
</itemizedlist>
<simpara>The words 'integrate' and 'integration' never appear once in the 2020 Scrum Guide.</simpara>
</section>
<section xml:id="_understanding_integration">
<title>Understanding Integration</title>
<simpara>However, integration is important when it comes to the creation of an Increment. Whatever you create today must 'integrate with' what you created yesterday for it to be a valid Increment.</simpara>
<simpara>Many questions on the Scrum Master certification exam will reference <emphasis>integration.</emphasis></simpara>
<simpara>Software developers get tripped up on the word 'integration' because they get visions of merging code or fixing Git conflicts or doing GitHub pull requests. Don&#8217;t confuse yourself with those things. The idea of 'integration' is much simpler than that.</simpara>
<simpara>Just imagine you&#8217;re a carpenter and you built a door for the house your team is building. The door is currently tied to the roof of your car. Is it integrated with the house?</simpara>
<simpara>No, a door sitting on the roof of your car that is supposed to go on the house you&#8217;re building is not integrated with the house if it&#8217;s strapped to the roof of your car.</simpara>
<simpara>When the door is put on its hinges, attached to the house, and it can swing open and closed freely then it can be considered <emphasis>integrated.</emphasis> When integrated, it becomes a useful, valuable Increment.</simpara>
<simpara>By putting the door on the house, you have integrated your work into the product and you have added a valuable Increment of work that stakeholders can see, touch, feel, and even criticize.</simpara>
</section>
<section xml:id="_a_poorly_integrated_increment">
<title>A Poorly Integrated Increment</title>
<simpara>Now imagine you took the door off the roof of your car, tried to attach it to the house and:</simpara>
<itemizedlist>
<listitem>
<simpara>The door is too large</simpara>
</listitem>
<listitem>
<simpara>The hinges are incompatible</simpara>
</listitem>
<listitem>
<simpara>You realize the door is the wrong color</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
<simpara>You&#8217;ve done work on the door, there&#8217;s no arguing about that. But has that work been integrated?</simpara>
<simpara>Did you just create a usable Increment of work that adds to the existing project? No, you didn&#8217;t, because your door is useless.</simpara>
<figure>
<title>If a house needs a door, and you have the door at the ready, you don&#8217;t wait a week to integrate it.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/house-door.jpg"/>
</imageobject>
<textobject><phrase>Integrate immediately into the product.</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="_when_to_integrate">
<title>When to Integrate</title>
<simpara>Let&#8217;s go back to the super, amazing door you created. When should you attach your perfect door to the house?</simpara>
<simpara>The Scrum Master exam will often ask you when you should integrate your work into the existing project. People get all flustered with these questions, wondering when the best time is to integrate your work.</simpara>
<simpara>Don&#8217;t get flustered. Get pragmatic.</simpara>
<simpara>When you think about integration pragmatically, the questions answer themselves.</simpara>
</section>
<section xml:id="_the_right_time_to_integrate">
<title>The Right Time to Integrate</title>
<simpara>So, when should you integrate your work into the existing product?</simpara>
<itemizedlist>
<listitem>
<simpara>During the Daily Scrum?</simpara>
</listitem>
<listitem>
<simpara>During the Sprint Review?</simpara>
</listitem>
<listitem>
<simpara>During the Sprint Retrospective?</simpara>
</listitem>
<listitem>
<simpara>During the Sprint Planning?</simpara>
</listitem>
<listitem>
<simpara>Right now?</simpara>
</listitem>
</itemizedlist>
<simpara>'Right now' is the correct answer.</simpara>
<simpara>If you&#8217;ve got the perfect door ready to be put on your new house&#8217;s hinges, you don&#8217;t sit for two weeks waiting for the Sprint Review to do it. You integrate it right away.</simpara>
<simpara>It would be nuts to imagine waiting two weeks to hang the front door on the house, or as we&#8217;d say in Scrum, 'integrate your work into the product.'</simpara>
<simpara>As soon as your work is done you integrate your work. Then you move on to the next piece of work that needs to be done. You keep doing that over and over and over again until it&#8217;s time for the Sprint Review.</simpara>
<simpara>Scrum prides itself on being based on <emphasis>lean principles.</emphasis> Waiting around is not lean. Doing something right away is lean. On the Scrum Master exam, a lean approach to product building is the correct approach.</simpara>
<section xml:id="_test_yourself_105">
<title>Test Yourself</title>
<sidebar>
<simpara>Which one of the following is correct?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Scrum is incremental but not iterative.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Scrum is iterative but not incremental.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Scrum is both incremental and iterative.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Scrum is neither incremental nor iterative.</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>Scrum is iterative in that a set of steps get repeated each Sprint, and it is incremental in that each Sprint produces Increments of work that get added to all past increments.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_multiple_increments">
<title>Multiple Increments</title>
<simpara>The goal of each Sprint is to get at least one valuable and usable Increment added to the project, but that shouldn&#8217;t stop you from integrating as many Increments as you can.</simpara>
<simpara>If a carpenter adds a front door to a house, she doesn&#8217;t wait until the next Sprint to start working on the back door. She gets working on the back door and integrates that into the house as soon she&#8217;s done with that. Increments should keep being added to the product constantly throughout Sprint.</simpara>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>Multiple Increments may be created within a Sprint.</simpara>
<simpara>The sum of the Increments is presented at the Sprint Review thus supporting empiricism.</simpara>
<simpara>However, an Increment may be delivered to stakeholders before the end of the Sprint.</simpara>
<simpara>The Sprint Review should never be considered a gate to releasing value.</simpara>
<simpara>Work cannot be considered part of an Increment unless it meets the Definition of Done.</simpara>
</blockquote>
</section>
<section xml:id="_continuous_delivery_of_valuable_increments">
<title>Continuous Delivery of Valuable Increments</title>
<simpara>Some people get the impression that the only time stakeholders should be allowed to see what developers have done is at the Sprint Review.</simpara>
<simpara>If developers create an Increment they want the stakeholders to see, nothing is stopping them from presenting it to them at any time throughout the Sprint. And why should a developer wait to show off their amazing work?</simpara>
<simpara>If the developers have created something they are proud of, and the stakeholders are anxious to see it, why would the development team wait  until the Sprint Review to show it to them?</simpara>
<simpara>The Sprint Review makes sure the stakeholders get to see progress at least once throughout a Sprint, but that just ensures a minimum. Developers are always encouraged to be transparent and share their progress with interested stakeholders.</simpara>
</section>
<section xml:id="_commitment_the_definition_of_done">
<title>Commitment: The Definition of Done</title>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>The Definition of Done is a formal description of the state of the Increment when it meets the quality measures required for the product.</simpara>
<simpara>The moment a Product Backlog item meets the Definition of Done, an Increment is born.</simpara>
</blockquote>
<simpara>The Definition of Done must be clear and understood by everyone on the Scrum Team. It must also be understood by the stakeholders and the organization. It creates a common understanding of what has to be done for a feature to be complete.</simpara>
<section xml:id="_test_yourself_106">
<title>Test Yourself</title>
<sidebar>
<simpara>The Definition of Done is an informal understanding of what needs to be done to turn a Product Backlog item into an Increment.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false</simpara>
<simpara>The Definition of Done is a <emphasis>formal description,</emphasis> not an informal understanding.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_test_yourself_107">
<title>Test Yourself</title>
<sidebar>
<simpara>The application has failed to scale beyond a single processing core, and this has caused various production issues.</simpara>
<simpara>What is the best way for the Scrum Team to proceed with this issue? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Assign multi-core processing support to the DevOps team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Create a testing team to implement multi-processor support</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Add multi-processor support to the Definition of Done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Inform that the QA team that they should test the app on multiple processors</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>If there is a quality metric that the product must support, it is the development team&#8217;s responsibility to support it. If the multi-core requirement is added to the Definition of Done, the developers will not be allowed to integrate or release any increments that don&#8217;t meet the multi-core requirement.</simpara>
<simpara>Remember that there are no sub-teams in Scrum, and there is no talk anywhere about DevOps, UAT, or QA teams in the Scrum Guide.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_scrum_pillars_transparency_and_done">
<title>Scrum Pillars, Transparency, and 'Done'</title>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>The Definition of Done creates transparency by providing everyone with a shared understanding of what work was completed as part of the Increment.</simpara>
<simpara>If a Product Backlog item does not meet the Definition of Done, it cannot be released or even presented at the Sprint Review.</simpara>
<simpara>Instead, it returns to the Product Backlog for future consideration.</simpara>
</blockquote>
<simpara>Test takers are often killed on this point, so pay attention.</simpara>
<simpara>When a Product Backlog item is not completed during a Sprint, it is put back into the Product Backlog.</simpara>
<itemizedlist>
<listitem>
<simpara>It&#8217;s not presented at the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>It is not 'partially presented' at the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>Partial points are not assigned to it (There are no 'points' in Scrum!)</simpara>
</listitem>
<listitem>
<simpara>The feature is not automatically added to the next Sprint&#8217;s Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>The feature is not partially released</simpara>
</listitem>
</itemizedlist>
<simpara>If a Product Backlog item selected for the Sprint does not meet the Definition of Done by the end of the Sprint, it is thrown back into the Product Backlog as though nobody had ever even been working on it. Even if it&#8217;s 90% complete, it&#8217;s thrown back into the Product Backlog for the Product Owner to reprioritize.</simpara>
<section xml:id="_test_yourself_108">
<title>Test Yourself</title>
<sidebar>
<simpara>An important, critical feature is 99% done but it won&#8217;t be ready for the Sprint Review tomorrow.</simpara>
<simpara>What should the team do? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) Present the work that was completed for stakeholders to see at the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) Assign 99% of the points to the current Sprint and assign 1% of the points to the next Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) Automatically add the Product Backlog item to the next Sprint&#8217;s Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) Extend the Sprint to allow the developer to get the feature to 100%</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Return the item to the Product Backlog and do not present it at the Sprint Review</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option E is correct.</simpara>
<simpara>The Scrum Guide is clear. If a feature does not meet the Definition of Done, it is not presented at the Sprint Review, and it is returned to the Product Backlog.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="_organizational_standards">
<title>Organizational Standards</title>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>If the Definition of Done for an Increment is part of the standards of the organization, all Scrum Teams must follow it as a minimum.</simpara>
<simpara>If it is not an organizational standard, the Scrum Team must create a Definition of Done appropriately for the product.</simpara>
</blockquote>
<simpara>Who creates the Definition of Done?</simpara>
<simpara>It&#8217;s created by the Scrum Team unless there is already an existing organizational standard.</simpara>
<simpara>If the Scrum Team wants to create a more rigorous Definition of Done, they are certainly allowed to do that, but it must build on top of the one the company already has. It cannot be more lax.</simpara>
</section>
<section xml:id="_done_over_time">
<title>Done Over Time</title>
<simpara>One of the interesting things that happens with Scrum Teams as they become more familiar with the framework and the product they are building is they extend and enhance their Definition of Done.</simpara>
<simpara>Over time, the Definition will likely become more rigorous, with more quality gates to pass than when the team first adopted Scrum.</simpara>
<sidebar>
<simpara>Who creates the Definition of Done? (Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Owner if there is no organizational standard</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master if there is no organizational standard</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Scrum Team if there is no organizational standard</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The stakeholders if there is no organizational standard</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>The Scrum Team creates a Definition of Done if an organizational standard does not exist.</simpara>
<simpara><?asciidoc-hr?></simpara>
</section>
<section xml:id="_bad_definitions_of_done">
<title>Bad Definitions of Done</title>
<simpara>Sometimes Scrum Teams will find themselves in a situation where they are dealing with a Definition of Done that is impossible to achieve.</simpara>
<simpara>For example, if the Definition of Done says every piece of code has to be tested on a quantum computer with 100,000 qubits, despite the fact that no computer in the world has more than 1000 quibits, then the Definition of Done is too rigorous.</simpara>
<simpara>The Definition of Done should not be changed too often, and it&#8217;s not a good idea to make a Definition of Done less rigorous over time, but if the Definition of Done includes a requirement that is impossible to achieve due to missing hardware, software or infrastructure, then it is permissible to change the Definition of Done to make it possible to deliver a usable Increment.</simpara>
<simpara>If the Definition of Done does need to change, such a discussion is best to take place during the Sprint Retrospective.</simpara>
</section>
<section xml:id="_multiple_teams_and_the_definition_of_done">
<title>Multiple Teams and the Definition of Done</title>
<blockquote>
<attribution>
2020 Scrum Guide page 12
</attribution>
<simpara>The Developers are required to conform to the Definition of Done.</simpara>
<simpara>If multiple Scrum Teams are working together on a product, they must mutually define and comply with the same Definition of Done.</simpara>
</blockquote>
<simpara>There are only a few instances in the Scrum Guide where it discusses multiple teams working on the same project.</simpara>
<simpara>The rules the Scrum Guide requires for multiple teams working on the same project are few, but they are important and you will be tested on them.</simpara>
<simpara>The Scrum Guide demands that multiple teams that work on the same project must:</simpara>
<itemizedlist>
<listitem>
<simpara>Each share the same Product Owner</simpara>
</listitem>
<listitem>
<simpara>Each share the same Product Backlog</simpara>
</listitem>
<listitem>
<simpara>Each share the same Product Goal</simpara>
</listitem>
<listitem>
<simpara>Each share the same Definition of Done</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_what_scrum_doesnt_say_about_multiple_teams">
<title>What Scrum Doesn&#8217;t Say About Multiple Teams</title>
<simpara>There is nothing in the Scrum Guide that asserts multiple teams working on the same project must:</simpara>
<itemizedlist>
<listitem>
<simpara>Start their Sprints at the same time</simpara>
</listitem>
<listitem>
<simpara>Have Sprints that are the same length</simpara>
</listitem>
<listitem>
<simpara>Have the same number of team members</simpara>
</listitem>
<listitem>
<simpara>Have the same Scrum Master</simpara>
</listitem>
</itemizedlist>
<simpara>There will be several questions about multiple teams working on the same project on the certification exam, and those questions will provide options that seem reasonable but are incorrect.</simpara>
<simpara>When answering questions on the certification exam, focus on answers that map as closely as possible to what is explicitly stated in the Scrum Guide.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_test_yourself_109">
<title>Test Yourself</title>
<sidebar>
<simpara>What must be shared between multiple teams working on the same product at the same time? (Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A) The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; B) The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C) The Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; D) The Product Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; E) Multiple Scrum Teams cannot work on the same product at the same time</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Options A and D are correct.</simpara>
<simpara>Each Scrum Team has its own Sprint Backlog. A Sprint Backlog is not shared across multiple teams working on the same product.</simpara>
<simpara>A Scrum Master can be shared between multiple teams, or a Scrum master can dedicate 100% of their time to one team. The Scrum Guide doesn&#8217;t advise for or against either scenario.</simpara>
<simpara>When multiple teams work on the same project together:</simpara>
<itemizedlist>
<listitem>
<simpara>Each team shares the same Product Owner</simpara>
</listitem>
<listitem>
<simpara>Each team shares the same Product Backlog</simpara>
</listitem>
<listitem>
<simpara>Each team shares the same Product Goal</simpara>
</listitem>
<listitem>
<simpara>Each team shares the same Definition of Done</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-hr?></simpara>
</section>
</section>
</chapter>
<part xml:id="_part_ii_the_exam_questions">
<title>PART II: THE EXAM QUESTIONS</title>
<partintro>
<simpara>The second part of this book is all about testing your knowledge of the Scrum Guide, and possibly introducing you to some of the unexpected ways the exam tests your knowledge.</simpara>
<itemizedlist>
<listitem>
<simpara>The last exam is 40 questions, and I believe it is slightly harder than the actual exam.</simpara>
</listitem>
<listitem>
<simpara>The two exams prior to that are 25 questions long and are a good approximation to the Scrum Master certification exam&#8217;s difficulty</simpara>
</listitem>
<listitem>
<simpara>The two exams that kick off the second half of the book? Well, they&#8217;re unusual.</simpara>
</listitem>
</itemizedlist>
<simpara>Let me explain.</simpara>
<figure>
<title>Do this set of exam questions first. Then, we&#8217;ll show you a cool trick to help you answer the toughest exam questions.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/exam-sitting-2wide.jpg"/>
</imageobject>
<textobject><phrase>There&#8217;s a trick to passing the Scrum Master certification exam..</phrase></textobject>
</mediaobject>
</figure>
</partintro>
<section xml:id="_the_secret_test_taking_trick">
<title>The Secret Test-Taking Trick</title>
<simpara>There&#8217;s a trick to answering the toughest questions on the Scrum Master exam, but I&#8217;d like you to take the first practice exam first before the trick is revealed.</simpara>
<simpara>The questions in the first practice exam fall on the harder side of what to expect on the Scrum Master certification exam, so don&#8217;t get discouraged if they seem difficult. That&#8217;s intentional.</simpara>
<simpara>When you complete the first practice exam, I&#8217;ll reveal the trick to you and test you on a set of questions similar to those in the first exam, but with the trick applied.</simpara>
<simpara>I think you&#8217;ll find it makes a big difference.</simpara>
<simpara>Now get started with the practice exams. Good luck!</simpara>
</section>
<chapter xml:id="_ten_tough_scrum_master_practice_exam_questions">
<title>Ten Tough Scrum Master Practice Exam Questions</title>
<section xml:id="_question_1">
<title>Question 1</title>
<simpara>Scrum is a proven and complete software development process.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_2">
<title>Question 2</title>
<simpara>Which of the following statements are true about the Scrum Master role?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	The Scrum Master cannot be one of the developers on the team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The Scrum Master cannot also be the team&#8217;s Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The Scrum Master cannot be one of the product&#8217;s stakeholder</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	The Scrum Master can be a stakeholder and a developer at the same time</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_3">
<title>Question 3</title>
<simpara>The Scrum Team has just been assembled, but the IT department has been slow to provision resources like laptops, software, build tools and test environments.</simpara>
<simpara>The team does not want to start the first Sprint next week given the lack of preparedness.</simpara>
<simpara>How would you as the Scrum Master recommend the team proceed?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Explain to the organization that 'Sprint 0' exists to allow the team to get prepared for development</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Ask the team to work toward the development of a small, valuable increment despite the lack of preparedness</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Declare this an infrastructure Sprint where developers simply configure their tools and software</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Delay the start of the Sprint until the organization can properly provision the required tools and infrastructure</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_4">
<title>Question 4</title>
<simpara>A developer has completed a feature that when integrated into the codebase will create a valuable and usable increment. Completion of the Sprint Goal depends upon it.</simpara>
<simpara>When should the developer integrate their work into the product?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	During the Daily Scrum, after achieving consensus with the other developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	After the development Sprint finishes with the consent of the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Immediately so long as the work meets the team&#8217;s definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	During the Sprint Review so stakeholders can witness the integration</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_5">
<title>Question 5</title>
<simpara>A developer has identified a troublesome and worrying security vulnerability in the codebase and has asked you, the Scrum Master, what should be done about it.</simpara>
<simpara>What guidance should you provide the developer on this topic?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Have the developer make this issue as a top priority item in tomorrow&#8217;s Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the developer discuss the issue with the Product Owner and plan to fix the issue in the next Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the developer discuss the issue with developers right away</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Have the developer raise the issue as a priority item during the next Sprint Planning meeting</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_6">
<title>Question 6</title>
<simpara>Under which circumstance are developers allowed to discuss product development directly with stakeholders?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Developers can speak directly with stakeholders during the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Developers can speak directly with stakeholders so long as the Product Owner is present</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Developers can speak directly with stakeholders with permission from the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Developers are not allowed speak directly with stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	Developers can speak directly with stakeholders at any time</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_7">
<title>Question 7</title>
<simpara>Human Resources has just hired the three new programmers that were required in order to keep development progressing at a sustainable pace. However, these programmers have arrived right in the middle of a four week Sprint.</simpara>
<simpara>As the Scrum Master, when do you advise these programmers be added to the development effort?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	At the moment they arrive</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	At the end of the current Sprint but before the next Sprint begins</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	At the following day&#8217;s Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	During the next Sprint Planning event</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_8">
<title>Question 8</title>
<simpara>Given a well-functioning team of 4 developers, what impact will the addition of 3 new developers likely have on the productivity of the existing team members?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Individual productivity will increase permanently</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Individual productivity will increase over the short term</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Individual productivity will decrease permanently</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Individual productivity will decrease over the short term</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_9">
<title>Question 9</title>
<simpara>Developers have become frustrated with the fact that peripheral tasks like quality control, user acceptance testing and documentation have taken away from their core development efforts, subsequently putting the project at risk.</simpara>
<simpara>How would you advise the team to move forward?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Have the Scrum team create a sub-team dedicates to QA, UAT testing and documentation</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the Scrum team outsource QA, UAT and documentation to a third party</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the Product Owner remove quality control, testing and documentation from the definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Advise the Scrum Team they are responsible for all aspects of delivering a product increment</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_10">
<title>Question 10</title>
<simpara>Unforeseen circumstances have reduced developer productivity and half-way through the Sprint it is clear that the Sprint Plan must change drastically in order for the Sprint Goal to be achieved.</simpara>
<simpara>What guidance would you, as the Scrum Master, provide to the team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Tell the developers to cancel the development Sprint and start a new Sprint Planning session</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the developers regroup and update the Sprint Plan as soon as possible</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the developers dedicate time during the next Daily Scrum to update the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Tell the developers the Sprint Plan cannot change and have them continue working as planned towards the Sprint Goal</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</chapter>
<chapter xml:id="_answers_to_the_first_practice_exam">
<title>Answers to the First Practice Exam</title>
<section xml:id="_question_1_2">
<title>Question 1</title>
<sidebar>
<simpara>Scrum is a proven and complete software development process.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10003; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false for three reasons:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Scrum is not a process or a methodology. Scrum is a lightweight framework.</simpara>
</listitem>
<listitem>
<simpara>Scrum can be used to develop any product, not just a software product.</simpara>
</listitem>
<listitem>
<simpara>Scrum self-describes as an incomplete framework.</simpara>
</listitem>
</orderedlist>
<simpara>"Scrum is a lightweight framework that helps people, teams and organizations generate value through adaptive solutions for complex problems. The Scrum framework is purposefully incomplete."  - The Scrum Guide, page 3.</simpara>
</section>
<section xml:id="_question_2_2">
<title>Question 2</title>
<sidebar>
<simpara>Which of the following statements are true about the Scrum Master role?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	The Scrum Master cannot be one of the developers on the team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The Scrum Master cannot also be the team&#8217;s Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The Scrum Master cannot be one of the product&#8217;s stakeholder</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	The Scrum Master can be a stakeholder and a developer at the same time</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>There are no rules in the Scrum Guide that say a person cannot take on multiple roles or accountabilities at the same time.</simpara>
<simpara>In fact, on small startups, it&#8217;s not uncommon for the Scrum Master to also be a stakeholder while also helping out with development. Furthermore, if the Product Owner got sick, that person might even take on Product Owner accountabilities temporarily as well.</simpara>
<simpara>The only rule the Scrum Guide provides on a Scrum Master or Product Owner doing development is that when they do help to build the product, they must participate in the Daily Scrum as a developer.</simpara>
<simpara>"If the Product Owner or Scrum Master are actively working on items in the Sprint Backlog, they participate [in the Daily Scrum] as Developers." -The Scrum Guide, page 9.</simpara>
</section>
<section xml:id="_question_3_2">
<title>Question 3</title>
<sidebar>
<simpara>The Scrum Team has just been assembled, but the IT department has been slow to provision resources like laptops, software, build tools and test environments.</simpara>
<simpara>The team does not want to start the first Sprint next week given the lack of preparedness.</simpara>
<simpara>How would you as the Scrum Master recommend the team proceed?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Explain to the organization that 'Sprint 0' exists to allow the team to get prepared for development</simpara>
</listitem>
<listitem>
<simpara>&#10003; B.	Ask the team to work toward the development of a small, valuable increment despite the lack of preparedness</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Declare this an infrastructure Sprint where developers simply configure their tools and software</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Delay the start of the Sprint until the organization can properly provision the required tools and infrastructure</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>There is no such thing as an infrastructure Sprint or a Sprint 0 in Scrum.</simpara>
<simpara>Every Sprint must attempt to develop and increment of value that will be part of the final product.</simpara>
<simpara>No organization is ever sufficiently prepared for development to begin. If Scrum teams waited for all of the tools they require to be provisioned and available before they started to work, it&#8217;s unlikely that any work would ever get done.</simpara>
</section>
<section xml:id="_question_4_2">
<title>Question 4</title>
<sidebar>
<simpara>A developer has completed a feature that when integrated into the codebase will create a valuable and usable increment. Completion of the Sprint Goal depends upon it.</simpara>
<simpara>When should the developer integrate their work into the product?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	During the Daily Scrum, after achieving consensus with the other developers</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	After the development Sprint finishes with the consent of the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10003; C.	Immediately so long as the work meets the team&#8217;s definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	During the Sprint Review so stakeholders can witness the integration</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>If a developer completes any work that meets the definition of done, it should be immediately integrated into the product.</simpara>
<simpara>If work cannot be integrated into the product being built, it is not useful and it does not create a valid increment. Integration, and ensuring that work does indeed integrate, is essential.</simpara>
<simpara>A developer doesn&#8217;t need anyone&#8217;s permission to integrate their work into the product.</simpara>
<simpara>If there is a piece of work that is complete and can be successfully integrated into the final product, it should be integrated immediately. Waiting serves no purpose, nor is it in line with Scrum&#8217;s adherence to lean thinking.</simpara>
</section>
<section xml:id="_question_5_2">
<title>Question 5</title>
<sidebar>
<simpara>A developer has identified a troublesome and worrying security vulnerability in the codebase and has asked you, the Scrum Master, what should be done about it.</simpara>
<simpara>What guidance should you provide the developer on this topic?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Have the developer make this issue as a top priority item in tomorrow&#8217;s Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the developer discuss the issue with the Product Owner and plan to fix the issue in the next Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10003; C.	Have the developer discuss the issue with developers right away</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Have the developer raise the issue as a priority item during the next Sprint Planning meeting</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>If there is a serious security flaw in the codebase, it&#8217;s an issue that should be raised immediately with the development team.</simpara>
<simpara>Scrum provides a number of events, such as the Daily Scrum and the Sprint Retrospective, to encourage discussion. However, the existence of these events should never stand in the way of pragmatic or essential discussions between members of the team.</simpara>
<simpara>If an emergency arises, it should be addressed immediately. Don&#8217;t wait for a scheduled Scrum event to adapt to changing conditions.</simpara>
</section>
<section xml:id="_question_6_2">
<title>Question 6</title>
<sidebar>
<simpara>Under which circumstance are developers allowed to discuss product development directly with stakeholders?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Developers can speak directly with stakeholders during the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Developers can speak directly with stakeholders so long as the Product Owner is present</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Developers can speak directly with stakeholders with permission from the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Developers are not allowed speak directly with stakeholders</simpara>
</listitem>
<listitem>
<simpara>&#10003; E.	Developers can speak directly with stakeholders at any time</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option E is correct.</simpara>
<simpara>There are no rules in Scrum that restricts a developer talking to a stakeholder.</simpara>
<simpara>One of the Scrum pillars is transparency. One of the Scrum values is openness. What does it say about transparency and openness of an organization put rules and restrictions around when a developer might be allowed to talk to a stakeholder?</simpara>
<simpara>The Product Owner is responsible for speaking with stakeholders and discovering which features and functionality they value most.</simpara>
<simpara>However, in terms of speaking with developers about the Sprint Backlog, Product Backlog, Sprint Goal or anything else, there is nothing in the Scrum Guide that restricts such discussions. In fact, Scrum encourages it.</simpara>
</section>
<section xml:id="_question_7_2">
<title>Question 7</title>
<sidebar>
<simpara>Human Resources has just hired the three new programmers that were required in order to keep development progressing at a sustainable pace. However, these programmers have arrived right in the middle of a four week Sprint.</simpara>
<simpara>As the Scrum Master, when do you advise these programmers be added to the development effort?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A.	At the moment they arrive</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	At the end of the current Sprint but before the next Sprint begins</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	At the following day&#8217;s Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	During the next Sprint Planning event</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>If your project needs programmers to assist in the development effort, why would you wait even one minute to add them to the team and get them contributing to the development effort?</simpara>
<simpara>Note that there is no delay in Scrum between the time when one Sprint ends and the next Sprint begins. When one Sprint ends, the next Sprint starts immediately.</simpara>
</section>
<section xml:id="_question_8_2">
<title>Question 8</title>
<sidebar>
<simpara>Given a well-functioning team of 4 developers, what impact will the addition of 3 new developers likely have on the productivity of the existing team members?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Individual productivity will increase permanently</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Individual productivity will increase over the short term</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Individual productivity will decrease permanently</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	Individual productivity will decrease over the short term</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>The onboarding process of new team members often pulls existing developers away from their normal routines, as they spend time with new devs explaining the product, helping them connect to GitHub, set up a printer and even find the restroom.</simpara>
<simpara>Over the long run, individual productivity should go back to normal, but in the short term it will decrease.</simpara>
</section>
<section xml:id="_question_9_2">
<title>Question 9</title>
<sidebar>
<simpara>Developers have become frustrated with the fact that peripheral tasks like quality control, user acceptance testing and documentation have taken away from their core development efforts, subsequently putting the project at risk.</simpara>
<simpara>How would you advise the team to move forward?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Have the Scrum team create a sub-team dedicates to QA, UAT testing and documentation</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the Scrum team outsource QA, UAT and documentation to a third party</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the Product Owner remove quality control, testing and documentation from the definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	Advise the Scrum Team they are responsible for all aspects of delivering a product increment</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>There are no sub-teams in Scrum, nor are their any hierarchies of developers.</simpara>
<simpara>"Within a Scrum Team, there are no sub-teams or hierarchies. It is a cohesive unit of professionals." - The Scrum Guide, page 5.</simpara>
<simpara>If there is a backlog item that requires documentation to be generated, or the definition of done requires a set of user acceptance tests (UAT) to e performed, then it is the job of the individuals of the development team to get those tasks done.</simpara>
<simpara>The developers of the Scrum Team are responsible for the end-to-end development of all features in the Product Backlog with full compliance to any non-functional requirements the definition of done may demand.</simpara>
</section>
<section xml:id="_question_10_2">
<title>Question 10</title>
<sidebar>
<simpara>Unforeseen circumstances have reduced developer productivity and half-way through the Sprint it is clear that the Sprint Plan must change drastically in order for the Sprint Goal to be achieved.</simpara>
<simpara>What guidance would you, as the Scrum Master, provide to the team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Tell the developers to cancel the development Sprint and start a new Sprint Planning session</simpara>
</listitem>
<listitem>
<simpara>&#10003; B.	Have the developers regroup and update the Sprint Plan as soon as possible</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the developers dedicate time during the next Daily Scrum to update the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Tell the developers the Sprint Plan cannot change and have them continue working as planned towards the Sprint Goal</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>If circumstances change and the developers need to update their plan, they should update their plan immediately.</simpara>
<simpara>During the Sprint, the Sprint Goal cannot change, nor can a Sprint be cancelled on the whim of the Scrum Master or the developers.</simpara>
<simpara>What can change is the Sprint Plan, and it&#8217;s expected to be updated throughout the sprint as conditions change and more is learned about the product being developed.</simpara>
<simpara>Developers should certainly not wait for a scheduled event like the Daily Scrum to adapt their plan if it&#8217;s necessary.</simpara>
<simpara>"The Daily Scrum is not the only time Developers are allowed to adjust their plan. They often meet throughout the day for more detailed discussions about adapting or replanning." –The Scrum Guide, page 9.</simpara>
</section>
</chapter>
<chapter xml:id="_a_simple_trick">
<title>A Simple Trick</title>
<simpara>Here&#8217;s a simple trick to correctly answering some of the hardest questions you&#8217;ll face on the Scrum Master certification exam. I&#8217;ve alluded to it throughout the book, but I really want to drive the idea home with the next mock Scrum Master exam.</simpara>
<section xml:id="_a_hack_to_help_you_pass_the_exam">
<title>A Hack to Help You Pass the Exam</title>
<simpara>Most people who take the Scrum Master exam come from the world of software development. That can really clutter your mind when answering a certification exam question.</simpara>
<simpara>So instead of thinking about how a given exam question applies to the field of software development, reframe the question in a completely different domain.</simpara>
<figure>
<title>Reframing exam questions  outside of software development makes them easier to answer.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/shipwreck.jpg"/>
</imageobject>
<textobject><phrase>Reframe all exam questions in a survival camp.</phrase></textobject>
</mediaobject>
</figure>
<simpara>The following exam questions are a mirror image of the first set of questions you were just asked, but reframed in a much more rediculous and extreme scenario.</simpara>
<simpara>The scenario used for the next set of quetsions is that of a shipwreck where a survivors from a marooned party boat are forced to build a survival camp as they await rescue.</simpara>
<itemizedlist>
<listitem>
<simpara>The life-and-death scenario in which the questions are framed help simplify the interpretation of Scrum</simpara>
</listitem>
<listitem>
<simpara>The rediculousness makes the questions a bit more interesting.</simpara>
</listitem>
</itemizedlist>
<simpara>I think you&#8217;ll find the next set of questions to be a bit more fun to answer than they prototypical Scrum Master certification exam questions. You’ll also find that they’ll give you a deeper understanding of the Scrum framework as well.</simpara>
</section>
</chapter>
<chapter xml:id="_the_party_boat_disaster">
<title>The Party Boat Disaster</title>
<simpara>A party boat from a popular tech conference was blown off course by a surprise typhoon, and 100 injured developers are now shipwrecked on a deserted island somewhere in the south pacific.</simpara>
<simpara>The ship is marooned on rocky coral, stranded about 30 meters from the island&#8217;s shore, and most of the survivors are too injured to make it to dry land.</simpara>
<simpara>Nobody knows what to do. Fortunately, one developer took a Scrum courses and has a copy of the 2020 Scrum Guide with them.</simpara>
<simpara>The castaways are going to make it through this ordeal, and a Scrum based approach to survival will guide them through it.</simpara>
<simpara>Their first task? Get a team of developers to go to shore and build a survival camp.
10 Scrum Master exam questions</simpara>
<figure>
<title>The following set of questions frame Scrum in a life-or-death survival scenario where castaways from a shipwreck must build a survival shelter.</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/shipwreck2.jpg"/>
</imageobject>
<textobject><phrase>Reframe all exam questions in a survival camp.</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_questions">
<title>Questions</title>
<section xml:id="_question_1_3">
<title>Question 1</title>
<simpara>Scrum is software development process and should not be applied to life-or-death tasks like building a survival shelter.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_2_3">
<title>Question 2</title>
<simpara>You, the Scrum Master, have outdoors experience. You would like to be a developer on the first Sprint and help build the temporary shelter.</simpara>
<simpara>How should you proceed in order not to violate the rules of the Scrum Guide?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	You must temporarily assign Scrum Master duties to another person while you act as a developer</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	You must temporarily assign Scrum Master duties to the Product Owner while you act as a developer</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	You must participate in the Daily Scrum during the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Scrum Masters cannot be a developer on their Scrum Team</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_3_3">
<title>Question 3</title>
<simpara>A team of four developers, along with a Product Owner and the Scrum Master, have made it to shore and need to start building a survival shelter. However, the team is at odds over what they should do for the very first Sprint.</simpara>
<simpara>Whose approach is most in line with the ethos of the Scrum Guide?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Jim wants to declare a 'Sprint 0' where time is spent planning and designing the survival camp</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Julie wants to spend the first Sprint searching the island for tools they can use to build the survival camp</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Jeff wants to spend the first Sprint searching the island for edible food and clean water</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Jessica wants to build a simple communication system from the camp to the ship using mirrors she salvaged</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_4_3">
<title>Question 4</title>
<simpara>Bob dug a trench to divert water from a nearby stream to the survival camp. Alan dug a trench so waste could be safely flushed from the survival camp out to sea.</simpara>
<simpara>The two trenches need to be joined. When is the best time to integrate these two trenches?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Integration should happen immediately assuming both trenches meet the definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Integration should be coordinated with the rest of the team during the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Integration should happen during the Sprint Review so stakeholders can be present</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Integration should happen after approval is obtained from the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	Integration should happen after approval is obtained from the Product Owner</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_5_3">
<title>Question 5</title>
<simpara>Tina has just spotted a poisonous snake on the outskirts of the camp. When should Tina inform the rest of the development team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	The development team should be informed immediately</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The development team should be informed at the next Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The development team should be informed during the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	The development team should be informed during the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	The development team should be informed after discussing the deadly snake with the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; F.	The development team should be informed after discussing the deadly snake the Product Owner</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_6_3">
<title>Question 6</title>
<simpara>Living conditions have become dire and progress on the survival camp has not been going as quickly as planned. Two developers and the Scrum Master will be returning to the marooned ship for two days to care for loved ones.</simpara>
<simpara>What instructions do you, the Scrum Master, have for the developers returning to the boat, knowing that the survivors on the ship are the primary stakeholders in the development of the survival camp.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Tell the developers not to directly interact with any of the stakeholders on the ship</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Tell the developers to direct all questions from stakeholders about the survival camp to the Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have developers tell stakeholders to hold any questions they have about the survival camp for the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Discuss progress about the survival camp openly and honestly with stakeholders whenever they ask about it</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_7_3">
<title>Question 7</title>
<simpara>Three healthy and enthusiastic survivors have swum ashore to help build the survival camp.
Given the fact that a new, two-week Sprint has just started, when should these developers be added to the development team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	The developers should be added to the team immediately</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The developers should be added to the team at the next Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The developers should be added to the team when the current Sprint ends but before the next Sprint begins</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	The developers should be added to the team at the next Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	New developers cannot be added to a team once product development has started</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_8_3">
<title>Question 8</title>
<simpara>Things have been running smoothly for the last three Sprints. However, three new developers with no experience in building a survival camp have just been added to the team.</simpara>
<simpara>What will happen to the individual productivity of the experienced developers?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	A permanent decrease in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	A short term decrease in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	A permanent increase in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	A short term increase in productivity will occur</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_9_3">
<title>Question 9</title>
<simpara>The Product Owner has decided the survival camp needs a canoe. However, nobody on the team has the skills to build a canoe. What should the team do?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Organize a sub-team dedicated to building a canoe</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Outsource the building of a canoe to a third-party</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Tell the Product Owner building a canoe is not possible</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Figure out how to build a canoe</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_10_3">
<title>Question 10</title>
<simpara>A devastating flash flood has ripped through the survival camp and washed away the shelters the team spent the majority of the Sprint building.</simpara>
<simpara>How should the Scrum team proceed?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Have the developers regroup and adjust the Sprint Plan accordingly</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the developers cancel the Sprint and begin a new Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the developers put time aside during the next Daily Scrum to adjust the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Tell the developers the Sprint Plan cannot be changed and they should continue with their original plan</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
</chapter>
<chapter xml:id="_answers">
<title>Answers</title>
<section xml:id="_question_1_4">
<title>Question 1</title>
<sidebar>
<simpara>Scrum is software development process and should not be applied to life-or-death tasks like building a survival shelter.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; False</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>This is false.</simpara>
<simpara>Scrum is a way to help teams get started on the development of a product and help those teams iteratively solve complex problems until product development is complete.</simpara>
<simpara>Scrum is a lightweight, incomplete framework for product development.</simpara>
<simpara>Scrum is not a process or a methodology, and it is definitely not to exclusively tied to the domain of software development.</simpara>
</section>
<section xml:id="_question_2_4">
<title>Question 2</title>
<sidebar>
<simpara>You, the Scrum Master, have outdoors experience. You would like to be a developer on the first Sprint and help build the temporary shelter.</simpara>
<simpara>How should you proceed in order not to violate the rules of the Scrum Guide?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	You must temporarily assign Scrum Master duties to another person while you act as a developer</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	You must temporarily assign Scrum Master duties to the Product Owner while you act as a developer</simpara>
</listitem>
<listitem>
<simpara>&#10003; C.	You must participate in the Daily Scrum during the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Scrum Masters cannot be a developer on their Scrum Team</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option C is correct.</simpara>
<simpara>There&#8217;s no rule that says a Scrum Master can&#8217;t also be a developer.</simpara>
<simpara>Could you imagine a life or death survival situation where a Scrum Master refuses to offer assistance just because they have the title as 'Scrum Master?' The idea is preposterous.</simpara>
<simpara>Both a Scrum Master and the Product Owner can participate as developers on a Scrum Team. The only rule is that when doing product development, a PO or Scrum Master must attend the Daily Scrum and participate as unbiased developers.</simpara>
</section>
<section xml:id="_question_3_4">
<title>Question 3</title>
<sidebar>
<simpara>A team of four developers, along with a Product Owner and the Scrum Master, have made it to shore and need to start building a survival shelter. However, the team is at odds over what they should do for the very first Sprint.</simpara>
<simpara>Whose approach is most in line with the ethos of the Scrum Guide?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Jim wants to declare a 'Sprint 0' where time is spent planning and designing the survival camp</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Julie wants to spend the first Sprint searching the island for tools they can use to build the survival camp</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Jeff wants to spend the first Sprint searching the island for edible food and clean water</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	Jessica wants to build a simple communication system from the camp to the ship using mirrors she salvaged</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>In Scrum, every Sprint must attempt to deliver some piece of usable and valuable functionality that will be part of the final product.</simpara>
<simpara>Setting up infrastructure, configuring tools, planning, design and even finding food to eat are all noble tasks, but they all must occur in the background as the Scrum team focuses on the delivery of at least one increment of value before the end of the current Sprint.</simpara>
</section>
<section xml:id="_question_4_4">
<title>Question 4</title>
<sidebar>
<simpara>Bob dug a trench to divert water from a nearby stream to the survival camp. Alan dug a trench so waste could be safely flushed from the survival camp out to sea.</simpara>
<simpara>The two trenches need to be joined. When is the best time to integrate these two trenches?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A.	Integration should happen immediately assuming both trenches meet the definition of done</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Integration should be coordinated with the rest of the team during the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Integration should happen during the Sprint Review so stakeholders can be present</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Integration should happen after approval is obtained from the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	Integration should happen after approval is obtained from the Product Owner</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>If two developers have worked on a feature that is complete and meets the definition of done, they should integrate their work immediately.</simpara>
<simpara>Scrum prides itself on being based on lean thinking. How lean would it be to have developers wait around for a Scrum Master or Product Owner to tell them it&#8217;s okay to integrate their work?</simpara>
<simpara>If the work is done, it should be integrated immediately. After all, if the work does not successfully integrate, then it&#8217;s not really 'done', is it?</simpara>
<simpara>Scrum doesn&#8217;t put 'red tape', ceremony and procedure around the development process. Instead, Scrum is pragmatic and lean. When work is done, integrate it immediately and then move on to the next thing that needs to be built.</simpara>
</section>
<section xml:id="_question_5_4">
<title>Question 5</title>
<sidebar>
<simpara>Tina has just spotted a poisonous snake on the outskirts of the camp. When should Tina inform the rest of the development team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A.	The development team should be informed immediately</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The development team should be informed at the next Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The development team should be informed during the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	The development team should be informed during the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	The development team should be informed after discussing the deadly snake with the Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; F.	The development team should be informed after discussing the deadly snake the Product Owner</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>Obviously if something threatens the people working on the product, the existence of the threat should be brought up immediately. You don&#8217;t wait for a planned event to warn your peers about a dangerous situation.</simpara>
<simpara>On the Scrum Master exam, they will ask you what should happen if a developer identifies a dangerous security flaw that threatens the project. People often stumble on this question, thinking maybe it&#8217;s something to discuss at the Sprint Retrospective, or something to raise at the next Daily Scrum.</simpara>
<simpara>Scrum is pragmatic. If there&#8217;s a serious problem, it should be addressed immediately. The Scrum Events should never act as an excuse to postpone important discussions about the health of the project.</simpara>
</section>
<section xml:id="_question_6_4">
<title>Question 6</title>
<sidebar>
<simpara>Living conditions have become dire and progress on the survival camp has not been going as quickly as planned. Two developers and the Scrum Master will be returning to the marooned ship for two days to care for loved ones.</simpara>
<simpara>What instructions do you, the Scrum Master, have for the developers returning to the boat, knowing that the survivors on the ship are the primary stakeholders in the development of the survival camp.</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Tell the developers not to directly interact with any of the stakeholders on the ship</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Tell the developers to direct all questions from stakeholders about the survival camp to the Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have developers tell stakeholders to hold any questions they have about the survival camp for the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	Discuss progress about the survival camp openly and honestly with stakeholders whenever they ask about it</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>Could you imagine how much fear, uncertainty and distrust it would create in this scenario if a gag order was put on the people building the survival camp?</simpara>
<simpara>Furthermore, the idea that developers should not be allowed to talk to stakeholders in this scenario is asinine and paradoxical, because every one of the developers is a stakeholders. Everyone in this problem domain is a stakeholder.</simpara>
<simpara>People think Scrum has a whole set of rules that regulate when a developer is allowed to talk to a stakeholder or the product owner or a customer. It doesn’t.</simpara>
<simpara>Scrum doesn&#8217;t advocate secrecy and silence. Scrum advocates for transparency and openness.
If your organization has some rules about developers not talking to stakeholders, that&#8217;s an entirely different issue. It&#8217;s also an issue the Scrum Master might want to address.</simpara>
<simpara>Rules that limit transparency and communication do not coincide the Scrum values and pillars.</simpara>
</section>
<section xml:id="_question_7_4">
<title>Question 7</title>
<sidebar>
<simpara>Three healthy and enthusiastic survivors have swum ashore to help build the survival camp.
Given the fact that a new, two-week Sprint has just started, when should these developers be added to the development team?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A.	The developers should be added to the team immediately</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	The developers should be added to the team at the next Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	The developers should be added to the team when the current Sprint ends but before the next Sprint begins</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	The developers should be added to the team at the next Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; E.	New developers cannot be added to a team once product development has started</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>If you were in a life or death situation, and three people showed up who could potentially help save you, would you ask them to sit on the sidelines for two weeks until the next Sprint Planning meeting, or would you get them to work right away?</simpara>
<simpara>Which approach is more pragmatic and lean? Having developers sit on the sidelines doing nothing, or having them get to work right away?</simpara>
<simpara>If new developers become available, have them join the team and get to work immediately.</simpara>
</section>
<section xml:id="_question_8_4">
<title>Question 8</title>
<sidebar>
<simpara>Things have been running smoothly for the last three Sprints. However, three new developers with no experience in building a survival camp have just been added to the team.</simpara>
<simpara>What will happen to the individual productivity of the experienced developers?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	A permanent decrease in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10003; B.	A short term decrease in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	A permanent increase in productivity will occur</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	A short term increase in productivity will occur</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option B is correct.</simpara>
<simpara>When new developers are added to a team, the onboarding process takes time, and it usually consumes the time of existing team members.</simpara>
<simpara>When new developers become familiar with the development process, productivity will go back to normal, but in the short term, individual productivity will fall.</simpara>
</section>
<section xml:id="_question_9_4">
<title>Question 9</title>
<sidebar>
<simpara>The Product Owner has decided the survival camp needs a canoe. However, nobody on the team has the skills to build a canoe. What should the team do?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A.	Organize a sub-team dedicated to building a canoe</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Outsource the building of a canoe to a third-party</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Tell the Product Owner building a canoe is not possible</simpara>
</listitem>
<listitem>
<simpara>&#10003; D.	Figure out how to build a canoe</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option D is correct.</simpara>
<simpara>It is assumed that all of the skills required to build out the various product backlog items exist within the team of Scrum developers, and if they don’t, the team will acquire them.</simpara>
<simpara>There are no sub-teams or hierarchies in scrum, and there’s certainly nobody to outsource to on a deserted island. When you take the Scrum Master certification exam, assume each test question is talking about an isolated team of developers unless the question states otherwise.</simpara>
<simpara>If one of the Product Backlog items is a canoe, then the team better learn how to carve out a canoe.</simpara>
</section>
<section xml:id="_question_10_4">
<title>Question 10</title>
<sidebar>
<simpara>A devastating flash flood has ripped through the survival camp and washed away the shelters the team spent the majority of the Sprint building.</simpara>
<simpara>How should the Scrum team proceed?</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A.	Have the developers regroup and adjust the Sprint Plan accordingly</simpara>
</listitem>
<listitem>
<simpara>&#10063; B.	Have the developers cancel the Sprint and begin a new Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; C.	Have the developers put time aside during the next Daily Scrum to adjust the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; D.	Tell the developers the Sprint Plan cannot be changed and they should continue with their original plan</simpara>
</listitem>
</itemizedlist>
</sidebar>
<simpara>Option A is correct.</simpara>
<simpara>When circumstances change, developers should adapt immediately.</simpara>
<simpara>Scrum provides a number of scheduled events to ensure communication happens regularly, but those events are not the only times developers are allowed to communicate with each other. If something dramatic happens, developers should immediately adapt. Adaptation should be perpetual throughout a Sprint.</simpara>
<simpara>Note that while the Sprint Plan can change, the Sprint Goal cannot. The Sprint Goal is finalized at the end of Sprint Planning and cannot be changed throughout the Sprint.</simpara>
<simpara>It is also not possible for the developers or the Scrum Master to cancel a Sprint. Only the Product Owner can cancel a Sprint, and only under the circumstance where the Sprint Goal has become obsolete.</simpara>
<simpara>Don&#8217;t overthink Scrum. Don&#8217;t ever let the Scrum events be an excuse for not taking immediate action when immediate action is warranted.</simpara>
</section>
</chapter>
<chapter xml:id="_25_question_exam_1">
<title>25 Question Exam #1</title>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/exam-sitting.jpg"/>
</imageobject>
<textobject><phrase></phrase></textobject>
</mediaobject>
</informalfigure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_question_1_5">
<title>Question 1</title>
<simpara>Every Sprint needs a Sprint Backlog. Which of the following two statements are true about the Sprint Backlog?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Backlog is a list of all the work planned to be done in the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Every item has a specific developer designated as its owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Each task is estimated in either hours or story points.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Sprint Backlog is managed by the Scrum developers.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Backlog is managed by the Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. The Sprint Backlog is managed by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_2_5">
<title>Question 2</title>
<simpara>The Sprint Goal is finalized during Sprint Planning and cannot be changed throughout the Sprint.
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_3_5">
<title>Question 3</title>
<simpara>Which of the following is true about Sprint Planning in Scrum?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Goal must be finalized before the end of Sprint Planning and cannot change during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint Backlog must be finalized before the end of Sprint Planning and cannot change during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Scrum Teams working on the same Product Backlog may attend another team&#8217;s Scrum Planning event.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Scrum Teams working on the same Product Backlog may not attend another team&#8217;s Scrum Planning event.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_4_5">
<title>Question 4</title>
<simpara>Which of the following would be responsibilities a team&#8217;s Scrum Master would fulfill?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. At the Sprint Review, the Scrum Master identifies which backlog items have met the Definition of Done and which have not.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master coaches the Scrum Team on the importance of keeping Scrum events within their timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master helps to plan and advises on Scrum implementations within their organization.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Master will assign tasks to development team members in order to maximize their utilization.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Scrum Master is responsible for updating Agile tools such as JIRA and generating Sprint Burndown charts for the team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_5_5">
<title>Question 5</title>
<simpara>A developer has come to you, the Scrum Master, expressing concerns about the lax attitudes the team has towards data privacy and security. The concerned developer believes there are serious security vulnerabilities in the existing code.</simpara>
<simpara>How should the Scrum Master first respond to a Scrum Developer expressing such concerns?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Ask the Product Owner to add security to the definition of done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Ask the development team to stop further development of features until the issues are addressed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Ask the Product Owner to add a Product Backlog item for security and push it to the top of the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Check with the organization&#8217;s security team to see if the concerns are valid.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Have the developer share their concerns with the team and have the team decide on a course of action.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_6_5">
<title>Question 6</title>
<simpara>What are the primary objectives served by the Definition of Done (DoD)?
(Choose 4)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The DoD helps the Scrum Developers estimate the number of Product Backlog items to select for the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The DoD creates a common understanding across the team with regard to when development work is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The DoD describes the purpose, reasoning, and time allotment for each Scrum event.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The DoD describes the work that must be done before the Sprint is ended.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The DoD helps to increase transparency throughout the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. The DoD helps to create consistency across Scrum Teams working on the same product.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_7_5">
<title>Question 7</title>
<simpara>In the absence of a person with quality assurance (QA) training on the team, what should a group of Scrum Developers do about all of the QA requirements that are part of the Definition of Done?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the organization form an external team of QA analysts who will take care of QA tasks.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Complete each Product Backlog item and exclude QA tasks. Allow QA tasks to become part of a future Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Have the development team train and learn the skills required to perform QA tasks.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the Product Owner remove the Quality Assurance requirements from the Definition of Done.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_8_5">
<title>Question 8</title>
<simpara>While they are no longer officially part of the Scrum Guide, there are three questions commonly answered by developers in the Daily Scrum. What are they?</simpara>
<simpara>(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. How well do you feel the Scrum framework is being applied?</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. What did you do yesterday?</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Will you be working overtime this weekend?</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. What will you do today?</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Why is the status you would like to report back to management?</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. What, if anything, is blocking your progress?</simpara>
</listitem>
<listitem>
<simpara>&#10063; G. What Product Backlog items do you believe will need to be added to the next Sprint?</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_9_5">
<title>Question 9</title>
<simpara>The Sprint Review is one of Scrum&#8217;s timeboxed events. According to the Scrum Guide, what is the maximum amount of time a Sprint Review should last?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. 15 minutes</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. 2 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. 8 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. As long as the Scrum Team deems necessary.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_10_5">
<title>Question 10</title>
<simpara>When three Scrum Teams work on the same product with the same Product Backlog, they must each have the same Sprint length.
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10063; Flase</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_11">
<title>Question 11</title>
<simpara>Sprint Zero is the name the Scrum Guide gives to the first Sprint in a project.
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_12">
<title>Question 12</title>
<simpara>According to the 2020 Scrum Guide, when does a Sprint officially come to an end?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. When the predetermined length, or 'timebox,' for the Sprint expires.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. When all Product Backlog items are complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. When all Product Backlog items selected for the Sprint are complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When a full increment that delivers value to the client is complete.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_13">
<title>Question 13</title>
<simpara>Despite ongoing coaching and facilitation, a member of the development team has failed to integrate well with their peers.</simpara>
<simpara>The Scrum Developers have just informed you that the consensus is that the developer needs to be removed from the team.</simpara>
<simpara>What should you do as a Scrum Master?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Continue to facilitate team building activities to help the underperforming developer integrate better with the team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Continue to coach the development team on ways to improve communication between peers and help everyone on the team get along.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Help the team remove the unwanted developer and coach them on ways to do it in a manner that is fair and respectful.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Inform the development team that they do not have the authority to remove members from the team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_14">
<title>Question 14</title>
<simpara>What techniques can a Scrum Master use to facilitate the prevention or removal of impediments in an organization?</simpara>
<simpara>(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Coach management on how to use Scrum artifacts to achieve transparency.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Schedule Zoom calls for the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Coach the Scrum Team on the importance of keeping the Sprint Retrospective within the timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Take notes for the developers during the Daily Scrum.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Coach the developers on keeping the Daily Scrum within the timebox.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_15">
<title>Question 15</title>
<simpara>The Product Owner is not attending Sprint Reviews and Sprint Retrospectives.</simpara>
<simpara>The Product Owner also seems to have trouble ordering the Product Backlog in a way that maximizes its value.</simpara>
<simpara>What should the Scrum Master do in this situation?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Coach the Product Owner and help them understand Scrum theory and practice.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Report the issue to senior management.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Discuss the issue with the Product Owner and try to remove impediments to the PO attending Scrum events.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Coach the Product Owner on the importance of ordering the product backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Replace the Product Owner with a senior member of the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Remove the Product Owner from the Scrum Team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_16">
<title>Question 16</title>
<simpara>The Product Owner and the development team are at loggerheads over which Product Backlog items should be selected for the Sprint.</simpara>
<simpara>The Product Owner wants the highest priority items completed, but the development team insists existing impediments and unfullfilled dependencies make the highest priority Backlog items impossible to start on. The development team has selected slightly lower priority items that can be completed this Sprint.</simpara>
<simpara>After 8 hours of Sprint Planning, the only thing the development team and the Product Owner have agreed upon is the Sprint Goal. What should the Scrum Master do?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Product Owner choose the Sprint Backlog items for the development team to work on, as the Product Owner is the one who prioritized the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Trust the development team to choose which Product Backlog items to make part of the development Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Extend the Sprint Planning meetings beyond its 8-hour time box to allow the development team and the Product Owner to come to an agreement.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. End the Sprint Planning meeting and start development after the 8-hour Sprint Planning timebox ends, even if the disagreement persists.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Discuss why the disagreement happened, how it impacted the development process and come up with ways to avoid such disagreements in the future during the Sprint Retrospective.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_17">
<title>Question 17</title>
<simpara>Ten separate Scrum teams are developing a very complex and highly integrated product.</simpara>
<simpara>What role does the Scrum Master play in ensuring each team can successfully integrate their software together with other teams without merge conflicts or incompatible deployments?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master should have the Product Owner coordinate with a designated team lead from each Scrum Team and reach an agreement on when Product Backlog items will be integrated together.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master should coach the ten teams on how to be self-managed and have the teams come up with their own solutions on how to integrate code together.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master should visit each team at the start of their Sprints to ensure no two teams are working on the same task. This will make integration easier.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Since the Product Owner (PO) is shared across all teams on the same project, the Scrum Master makes sure the PO visits each team regularly to coordinate integrations.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_18">
<title>Question 18</title>
<simpara>You have been hired to be the Scrum Master for five separate Scrum Teams, all of which are working to develop the same exact product.</simpara>
<simpara>As a Scrum Master intent on respecting the Scrum Guide and coaching around Scrum best practices, what would you recommend?</simpara>
<simpara>(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. There should be one Product Owner shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. There should be five Scrum Masters with each one 100% dedicated to their team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. There should be five Product Backlogs, one for each team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. There should be one Product Backlog shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. There should be five Product Owners with each one 100% dedicated to their team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Multiple Scrum Teams cannot develop the same product at the same time.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_19">
<title>Question 19</title>
<simpara>What is the number one, highest priority and responsibility of the Product Owner in Scrum?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Working with the Scrum Master to select Product Backlog items to work on during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Instilling quality by making sure developers adhere to their Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Turning Product Backlog Items into understandable use cases and user stories.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Maximizing the value of the product resulting from the work of the Scrum Team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_20">
<title>Question 20</title>
<simpara>Two Scrum Teams working on the same product want to do Sprint Planning together so they can coordinate the items they pull from the common Product Backlog.</simpara>
<simpara>How would you as a Scrum Master advise the team?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Two teams working on the same project should have separate Product Backlogs, making this unnecessary.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Two separate Scrum Teams should not be openly discussing their development work with each other.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner should be selecting Product Backlog items for each team, so the joint meeting is unnecessary.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Explain to the teams that Scrum forbids shared planning meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Encourage the teams to be self-managed, encourage them to introduce new processes like the one they suggested, and have them introspect during the Sprint Retrospective and adapt accordingly.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_21">
<title>Question 21</title>
<simpara>Before the end of every Sprint, the Scrum Team must produce a usable, valuable Increment.</simpara>
<simpara>But what exactly constitutes a usable and valuable Increment?</simpara>
<simpara>How much work do the Scrum Developers need to perform on a Product Backlog item for it to be considered a full-fledged Increment?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Developers do as much work as the they can complete in the current Sprint, after which their work becomes part of the Increment.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Developers do  a proportional amount of time on analysis, engineering, QA, programming, testing, and documentation.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Developers work on a Product Backlog item until the Scrum Master says it meets the Definition of Done</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Developers work on a Product Backlog item until it meets the agreed upon Definition of Done.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_22">
<title>Question 22</title>
<simpara>The Scrum Team has been assembled, the Product Owner has the backlog ordered and everyone is ready for their very first Sprint!</simpara>
<simpara>What actions should a new Scrum  Team take during the initial Sprint when starting a new project?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Create at least one piece of usable functionality that will be included in the final product.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Perform requirements gathering and validate the initial designs so development can proceed in subsequent Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. With the Product Owner and Scrum Master, examine the Product Backlog and estimate how many Sprints will be required to complete the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Communicate with external teams to understand how the continuous integration and continuous delivery pipelines work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Create a usable product Increment.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_23">
<title>Question 23</title>
<simpara>Human resources (HR) has just hired 75 new developers to work on a company-defining flagship product.</simpara>
<simpara>The head of HR has asked you, the Scrum Master, to help with dividing these new hires into development teams.</simpara>
<simpara>What is the best way to divide a group of 75 new developers, of varying skills and experience, into multiple development teams?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Nominate 7-10 trusted developers to be team leads and let the team leaders perform member allocation based on the skills their teams will require.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The 75 developers should be allowed to divide themselves into teams on their own without direct intervention from the Scrum Master, Product Owner, stakeholders or outside party.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Have the Scrum Master and Product Owner work together to create teams that balance skills, seniority and experience.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have an external, impartial party like the Human Resources department create teams that balance skills, seniority and experience.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_24">
<title>Question 24</title>
<simpara>The product under development is very advanced and will likely be fairly complicated for new users.</simpara>
<simpara>Part of the Product Backlog includes the creation of extensive user documentation including screen-shots, how-to guides and even video demos.</simpara>
<simpara>According to the Scrum Guide, who is responsible for the delivery of technical documentation required for a software product?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master creates all the technical documentation with oversight from the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Technical documentation is typically done by a specialized team external to the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Technical documentation is done by a specialized sub-team inside the Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. If it&#8217;s a Product Backlog item, the Scrum Developers will need to find the time to create the technical documentation themselves.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The creation of technical documentation is not a concern of a Scrum Team doing software development.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_25">
<title>Question 25</title>
<simpara>There are three roles, or as the Scrum Guide puts it, 'accountabilities' in Scrum:</simpara>
<itemizedlist>
<listitem>
<simpara>The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>The Product Owner</simpara>
</listitem>
<listitem>
<simpara>The Developers</simpara>
</listitem>
</itemizedlist>
<simpara>What are key characteristics and responsibilities of the Product Owner?</simpara>
<simpara>(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner is the one who orders the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner is a single person and the role cannot be shared.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner commits 100% of their time to their Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Multiple individuals with product knowledge can share the Product Owner role on a Scrum Team.</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_answers_2">
<title>Answers</title>
<section xml:id="_answer_1">
<title>Answer 1</title>
<sidebar>
<para xml:id="query">
<simpara>Every Sprint needs a Sprint Backlog. Which of the following two statements are true about the Sprint Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Sprint Backlog is a list of all the work planned to be done in the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Every item has a specific developer designated as its owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Each task is estimated in either hours or story points.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Sprint Backlog is managed by the Scrum developers.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Backlog is managed by the Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. The Sprint Backlog is managed by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and D.</simpara>
<para xml:id="explanation">
<simpara>The Sprint Backlog is a key artifact in the Scrum framework.</simpara>
<simpara>The Sprint Backlog outlines the work that the Scrum Developers plan to complete during the current Sprint. It is created and managed by the Scrum Developers, which makes sense because it is the developers who are responsible for delivering at least one product Increment before the end of the Sprint.</simpara>
<simpara>The Sprint Backlog is managed by the Scrum Developers because they are the ones who are responsible for organizing, planning, and executing the work. The Developers have the technical knowledge and skills required to create the plan, estimate the work and track the progress during the Sprint.</simpara>
<simpara>You can always assume that the Product Owner has a vision, but has absolutely no clue how to build it. Only the developers have that knowledge.</simpara>
</para>
</section>
<section xml:id="_answer_2">
<title>Answer 2</title>
<sidebar>
<para xml:id="query">
<simpara>The Sprint Goal is finalized during Sprint Planning and cannot be changed throughout the Sprint.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>This is true.</simpara>
<simpara>The Sprint Goal is finalized during Sprint Planning and remains constant throughout the Sprint.</simpara>
<simpara>Changes can be made to the Sprint Plan and the Sprint Backlog during a Sprint, but the Sprint Goal remains constant.</simpara>
<simpara>"The whole Scrum Team then collaborates to define a Sprint Goal that communicates why the Sprint is valuable to stakeholders. The Sprint Goal must be finalized prior to the end of Sprint Planning."</simpara>
</para>
</section>
<section xml:id="_answer_3">
<title>Answer 3</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following is true about Sprint Planning in Scrum?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Sprint Goal must be finalized before the end of Sprint Planning and cannot change during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint Backlog must be finalized before the end of Sprint Planning and cannot change during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Scrum Teams working on the same Product Backlog may attend another team&#8217;s Scrum Planning event.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Scrum Teams working on the same Product Backlog may not attend another team&#8217;s Scrum Planning event.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and C.</simpara>
<para xml:id="explanation">
<simpara>The Sprint Goal must be finalized before the end of Sprint Planning, but not the Sprit Backlog. The Sprint Backlog is allowed to change throughout the Sprint.</simpara>
<simpara>Also, anyone can attend Sprint Planning if they are invited, so other teams can come and help with the selection of PBIs. This can be very helpful if multiple teams are working on the same project.</simpara>
</para>
</section>
<section xml:id="_answer_4">
<title>Answer 4</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following would be responsibilities a team&#8217;s Scrum Master would fulfill?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. At the Sprint Review, the Scrum Master identifies which backlog items have met the Definition of Done and which have not.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The Scrum Master coaches the Scrum Team on the importance of keeping Scrum events within their timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Scrum Master helps to plan and advises on Scrum implementations within their organization.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Master will assign tasks to development team members in order to maximize their utilization.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Scrum Master is responsible for updating Agile tools such as JIRA and generating Sprint Burndown charts for the team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B and C.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Master is responsible for ensuring the Scrum framework is followed by the team and that the team is continuously improving. Two key aspects of this responsibility are facilitating timeboxed meetings and coaching people on Scrum values.</simpara>
<simpara>The Scrum Master is also responsible for helping their organization to plan for Scrum adoption and advise on how to implement Scrum successfully.</simpara>
<simpara>From the Scrum Guide:</simpara>
<simpara>The Scrum Master serves the organization in several ways, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Leading, training, and coaching the organization in its Scrum adoption;</simpara>
</listitem>
<listitem>
<simpara>Planning and advising Scrum implementations within the organization;</simpara>
</listitem>
<listitem>
<simpara>Helping employees and stakeholders understand and enact an empirical approach for complex work; and,</simpara>
</listitem>
<listitem>
<simpara>Removing barriers between stakeholders and Scrum Teams.</simpara>
</listitem>
</itemizedlist>
</para>
</section>
<section xml:id="_answer_5">
<title>Answer 5</title>
<sidebar>
<para xml:id="query">
<simpara>A developer has come to you, the Scrum Master, expressing concerns about the lax attitudes the team has towards data privacy and security. The concerned developer believes there are serious security vulnerabilities in the existing code.</simpara>
<simpara>How should the Scrum Master first respond to a Scrum Developer expressing such concerns?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Ask the Product Owner to add security to the definition of done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Ask the development team to stop further development of features until the issues are addressed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Ask the Product Owner to add a Product Backlog item for security and push it to the top of the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Check with the organization&#8217;s security team to see if the concerns are valid.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Have the developer share their concerns with the team and have the team decide on a course of action.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is E.</simpara>
<para xml:id="explanation">
<simpara>A Scrum Developer should discuss major concerns immediately with their development team rather than waiting for a Sprint Review or Sprint Retrospective to do so.</simpara>
<simpara>If the developer does not feel comfortable discussing the issue with the team, that points to an even deeper problem with team dynamics, which is an impediment to transparency. This would be an impediment the Scrum Master would be interested in coaching around.</simpara>
</para>
</section>
<section xml:id="_answer_6">
<title>Answer 6</title>
<sidebar>
<para xml:id="query">
<simpara>What are the primary objectives served by the Definition of Done (DoD)?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The DoD helps the Scrum Developers estimate the number of Product Backlog items to select for the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The DoD creates a common understanding across the team with regard to when development work is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The DoD describes the purpose, reasoning, and time allotment for each Scrum event.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The DoD describes the work that must be done before the Sprint is ended.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. The DoD helps to increase transparency throughout the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10003; F. The DoD helps to create consistency across Scrum Teams working on the same product.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, B, E and F.</simpara>
<para xml:id="explanation">
<simpara>Scrum&#8217;s "Definition of Done" is a shared understanding among the Scrum Team of what it means for a Product Backlog item to be considered complete. It is an agreed-upon set of criteria that a Product Backlog item (PBI), or a decomposition of a PBI, must meet before it can be considered "complete."</simpara>
<simpara>By establishing a clear "Definition of Done," Scrum increases transparency by providing a shared understanding of what constitutes a completed Product Backlog item. This shared understanding helps ensure that everyone involved in the development process has the same expectations of what is expected in the final product.</simpara>
<simpara>The "Definition of Done" also helps developers estimate how much work to add to the Sprint Backlog. Because the team has a clear understanding of what constitutes a completed product backlog item, they can more accurately estimate how much work needs to be done to achieve that level of completeness. This can help the team better plan their work for the Sprint and avoid over-committing to work they may not be able to complete.</simpara>
<simpara>Finally, the "Definition of Done" helps developers understand when work is complete. By providing a clear definition of what it means for a Product Bvacklog item to be considered complete, the team can avoid confusion or misunderstandings about what is expected from them. This clarity can help prevent issues such as unfinished work being carried over to future sprints or incomplete work being considered "done," leading to potential issues in the final product.</simpara>
<simpara>It&#8217;s also stated in the Scrum Guide that when multiple teams work on the same Product, they should all share the same Definition of Done so they are all working within the same guidelines.</simpara>
<simpara>"If multiple Scrum Teams are working together on a product, they must mutually define and comply with the same Definition of Done." - The Scrum Guide, page 12.</simpara>
</para>
</section>
<section xml:id="_answer_7">
<title>Answer 7</title>
<sidebar>
<para xml:id="query">
<simpara>In the absence of a person with quality assurance (QA) training on the team, what should a group of Scrum Developers do about all of the QA requirements that are part of the Definition of Done?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the organization form an external team of QA analysts who will take care of QA tasks.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Complete each Product Backlog item and exclude QA tasks. Allow QA tasks to become part of a future Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Have the development team train and learn the skills required to perform QA tasks.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the Product Owner remove the Quality Assurance requirements from the Definition of Done.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>The Scrum development team must be cross-functional and capable of fulfilling all of the requirements that make up the Definition of Done. If any of those skills are lacking, the team will need to acquire those skills.</simpara>
<simpara>In this case, if QA is required to meet the definition of done, then someone, or everyone on the development team must learn QA.</simpara>
</para>
</section>
<section xml:id="_answer_8">
<title>Answer 8</title>
<sidebar>
<para xml:id="query">
<simpara>While they are no longer officially part of the Scrum Guide, there are three questions commonly answered by developers in the Daily Scrum. What are they?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. How well do you feel the Scrum framework is being applied?</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. What did you do yesterday?</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Will you be working overtime this weekend?</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. What will you do today?</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Why is the status you would like to report back to management?</simpara>
</listitem>
<listitem>
<simpara>&#10003; F. What, if anything, is blocking your progress?</simpara>
</listitem>
<listitem>
<simpara>&#10063; G. What Product Backlog items do you believe will need to be added to the next Sprint?</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B, D and F.</simpara>
<para xml:id="explanation">
<simpara>At the Daily Scrum, the Scrum Developers commonly share what was accomplished since the last Daily Scrum, any impediments they are facing, and what they plan to do until the next Daily Scrum.</simpara>
<simpara>Also known as the '3 Daily Scrum questions', these questions were included in previous version of the Scrum Guide, but were removed in the 2020 Scrum Guide update, not because they are bad, but because developers should be free to run the Daily Scrum in any manner they like.</simpara>
</para>
</section>
<section xml:id="_answer_9">
<title>Answer 9</title>
<sidebar>
<para xml:id="query">
<simpara>The Sprint Review is one of Scrum&#8217;s timeboxed events. According to the Scrum Guide, what is the maximum amount of time a Sprint Review should last?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. 15 minutes</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. 2 hours</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. 8 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. As long as the Scrum Team deems necessary.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>The Sprint Review should only last for 4 hours.</simpara>
<simpara>You must know the maximum allowed time-box for each event in Scrum:</simpara>
<itemizedlist>
<listitem>
<simpara>15 minutes for the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>3 hours for the Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>4 hours for the Sprint Review</simpara>
</listitem>
<listitem>
<simpara>8 hours for Sprint Planning</simpara>
</listitem>
<listitem>
<simpara>One calendar month for a Sprint</simpara>
</listitem>
</itemizedlist>
<simpara>From the Scrum Guide: "The Sprint Review is the second to last event of the Sprint and is timeboxed to a maximum of four hours for a one-month Sprint. For shorter Sprints, the event is usually shorter."</simpara>
</para>
</section>
<section xml:id="_answer_10">
<title>Answer 10</title>
<sidebar>
<para xml:id="query">
<simpara>When three Scrum Teams work on the same product with the same Product Backlog, they must each have the same Sprint length.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; True</simpara>
</listitem>
<listitem>
<simpara>&#10003; Flase</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>There is nothing in the Scrum Guide that requires teams working on the same project to have the same Sprint length.</simpara>
<simpara>When the Scrum Guide does not directly address a topic, then there are no specific rules about it.</simpara>
<simpara>The Scrum Guide says teams working on the same Product must have:</simpara>
<itemizedlist>
<listitem>
<simpara>The same Product Owner</simpara>
</listitem>
<listitem>
<simpara>The same Product Goal</simpara>
</listitem>
<listitem>
<simpara>The same Product Backlog</simpara>
</listitem>
<listitem>
<simpara>The same Definition of Done</simpara>
</listitem>
</itemizedlist>
<simpara>Should the teams start their Sprints on the same day? End Springs on the same day? Make their Sprints the same lenght?</simpara>
<simpara>The Scrum Guide is silent on the issue. It&#8217;s up to the team to decide what is best.</simpara>
<simpara>Scrum self-identifies as an 'incomplete framework'. It&#8217;s just a guide. It doesn&#8217;t have all the answers.</simpara>
</para>
</section>
<section xml:id="_answer_11">
<title>Answer 11</title>
<sidebar>
<para xml:id="query">
<simpara>Sprint Zero is the name the Scrum Guide gives to the first Sprint in a project.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. False</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>There is no such thing as a 'Sprint Zero' according to the Scrum Guide.</simpara>
<simpara>Furthermore, the Scrum Guide makes no references to a 'Release Sprint,' 'Integration Sprint' or an 'Infrastructure Sprint.'</simpara>
<simpara>These phrases on the Scrum Master Certification exam will almost always be red herrings that point to an incorrect answer.</simpara>
<simpara>Scrum just has Sprints - plain, ordinary Sprints that must create a usable and valuable Increment of work. There are no Sprints in Scrum where you 'just set things up' or 'just get the infrastructure working.'</simpara>
</para>
</section>
<section xml:id="_answer_12">
<title>Answer 12</title>
<sidebar>
<para xml:id="query">
<simpara>According to the 2020 Scrum Guide, when does a Sprint officially come to an end?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. When the predetermined length, or 'timebox,' for the Sprint expires.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. When all Product Backlog items are complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. When all Product Backlog items selected for the Sprint are complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When a full increment that delivers value to the client is complete.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>A Sprint expires when the predetermined length for the Sprint expires.</simpara>
<simpara>A Sprint may be two weeks, three weeks or four weeks. That&#8217;s up to the team to decide.</simpara>
<simpara>Once the time allotted for the Sprint expires, the Sprint ends and a new Sprint begins.</simpara>
<simpara>Even if Product Backlog items are not finished, or even if the team failed to deliver any Increment of value, the Sprint is not extended. When the allotted time-box is met, the Sprint ends.</simpara>
<simpara>To answer this question even more concisely, the Sprint ends at the end of the Sprint Retrospective. The Sprint Retrospective is the last event in Scrum, and when this event finishes, a new Sprint begins.</simpara>
</para>
</section>
<section xml:id="_answer_13">
<title>Answer 13</title>
<sidebar>
<para xml:id="query">
<simpara>Despite ongoing coaching and facilitation, a member of the development team has failed to integrate well with their peers.</simpara>
<simpara>The Scrum Developers have just informed you that the consensus is that the developer needs to be removed from the team.</simpara>
<simpara>What should you do as a Scrum Master?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Continue to facilitate team building activities to help the underperforming developer integrate better with the team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Continue to coach the development team on ways to improve communication between peers and help everyone on the team get along.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Help the team remove the unwanted developer and coach them on ways to do it in a manner that is fair and respectful.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Inform the development team that they do not have the authority to remove members from the team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>Self-management is one of the core Scrum principles.</simpara>
<simpara>Self-management means that the team has the autonomy, authority and responsibility to manage themselves, including their own processes and procedures, without the need for external supervision or micromanagement.</simpara>
<simpara>One aspect of self-management is that the team members collectively hold themselves accountable for their performance and for delivering the work that they commit to completing within a given sprint. This means that if a team member is underperforming, it can impact the team&#8217;s ability to meet their commitments and deliver on their goals.</simpara>
<simpara>In such situations, the concept of self-management gives the team the authority to take action and make decisions that are in the best interest of the team and the project. This includes the ability to remove an underperforming member from the team if necessary.</simpara>
<simpara>However, it is important to note that this decision should not be taken lightly and should be made collaboratively by the team as a whole. The Scrum Master can also provide guidance and support to the team in these situations to ensure that the decision is made fairly and with the best interests of the team and the project in mind.</simpara>
</para>
</section>
<section xml:id="_answer_14">
<title>Answer 14</title>
<sidebar>
<para xml:id="query">
<simpara>What techniques can a Scrum Master use to facilitate the prevention or removal of impediments in an organization?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Coach management on how to use Scrum artifacts to achieve transparency.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Schedule Zoom calls for the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Coach the Scrum Team on the importance of keeping the Sprint Retrospective within the timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Take notes for the developers during the Daily Scrum.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Coach the developers on keeping the Daily Scrum within the timebox.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and E.</simpara>
<para xml:id="explanation">
<simpara>One of the responsibilities of the Scrum Master is to coach the organization in the proper application of Scrum. Another responsibility is to remove impediments from the team.</simpara>
<simpara>When it comes to removing impediments, those impediments deal specifically with issues related to Scrum and the inappropriate application of Scrum.</simpara>
<simpara>If an impediment is that a team is being micromanaged, the Scrum Master would remove that impediment by coaching management on the importance of self-management and respecting the autonomy of the Scrum Development team.</simpara>
<simpara>For the Scrum Team itself, the Scrum Master&#8217;s job is to coach them on the proper application of the Scrum Guide.</simpara>
<simpara>The Scrum Guide doesn&#8217;t have a lot of rules, but some of the rules that it does have revolve around how long meetings can last. Coaching the team on how to keep Scrum Events within their timebox is definitely a responsibility of a Scrum Master, and if meetings are going too long, helping to keep them short will help remove that impediment.</simpara>
</para>
</section>
<section xml:id="_answer_15">
<title>Answer 15</title>
<sidebar>
<para xml:id="query">
<simpara>The Product Owner is not attending Sprint Reviews and Sprint Retrospectives.</simpara>
<simpara>The Product Owner also seems to have trouble ordering the Product Backlog in a way that maximizes its value.</simpara>
<simpara>What should the Scrum Master do in this situation?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Coach the Product Owner and help them understand Scrum theory and practice.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Report the issue to senior management.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Discuss the issue with the Product Owner and try to remove impediments to the PO attending Scrum events.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Coach the Product Owner on the importance of ordering the product backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Replace the Product Owner with a senior member of the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Remove the Product Owner from the Scrum Team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and D.</simpara>
<para xml:id="explanation">
<simpara>It is the Scrum Master&#8217;s job to work with team members and help them understand Scrum theory and practice.</simpara>
<simpara>Coaching the Product Owner on why Scrum events are important and facilitating ways the Product Owner can get more value out of these Scrum events is one of the Scrum Master&#8217;s jobs.</simpara>
<simpara>The Scrum Master should also coach this Product Owner on the fact that the PO is the one who maximizes the value generated by the Scrum Team, and the primary way that happens is by properly ordering the Product Backlog.</simpara>
<simpara>"The Scrum Master is accountable for establishing Scrum as defined in the Scrum Guide. They do this by helping everyone understand Scrum theory and practice, both within the Scrum Team and the organization."</simpara>
</para>
</section>
<section xml:id="_answer_16">
<title>Answer 16</title>
<sidebar>
<para xml:id="query">
<simpara>The Product Owner and the development team are at loggerheads over which Product Backlog items should be selected for the Sprint.</simpara>
<simpara>The Product Owner wants the highest priority items completed, but the development team insists existing impediments and unfullfilled dependencies make the highest priority Backlog items impossible to start on. The development team has selected slightly lower priority items that can be completed this Sprint.</simpara>
<simpara>After 8 hours of Sprint Planning, the only thing the development team and the Product Owner have agreed upon is the Sprint Goal. What should the Scrum Master do?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Product Owner choose the Sprint Backlog items for the development team to work on, as the Product Owner is the one who prioritized the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Trust the development team to choose which Product Backlog items to make part of the development Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Extend the Sprint Planning meetings beyond its 8-hour time box to allow the development team and the Product Owner to come to an agreement.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. End the Sprint Planning meeting and start development after the 8-hour Sprint Planning timebox ends, even if the disagreement persists.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Discuss why the disagreement happened, how it impacted the development process and come up with ways to avoid such disagreements in the future during the Sprint Retrospective.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B, D and E.</simpara>
<para xml:id="explanation">
<simpara>You don&#8217;t ever extend a Scrum event beyond its timebox.</simpara>
<simpara>Disagreements will happen. When they do, move forward and start development.</simpara>
<simpara>A Sprint will only last a month at most, at most. And teams can adapt daily during the Daily Scrum as the situation changes. That includes potentially adding new PBIs or removing PBIs from the Scrum backlog.</simpara>
<simpara>The development team must be trusted to choose what is right in terms of what to develop over the short term.</simpara>
</para>
</section>
<section xml:id="_answer_17">
<title>Answer 17</title>
<sidebar>
<para xml:id="query">
<simpara>Ten separate Scrum teams are developing a very complex and highly integrated product.</simpara>
<simpara>What role does the Scrum Master play in ensuring each team can successfully integrate their software together with other teams without merge conflicts or incompatible deployments?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master should have the Product Owner coordinate with a designated team lead from each Scrum Team and reach an agreement on when Product Backlog items will be integrated together.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The Scrum Master should coach the ten teams on how to be self-managed and have the teams come up with their own solutions on how to integrate code together.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master should visit each team at the start of their Sprints to ensure no two teams are working on the same task. This will make integration easier.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Since the Product Owner (PO) is shared across all teams on the same project, the Scrum Master makes sure the PO visits each team regularly to coordinate integrations.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>If you think a Scrum Master or a Product Owner is going to be able to figure out how to integrate code across 10 separate teams working on a complicated project, they you&#8217;ve never met a Scrum Master or a Product Owner.</simpara>
<simpara>The Product Owner manages the Product Backlog and the Scrum Master coaches and facilitates, but they can&#8217;t solve technical issues for the development teams.</simpara>
<simpara>All a Scrum Master can do is coach those teams and help them discover their own solutions that work within the intentionally incomplete framework known as Scrum.</simpara>
</para>
</section>
<section xml:id="_answer_18">
<title>Answer 18</title>
<sidebar>
<para xml:id="query">
<simpara>You have been hired to be the Scrum Master for five separate Scrum Teams, all of which are working to develop the same exact product.</simpara>
<simpara>As a Scrum Master intent on respecting the Scrum Guide and coaching around Scrum best practices, what would you recommend?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. There should be one Product Owner shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. There should be five Scrum Masters with each one 100% dedicated to their team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. There should be five Product Backlogs, one for each team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. There should be one Product Backlog shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. There should be five Product Owners with each one 100% dedicated to their team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Multiple Scrum Teams cannot develop the same product at the same time.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and D.</simpara>
<para xml:id="explanation">
<simpara>In Scrum, the Product Backlog is the single, ordered list of items that define what needs to be done to complete the project. The Product Owner is responsible for managing the Product Backlog, ensuring that it is constantly refined and ordered, and that the development team has a clear understanding of what needs to be built and why.</simpara>
<simpara>When multiple teams are building the same product, they must share:</simpara>
<itemizedlist>
<listitem>
<simpara>A common Product Backlog</simpara>
</listitem>
<listitem>
<simpara>The same Product Owner</simpara>
</listitem>
<listitem>
<simpara>A common Product Goal</simpara>
</listitem>
<listitem>
<simpara>The same Definition of Done</simpara>
</listitem>
</itemizedlist>
</para>
</section>
<section xml:id="_answer_19">
<title>Answer 19</title>
<sidebar>
<para xml:id="query">
<simpara>What is the number one, highest priority and responsibility of the Product Owner in Scrum?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Working with the Scrum Master to select Product Backlog items to work on during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Instilling quality by making sure developers adhere to their Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Turning Product Backlog Items into understandable use cases and user stories.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Maximizing the value of the product resulting from the work of the Scrum Team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>The answer to this question comes right out of the Scrum Guide:</simpara>
<simpara>"The Product Owner is accountable for maximizing the value of the product resulting from the work of the Scrum Team."</simpara>
<simpara>The Scrum Guide does not mention the term "use cases" or "user stories" so any reference to them on the Scrum certification exam is normally an <emphasis>incorrect</emphasis> answer.</simpara>
<simpara>"Instilling quality by adhering to a Definition of Done" is actually something the Developers are accountable for according to the Scrum Guide, not the Product Owner.</simpara>
<simpara>Note that the <emphasis>Developers</emphasis> select Product Backlog Items to work on during the Sprint, not the Scrum Master or the Product Owner.</simpara>
</para>
</section>
<section xml:id="_answer_20">
<title>Answer 20</title>
<sidebar>
<para xml:id="query">
<simpara>Two Scrum Teams working on the same product want to do Sprint Planning together so they can coordinate the items they pull from the common Product Backlog.</simpara>
<simpara>How would you as a Scrum Master advise the team?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Two teams working on the same project should have separate Product Backlogs, making this unnecessary.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Two separate Scrum Teams should not be openly discussing their development work with each other.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner should be selecting Product Backlog items for each team, so the joint meeting is unnecessary.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Explain to the teams that Scrum forbids shared planning meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Encourage the teams to be self-managed, encourage them to introduce new processes like the one they suggested, and have them introspect during the Sprint Retrospective and adapt accordingly.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is E.</simpara>
<para xml:id="explanation">
<simpara>Scrum is self-described as an incomplete framework. That means there is a great deal of flexibility and creatively allowed within the bounds of what constitutes Scrum.</simpara>
<simpara>Generally speaking, if Scrum doesn&#8217;t explicitly forbid it, then teams are free to explore it.</simpara>
<simpara>Shared Sprint Planning meetings might be a great process for the teams to implement. Many large companies do exactly that! The Scrum Master should encourage such experimentation.</simpara>
</para>
</section>
<section xml:id="_answer_21">
<title>Answer 21</title>
<sidebar>
<para xml:id="query">
<simpara>Before the end of every Sprint, the Scrum Team must produce a usable, valuable Increment.</simpara>
<simpara>But what exactly constitutes a usable and valuable Increment?</simpara>
<simpara>How much work do the Scrum Developers need to perform on a Product Backlog item for it to be considered a full-fledged Increment?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Developers do as much work as the they can complete in the current Sprint, after which their work becomes part of the Increment.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Developers do  a proportional amount of time on analysis, engineering, QA, programming, testing, and documentation.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Developers work on a Product Backlog item until the Scrum Master says it meets the Definition of Done</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Scrum Developers work on a Product Backlog item until it meets the agreed upon Definition of Done.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>During Sprint Planning, the Scrum Developers pick Product Backlog items they believe the can completed before the end of the Sprint.</simpara>
<simpara>When a selected item meets the Definition of Done, the feature is said to be complete, the work becomes part of the Increment, and the results are shared with stakeholders at the Sprint Review.</simpara>
<simpara>If developers fail to complete the Product Backlog item during the Sprint, the item returns to the Product Backlog. It may or may not be selected for the next Sprint. That&#8217;s up for the team to decide at the next Sprint planning event.</simpara>
</para>
</section>
<section xml:id="_answer_22">
<title>Answer 22</title>
<sidebar>
<para xml:id="query">
<simpara>The Scrum Team has been assembled, the Product Owner has the backlog ordered and everyone is ready for their very first Sprint!</simpara>
<simpara>What actions should a new Scrum  Team take during the initial Sprint when starting a new project?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Create at least one piece of usable functionality that will be included in the final product.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Perform requirements gathering and validate the initial designs so development can proceed in subsequent Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. With the Product Owner and Scrum Master, examine the Product Backlog and estimate how many Sprints will be required to complete the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Communicate with external teams to understand how the continuous integration and continuous delivery pipelines work.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Create a usable product Increment.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and E.</simpara>
<para xml:id="explanation">
<simpara>Every Sprint in Scrum must produce a valuable, usable Increment of work and this Increment of work must be something that becomes part of the final product.</simpara>
<simpara>There is no Sprint Zero in Scrum. There is no 'initial setup Sprint' in Scrum where teams can focus on designs or infrastructure.</simpara>
<simpara>Every Sprint must produce something of value. Every Sprint must produce an Increment of work that will incrementally, over time, lead to a complete and finished product.</simpara>
</para>
</section>
<section xml:id="_answer_23">
<title>Answer 23</title>
<sidebar>
<para xml:id="query">
<simpara>Human resources (HR) has just hired 75 new developers to work on a company-defining flagship product.</simpara>
<simpara>The head of HR has asked you, the Scrum Master, to help with dividing these new hires into development teams.</simpara>
<simpara>What is the best way to divide a group of 75 new developers, of varying skills and experience, into multiple development teams?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Nominate 7-10 trusted developers to be team leads and let the team leaders perform member allocation based on the skills their teams will require.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The 75 developers should be allowed to divide themselves into teams on their own without direct intervention from the Scrum Master, Product Owner, stakeholders or outside party.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Have the Scrum Master and Product Owner work together to create teams that balance skills, seniority and experience.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have an external, impartial party like the Human Resources department create teams that balance skills, seniority and experience.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>Dividing a group of 75 developers into multiple development teams can be a complex process that requires careful consideration of many factors including the developers' skills, experience and the nature of the project.</simpara>
<simpara>One of the best and most Agile ways to divide a group is to use a self-organizing approach, which allows the developers to organize themselves into teams based on their skills and experience. This approach has several benefits:</simpara>
<itemizedlist>
<listitem>
<simpara>Empowerment: When developers are allowed to organize themselves, they feel empowered and are more likely to take ownership of their work and be motivated to succeed.</simpara>
</listitem>
<listitem>
<simpara>Autonomy: Self-organizing teams have the autonomy to make decisions about how to approach their work, which can lead to more innovative solutions and increased productivity.</simpara>
</listitem>
<listitem>
<simpara>Flexibility: The self-organizing approach allows for flexibility in team composition and size, which can be adjusted as the project evolves.</simpara>
</listitem>
</itemizedlist>
<simpara>To implement this approach, the company can provide guidelines and support for the developers to form their teams. Giving the developers insight into the product, what is being built and the skill required would be helpful as well. Informed decisions are the best decisions, but there should not be direct intervention from any outside parties.</simpara>
<simpara>This also comes with the understanding that the teams will be allowed to re-organize again in the future if the teams believe it is necessary to do so.</simpara>
</para>
</section>
<section xml:id="_answer_24">
<title>Answer 24</title>
<sidebar>
<para xml:id="query">
<simpara>The product under development is very advanced and will likely be fairly complicated for new users.</simpara>
<simpara>Part of the Product Backlog includes the creation of extensive user documentation including screen-shots, how-to guides and even video demos.</simpara>
<simpara>According to the Scrum Guide, who is responsible for the delivery of technical documentation required for a software product?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master creates all the technical documentation with oversight from the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Technical documentation is typically done by a specialized team external to the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Technical documentation is done by a specialized sub-team inside the Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. If it&#8217;s a Product Backlog item, the Scrum Developers will need to find the time to create the technical documentation themselves.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The creation of technical documentation is not a concern of a Scrum Team doing software development.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>Option D is correct.</simpara>
<simpara>"Developers are the people in the Scrum Team that are committed to creating any aspect of a usable Increment each Sprint."</simpara>
<simpara>A Scrum Team is responsible for the creation of an increment that meets the Definition of Done, and it is the developers who do the work.</simpara>
<simpara>If technical documentation is a Product Backlog item, or it is included in the Definition of Done, the developers on the Scrum Team are expected to have the skills and time to create it.</simpara>
<simpara>"Scrum Teams are cross-functional, meaning the members have all the skills necessary to create value each Sprint."</simpara>
<simpara>Furthermore, there are no 'special teams' in Scrum. The Scrum Guide clearly states: "Within a Scrum Team, there are no sub-teams or hierarchies."</simpara>
<simpara>In Scrum, the Scrum Developers are responsible for creating a potentially releasable product Increment every Sprint that meets the Definition of Done. If user documentation is part of the "Done" criteria, then the team of developers must find a way to produce it.</simpara>
<simpara>"The Scrum Team is responsible for all product-related activities from stakeholder collaboration, verification, maintenance, operation, experimentation, research and development, and anything else that might be required."</simpara>
</para>
</section>
<section xml:id="_answer_25">
<title>Answer 25</title>
<sidebar>
<para xml:id="query">
<simpara>There are three roles, or as the Scrum Guide puts it, 'accountabilities' in Scrum:</simpara>
<itemizedlist>
<listitem>
<simpara>The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>The Product Owner</simpara>
</listitem>
<listitem>
<simpara>The Developers</simpara>
</listitem>
</itemizedlist>
<simpara>What are key characteristics and responsibilities of the Product Owner?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Product Owner is the one who orders the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The Product Owner is a single person and the role cannot be shared.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner commits 100% of their time to their Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Multiple individuals with product knowledge can share the Product Owner role on a Scrum Team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and B.</simpara>
<para xml:id="explanation">
<simpara>The Product Owner is responsible for maximizing the value of the product resulting from the work of the Scrum Developers. The PO maintains the product backlog and ensures Product Backlog items are ordered.</simpara>
<simpara>The Product Owner is the champion of the project and the sole person responsible for managing the Product Backlog. They also ensure that the development team, stakeholders and others understand the product vision.</simpara>
<simpara>The Product Owner is the single point of accountability for the success of the product and is responsible for making decisions about the priority of work items. They ensure the work of the team delivers the most value to the stakeholders.</simpara>
<simpara>One of the reasons why only one person is allowed to do the Product Owner&#8217;s job in Scrum is to ensure clear accountability and ownership. Having multiple people responsible for ordering the Product Backlog can lead to confusion and conflict about priorities and goals. In Scrum, the Product Owner is empowered to make product-related decisions and communicate them to the team. Having a single point of accountability helps to ensure that the team is aligned and focused on the same goals.</simpara>
<simpara>Additionally, having a single Product Owner helps to maintain consistency and coherence in the product vision and strategy. The Product Owner is responsible for articulating the product vision and ensuring that everyone on the team is working towards the same Product Goal.</simpara>
<simpara>Having a single person responsible for the Product Owner accountability in Scrum helps to ensure clear accountability, consistency in the product vision and effective communication with the team.</simpara>
</para>
</section>
</section>
</chapter>
<chapter xml:id="_25_question_exam_2">
<title>25 Question Exam #2</title>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/exam-sitting.jpg"/>
</imageobject>
<textobject><phrase></phrase></textobject>
</mediaobject>
</informalfigure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_question_1_6">
<title>Question 1</title>
<simpara>According to the Scrum Guide, the Sprint Backlog is composed of three interdependent parts.</simpara>
<simpara>Which three of the following items together make up the Sprint Backlog?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. An actionable plan</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Product backlog items chosen for the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Sprint backlog items not completed on the previous Sprint</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_2_6">
<title>Question 2</title>
<simpara>According to the Scrum Guide, what is the purpose of the Sprint Backlog?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Backlog is designed to help user stories get estimated in either hours or story points.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint Backlog is a list of all work the team hopes to complete in the current Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint Backlog is a list of all work the team hopes to complete in the next Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Sprint Backlog is the Development Team&#8217;s actionable plan for the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Backlog is ordered and arranged by the Product Owner to maximize the developer productivity.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_3_6">
<title>Question 3</title>
<simpara>What should a Scrum Master do if the Development Team is missing the necessary skills, tools and infrastructure needed to complete the highest-priority backlog items?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Dissolve the Sprint and inform management that the Development Team is not ready to use the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Instruct the Product Owner to accept partially Done Increments for this Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Change the priority of the current Sprint to improving the Development Team&#8217;s skills and acquiring the necessary infrastructure instead of delivering an Increment.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Coach the Development Team on how to spend time during the Sprint learning and improving their skills and acquiring tools they will need to complete important Backlog Items.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Discuss adjusting the Definition of Done in the upcoming retrospective to address the tooling issue.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_4_6">
<title>Question 4</title>
<simpara>Who is responsible for removing barriers between stakeholders and Scrum Teams?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Project Manager</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Development Team</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_5_6">
<title>Question 5</title>
<simpara>How much effort must the Scrum developers put into completing Sprint Backlog items chosen for the Sprint?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The developers will work at a sustainable pace in order to complete as may Sprint Backlog items as possible in conformance with the Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The developers must put in all the effort required to successfully complete all Sprint Backlog items before the Sprint is complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The developers must commit to delivering core functionality but testing and quality assurance is not required.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The developers must put an equal amount of time into requirements gathering, design, implementation, documentation, and troubleshooting.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_6_6">
<title>Question 6</title>
<simpara>What is the best way for the Product Owner to ensure that the Scrum developers transparently deliver high-quality, releasable increments of work that meet the needs of the stakeholders?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the team lead personally perform all code merges into the master branch.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Have the software development team strictly adhere to the organization&#8217;s Definition of Done (DoD).</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Reprimand the team when product quality falls below an agreed upon quality gate.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the developers send all work through a QA team before release.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_7_6">
<title>Question 7</title>
<simpara>Which of the following is the most accurate description of Scrum as defined by the Scrum Guide?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A complete, incremental, and iterative software development process</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. An incomplete, incremental, and iterative software development process</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A purposefully incomplete, lightweight framework to help find solutions for complex problems</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. A purposefully complete, lightweight framework to help find solutions for complex problems</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_8_6">
<title>Question 8</title>
<simpara>A feedback loop is an opportunity for a team or group to discuss, inspect and most importantly, adapt.</simpara>
<simpara>Which of these Scrum events provide feedback loops?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Daily Standup</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Performance Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Daily Scrum</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_9_6">
<title>Question 9</title>
<simpara>The management and development of a key product feature is handled by an external team.</simpara>
<simpara>Who represents the progress of this external feature in the Daily Scrum?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Team Lead represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. External development and management issues outside of the control of the Scrum Developers are not presented at the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_10_6">
<title>Question 10</title>
<simpara>The Sprint Planning meeting is one of Scrum&#8217;s time-boxed events.</simpara>
<simpara>What is the time-box for the Sprint Planning meeting?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A minimum of 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. A maximum of 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A minimum of 8 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. A maximum of 8 hours</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_11_2">
<title>Question 11</title>
<simpara>Sprints are kept to 30 days or less because:
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Risk increases with longer Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Shorter Sprints are easier to budget.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Complexity is likely to rise with longer Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Monthly Sprints integrate easier with reporting and tracking tools like JIRA</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The likelihood that the Sprint Goal will become invalid increases with longer Sprints.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_12_2">
<title>Question 12</title>
<simpara>When should new work or additional information about work be added to the Sprint Backlog?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. New insight about the Sprint Plan should be added to the Sprint Backlog immediately.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. When the Product Owner agrees that the information should be added to the Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Sprint Backlog items can only be added during Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. During the Daily Scrum on approval from the team lead</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_13_2">
<title>Question 13</title>
<simpara>What effects would be observed on the original Scrum Team when two additional Scrum Teams are included in the development process for the same product?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The original Scrum team&#8217;s productivity is likely to decrease slightly.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The original Scrum team&#8217;s productivity is likely to stay the same.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The original Scrum team&#8217;s productivity is likely to increase slightly.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The original Scrum team&#8217;s productivity is likely to increase significantly.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_14_2">
<title>Question 14</title>
<simpara>Which of the following statements is true about project and Sprint cancellations?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Only the Scrum Master can cancel a Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Only the Product Owner can cancel a Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Only the Scrum Master can cancel the project</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Only the Product Owner can cancel the project</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_15_2">
<title>Question 15</title>
<simpara>Who is best equipped to estimate the amount of time required to complete a Product Backlog Item(PBI)?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner, after adding the PBI to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master, after reading the description of the PBI.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Project Manager, after assigning the PBI to the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The individual developer tasked with working on the PBI.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The team of Scrum Developers, after discussions with the Product Owner about the PBI.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_16_2">
<title>Question 16</title>
<simpara>Three Scrum Teams are working on the same product. Each team produces an increment of work by the end of their Sprint. When should the increment from a given team be integrated into the project?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Teams should be doing continuous integration, and increments must be integrated with the work of other teams before the Sprint review.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Teams should be doing continuous integration, and increments must be integrated with the work of other teams after the Sprint review.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Three Scrum teams working on the same project should be independent of each other and not integrate their code.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The three teams should only integrate their code</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_17_2">
<title>Question 17</title>
<simpara>What should the Scrum Team do with a Product Backlog item that was added to the Sprint Backlog if it does not meet the Definition of Done at the end of a Sprint?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner can release it with the permission of the stakeholders.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Return it to the Product Backlog and let the Product Owner reorder it.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Award partial points for the work done so velocity is recorded and return what remains to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Do not present the progress made on the incomplete item to the Stakeholders or customers</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_18_2">
<title>Question 18</title>
<simpara>The Scrum Master sees the Product Owner (PO) struggle with the task of ordering the Product Backlog.</simpara>
<simpara>What action would a certified Scrum Master take in these circumstances?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Product Owner extend the length of the current Sprint to have more time to order the Product Backlog before the next Sprint begins.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Inform the Product owner that it is the development team&#8217;s responsibility to order the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Coach the Product Owner on the importance of ordering the Product Backlog and how the PO is responsible for an order that will deliver the greatest value.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Master should provide the Product Owner with the Product Backlog that was ordered by the Scrum Development Team with the Scrum Master&#8217;s oversight and guidance.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Tell the Product Owner to work with the developers to prioritize Backlog Items based on which items will be the easiest and fastest to implement.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_19_2">
<title>Question 19</title>
<simpara>According to the Scrum Guide, which of the following is true about the Increment?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Each new Increment gets added to all the prior Increments</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. An Increment doesn&#8217;t have to be usable.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Only one Increment can be created per Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. An Increment must be compatible with and work with all previous Increments.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. An Increment can be seen as a concrete stepping stone toward the Product Goal.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_20_2">
<title>Question 20</title>
<simpara>The DevOps team is putting software into production that fails in terms of performance and security. The development team says they only deal with functional requirements, not non-functional requirements like security and performance.</simpara>
<simpara>What&#8217;s the best way for the Scrum Master to deal with this?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Share stories from the help desk about the issues the software is having.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Make sure non-functional requirements are clearly articulated in the Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Run continuous integration tests throughout the Sprint and have developers address performance and security issues that arise before deployment.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Ask the Product Owner to add new Product Backlog items that deal specifically with performance and security.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. As the Scrum Master, you should push back on the DevOps team and explain that non-functional requrements are not part of the development team&#8217;s planning tasks.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_21_2">
<title>Question 21</title>
<simpara>You have just acquired a new company, and two of their Scrum teams will be added to your project to help build the company&#8217;s flagship product. How should the teams be organized?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Scrum Master create three new teams with an equal combination of experience, seniority, and technical skill.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Keep the teams in their initial state and allow them to self-organize when the project is complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Introduce the teams to each other and have them self-organize into teams of equal size.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Keep the initial structure and layout of the teams, and allow them to self-organize over time.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_22_2">
<title>Question 22</title>
<simpara>The Scrum Guide demands that management allows teams to be self-managed and self-organzied.</simpara>
<simpara>What advantages does self-organization offer to Scrum Teams and the team&#8217;s members?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Increased personal accountability with regards to the work developers perform.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Increased accuracy in estimating Product Backlog Item completion dates.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Increased personal commitment to the team and the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Increased ingenuity and motivation to solve problems.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Increased ability to comply with industry regulation, rules and guidelines.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_23_2">
<title>Question 23</title>
<simpara>Sometimes a team has too many developers. Other times a developer just might not be the right fit for a development team.</simpara>
<simpara>Who has the power to remove an underperforming developer from a Scrum team?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Only someone in management or Human Resources can remove an underperforming developer from a Scrum team. This is not a Scrum responsibility.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master can remove underperforming developers from a Scrum team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The responsibility to remove a developer from the Scrum Team lies outside of the scope of the Scrum Guide.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The team of Scrum Developers has the final say over who is allowed to be a member of the development team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_24_2">
<title>Question 24</title>
<simpara>In Scrum, testers, QA personnel, and business analysts on a Scrum Team are considered developers.
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_25_2">
<title>Question 25</title>
<simpara>Who holds developers accountable for creating a plan, instilling quality, and adhering to the Definition of Done?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner holds the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master holds the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Stakeholders hold the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Developers hold each other accountable as professional</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_answers_3">
<title>Answers</title>
<section xml:id="_answer_1_2">
<title>Answer 1</title>
<sidebar>
<para xml:id="query">
<simpara>According to the Scrum Guide, the Sprint Backlog is composed of three interdependent parts.</simpara>
<simpara>Which three of the following items together make up the Sprint Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Goal</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. An actionable plan</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Product backlog items chosen for the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Sprint backlog items not completed on the previous Sprint</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and D.</simpara>
<para xml:id="explanation">
<simpara>The answer to this question is pulled right out of the Scrum Guide:</simpara>
<simpara>"The Sprint Backlog is composed of the Sprint Goal (why), the set of Product Backlog items selected for the Sprint (what), as well as an actionable plan for delivering the Increment (how)."</simpara>
<simpara>With regards to the option about 'backlog items not completed on the previous Sprint,' items not completed on a previous Sprint are removed from the Spring backlog and are returned to the Product Backlog.</simpara>
<simpara>They are not automatically added to the next Sprint. You will get tested on that point.</simpara>
</para>
</section>
<section xml:id="_answer_2_2">
<title>Answer 2</title>
<sidebar>
<para xml:id="query">
<simpara>According to the Scrum Guide, what is the purpose of the Sprint Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Backlog is designed to help user stories get estimated in either hours or story points.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The Sprint Backlog is a list of all work the team hopes to complete in the current Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint Backlog is a list of all work the team hopes to complete in the next Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Sprint Backlog is the Development Team&#8217;s actionable plan for the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Backlog is ordered and arranged by the Product Owner to maximize the developer productivity.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B and D.</simpara>
<para xml:id="explanation">
<simpara>According to the Scrum Guide, "The Sprint Backlog is composed of the Sprint Goal (why), the set of Product Backlog items selected for the Sprint (what), as well as an actionable plan for delivering the Increment (how)."</simpara>
<simpara>During Sprint Planning, the development team plans the work that will be done during the current sprint.</simpara>
<simpara>Note that all events happen <emphasis>within</emphasis> the Sprint. So Sprint Planning happens for the current Sprint, not the 'next' Sprint. Sprint Planning, development, the Sprint Review and the Sprint Retrospective all happen with the boundaries of the same Sprint.</simpara>
<simpara>One of the primary outcomes of Sprint Planning is the creation of the Sprint Backlog, which is a list of tasks that the team plans to complete during the sprint.</simpara>
<simpara>The Sprint Backlog is created during Sprint Planning to ensure that the development team has a clear understanding of what needs to be done during the sprint. It is a living document that is updated throughout the sprint as progress is made and new information is discovered.</simpara>
<simpara>The three elements of the Sprint Backlog are:</simpara>
<simpara>The Sprint Goal (Why): The Sprint Goal is a high-level objective that the development team hopes to achieve during the sprint. It provides guidance and direction for the team as they work on the Sprint Backlog.</simpara>
<simpara>The Product Backlog Items (What): The Product Backlog Items (PBIs) are the individual user stories, features, or other work items that have been selected for the sprint. They are taken from the Product Backlog and broken down into specific tasks that can be completed during the sprint.</simpara>
<simpara>An actionable plan to deliver the Sprint (How)</simpara>
<simpara>Remember why, what and how!</simpara>
</para>
</section>
<section xml:id="_answer_3_2">
<title>Answer 3</title>
<sidebar>
<para xml:id="query">
<simpara>What should a Scrum Master do if the Development Team is missing the necessary skills, tools and infrastructure needed to complete the highest-priority backlog items?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Dissolve the Sprint and inform management that the Development Team is not ready to use the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Instruct the Product Owner to accept partially Done Increments for this Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Change the priority of the current Sprint to improving the Development Team&#8217;s skills and acquiring the necessary infrastructure instead of delivering an Increment.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Coach the Development Team on how to spend time during the Sprint learning and improving their skills and acquiring tools they will need to complete important Backlog Items.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Discuss adjusting the Definition of Done in the upcoming retrospective to address the tooling issue.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are D and E.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Developers are expected to have all of the skills required to complete all the Product Backlog items. If those skills do not exist, the developers must acquire them as they work on other Product Backlog items.</simpara>
<simpara>It is also possible to adjust the Definition of Done to make the delivery of an Increment possible. For example, if the Definition of Done says every product must be tested by flying it to Mars and back, but you don&#8217;t have a spaceship that can fly to Mars, it wouldn&#8217;t be unreasonable to remove that requirement from the Definition of Done.</simpara>
<simpara>Every Sprint must provide a real, tangible increment of work. There are no 'infrastructure Sprints' in Scrum or 'Sprint Zeros.' Every Sprint must have the delivery of an increment of work as its goal.</simpara>
</para>
</section>
<section xml:id="_answer_4_2">
<title>Answer 4</title>
<sidebar>
<para xml:id="query">
<simpara>Who is responsible for removing barriers between stakeholders and Scrum Teams?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The Scrum Master</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Project Manager</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Development Team</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>This question is pulled directly out of the Scrum Guide:</simpara>
<simpara>The Scrum Master serves the organization in several ways, including:</simpara>
<itemizedlist>
<listitem>
<simpara>Removing barriers between stakeholders and Scrum Teams.</simpara>
</listitem>
<listitem>
<simpara>Leading, training, and coaching the organization in its Scrum adoption;</simpara>
</listitem>
<listitem>
<simpara>Planning and advising Scrum implementations within the organization;</simpara>
</listitem>
<listitem>
<simpara>Helping employees and stakeholders understand and enact an empirical approach for complex work; and,</simpara>
</listitem>
</itemizedlist>
</para>
</section>
<section xml:id="_answer_5_2">
<title>Answer 5</title>
<sidebar>
<para xml:id="query">
<simpara>How much effort must the Scrum developers put into completing Sprint Backlog items chosen for the Sprint?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The developers will work at a sustainable pace in order to complete as may Sprint Backlog items as possible in conformance with the Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The developers must put in all the effort required to successfully complete all Sprint Backlog items before the Sprint is complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The developers must commit to delivering core functionality but testing and quality assurance is not required.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The developers must put an equal amount of time into requirements gathering, design, implementation, documentation, and troubleshooting.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>When it comes to how much effort the team puts into a Product Backlog item, the two key concepts are working at a sustainable pace, and meeting the Definition of Done.</simpara>
<simpara>"Working in Sprints at a sustainable pace improves the Scrum Teamâ€™s focus and consistency."
-The Scrum Guide.</simpara>
<simpara>When a Development Team selects a Product Backlog item for a Sprint, they need to determine how much work they can commit to completing during that Sprint. The amount of work the team commits to is based on their capacity and their understanding of the requirements of the selected item. The team considers various factors such as their velocity, capacity and any dependencies or risks associated with the item. They then commit to completing the work that they believe is achievable in the upcoming Sprint.</simpara>
<simpara>The concept of the "Definition of Done" is also closely related to the amount of work the developers commit to during a Sprint. The "Definition of Done" is a shared understanding among the team of the criteria that must be met for a Product Backlog item to be considered complete. The Definition of Done typically includes criteria related to functionality, quality and usability, among other things.</simpara>
</para>
</section>
<section xml:id="_answer_6_2">
<title>Answer 6</title>
<sidebar>
<para xml:id="query">
<simpara>What is the best way for the Product Owner to ensure that the Scrum developers transparently deliver high-quality, releasable increments of work that meet the needs of the stakeholders?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the team lead personally perform all code merges into the master branch.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Have the software development team strictly adhere to the organization&#8217;s Definition of Done (DoD).</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Reprimand the team when product quality falls below an agreed upon quality gate.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the developers send all work through a QA team before release.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>The Product Owner needs everyone to adhere to the Definition of Done because it helps ensure that the team delivers high-quality Increments of work that meet the needs of the stakeholders.</simpara>
<simpara>The Definition of Done is a shared understanding between the Product Owner, stakeholders and the developers about what it means for a Product Backlog item to be considered complete. It includes a set of criteria that must be met for each item, such as passing tests, meeting performance standards and conforming to coding standards.</simpara>
<simpara>By adhering to the Definition of Done, the development team ensures that they are producing work that is of high quality and meets the expectations of the Product Owner. This, in turn, helps the Product Owner manage stakeholder expectations, as they can rely on the Scrum Developers to consistently deliver work that meets the agreed-upon criteria.</simpara>
<simpara>Moreover, adhering to the Definition of Done promotes transparency and accountability. The developers commit to delivering work that meets the agreed-upon criteria, which helps to ensure that they take ownership of the quality of their work. The Product Owner can also track progress more accurately as they can trust that items that meet the Definition of Done are truly complete.</simpara>
</para>
</section>
<section xml:id="_answer_7_2">
<title>Answer 7</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following is the most accurate description of Scrum as defined by the Scrum Guide?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A complete, incremental, and iterative software development process</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. An incomplete, incremental, and iterative software development process</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. A purposefully incomplete, lightweight framework to help find solutions for complex problems</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. A purposefully complete, lightweight framework to help find solutions for complex problems</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>Scrum is not just for the domain of software development, so any definitions that try to pin Scrum to the software development world are incorrect.</simpara>
<simpara>Scrum self-describes as being a purposefully incomplete, lightweight framework designed to help find solutions for complex problems.</simpara>
<simpara>From the Scrum Guide: "Scrum is a lightweight framework that helps people, teams, and organizations generate value through adaptive solutions for complex problems. The Scrum framework is purposefully incomplete, only defining the parts required to implement Scrum theory."</simpara>
</para>
</section>
<section xml:id="_answer_8_2">
<title>Answer 8</title>
<sidebar>
<para xml:id="query">
<simpara>A feedback loop is an opportunity for a team or group to discuss, inspect and most importantly, adapt.</simpara>
<simpara>Which of these Scrum events provide feedback loops?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Sprint Retrospective</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Daily Standup</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Sprint Review</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Performance Review</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. The Daily Scrum</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and E.</simpara>
<para xml:id="explanation">
<simpara>In Scrum, the Sprint Review, Sprint Retrospective, and Daily Scrum are considered feedback loops because they provide opportunities for the Scrum Team to inspect and adapt their work.</simpara>
<simpara>The Daily Scrum, which is held every day during the Sprint, is a short meeting where the Development Team plans its work for the next 24 hours. During this meeting, the team members share what they have accomplished since the last meeting, what they plan to accomplish today, and any obstacles that may prevent them from achieving their goals. This daily feedback loop allows the team to adjust its plan for the Sprint based on the progress made and the obstacles encountered.</simpara>
<simpara>The Sprint Review is the 2nd last event of the Sprint, and it is an opportunity for the Scrum Team to review and discuss the work that was completed during the Sprint. The Product Owner presents the completed Product Backlog items, and stakeholders provide feedback on the work that was done. The team uses this feedback to adjust for the next Sprint.</simpara>
<simpara>The Sprint Retrospective is held at the end of the Sprint, and it is an opportunity for the Scrum Team to reflect on its performance during the Sprint. During this meeting, the team discusses what went well, what did not go well, and how they can improve their process for the next Sprint. The team uses this feedback to make adjustments to its process to improve its performance in future Sprints.</simpara>
</para>
</section>
<section xml:id="_answer_9_2">
<title>Answer 9</title>
<sidebar>
<para xml:id="query">
<simpara>The management and development of a key product feature is handled by an external team.</simpara>
<simpara>Who represents the progress of this external feature in the Daily Scrum?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Team Lead represents external management and development interests.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. External development and management issues outside of the control of the Scrum Developers are not presented at the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>Work produced by external teams is not a topic Scrum Developers should focus on during the Daily Scrum. The Scrum Developers should only be focused on their own product-related activities, the Sprint Goal and how they can adapt their current plan to meet the Sprint Goal.</simpara>
<simpara>Something created and developed outside the Scrum Team should not be part of their backlog as they have no control over it.</simpara>
<simpara>The Scrum Team is not subject to external management but is instead empowered to self-manage.</simpara>
<simpara>From the Scrum Guide: "The Scrum Team is responsible for all product-related activities from stakeholder collaboration, verification, maintenance, operation, experimentation, research and development, and anything else that might be required. They are structured and empowered by the organization to manage their own work."</simpara>
</para>
</section>
<section xml:id="_answer_10_2">
<title>Answer 10</title>
<sidebar>
<para xml:id="query">
<simpara>The Sprint Planning meeting is one of Scrum&#8217;s time-boxed events.</simpara>
<simpara>What is the time-box for the Sprint Planning meeting?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A minimum of 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. A maximum of 4 hours</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A minimum of 8 hours</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. A maximum of 8 hours</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>According to the Scrum Guide, "Sprint Planning is time-boxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter."</simpara>
</para>
</section>
<section xml:id="_answer_11_2">
<title>Answer 11</title>
<sidebar>
<para xml:id="query">
<simpara>Sprints are kept to 30 days or less because:</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Risk increases with longer Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Shorter Sprints are easier to budget.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Complexity is likely to rise with longer Sprints.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Monthly Sprints integrate easier with reporting and tracking tools like JIRA</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. The likelihood that the Sprint Goal will become invalid increases with longer Sprints.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and E.</simpara>
<para xml:id="explanation">
<simpara>Sprints in Scrum are kept to 30 days or less for several reasons related to risk, complexity, and the validity of the sprint goal:</simpara>
<simpara>Risk: The longer a sprint runs, the more risk there is that the team will encounter unforeseen issues that may derail the sprint. By keeping sprints short, the team can identify and mitigate risks more quickly, reducing the likelihood of a major issue causing a significant delay or complete failure of the sprint.</simpara>
<simpara>Complexity: As the complexity of a sprint increases, it becomes more difficult to accurately estimate the amount of work that can be completed within a given timeframe. By keeping sprints short, the team can more accurately estimate the amount of work they can complete, reducing the risk of overcommitting and failing to deliver on the sprint goal.</simpara>
<simpara>Validity of Sprint Goal: The sprint goal is a critical element of any sprint, and it serves as the guiding focus for the team&#8217;s work during the sprint. If the sprint runs for too long, the sprint goal may become less relevant or may even become invalid as the team learns new information or requirements change. By keeping sprints short, the team can more effectively focus on achieving the sprint goal before it becomes outdated.</simpara>
</para>
</section>
<section xml:id="_answer_12_2">
<title>Answer 12</title>
<sidebar>
<para xml:id="query">
<simpara>When should new work or additional information about work be added to the Sprint Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. New insight about the Sprint Plan should be added to the Sprint Backlog immediately.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. When the Product Owner agrees that the information should be added to the Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Sprint Backlog items can only be added during Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. During the Daily Scrum on approval from the team lead</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>Any time new information that impacts the Sprint Plan is discovered, it should be added to the Sprint Backlog immediately.</simpara>
</para>
</section>
<section xml:id="_answer_13_2">
<title>Answer 13</title>
<sidebar>
<para xml:id="query">
<simpara>What effects would be observed on the original Scrum Team when two additional Scrum Teams are included in the development process for the same product?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The original Scrum team&#8217;s productivity is likely to decrease slightly.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The original Scrum team&#8217;s productivity is likely to stay the same.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The original Scrum team&#8217;s productivity is likely to increase slightly.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The original Scrum team&#8217;s productivity is likely to increase significantly.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>The original Scrum Team might experience a period of reduced productivity as the teams become accustomed to working together, but over the medium term, the collective productivity of all the teams should increase.</simpara>
<simpara>There are several potential reasons why the productivity of a Scrum team might decrease when new members are added:</simpara>
<simpara>Forming and Storming: When new members are added to a Scrum team, the team must go through the "forming" and "storming" stages of group development, where they get to know each other and figure out how to work together effectively. This process can take time and can be disruptive to the team&#8217;s productivity.</simpara>
<simpara>Communication: Effective communication is essential for a successful Scrum team. When new members are added, the team&#8217;s communication channels can become disrupted, leading to misunderstandings, delays, and other issues that can impact productivity.</simpara>
<simpara>Skill levels: New team members may not have the same level of skill and experience as existing team members, which can lead to imbalances in workload and delays as new members get up to speed. In some cases, existing team members may need to spend time coaching and training new members, taking away from their productivity.</simpara>
<simpara>Disruption to processes: Introducing new team members can also disrupt established processes and ways of working, which can lead to confusion and delays.</simpara>
<simpara>Team dynamics: Finally, adding new members can disrupt team dynamics and the relationships between team members, leading to potential conflicts and interpersonal issues that can negatively impact productivity.</simpara>
</para>
</section>
<section xml:id="_answer_14_2">
<title>Answer 14</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following statements is true about project and Sprint cancellations?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Only the Scrum Master can cancel a Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Only the Product Owner can cancel a Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Only the Scrum Master can cancel the project</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Only the Product Owner can cancel the project</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>Only the Product Owner can cancel a Sprint.</simpara>
<simpara>Neither the Scrum Master nor Product Owner has the authority to cancel a project.</simpara>
<simpara>"A Sprint could be canceled if the Sprint Goal becomes obsolete. Only the Product Owner has the authority to cancel the Sprint."</simpara>
</para>
</section>
<section xml:id="_answer_15_2">
<title>Answer 15</title>
<sidebar>
<para xml:id="query">
<simpara>Who is best equipped to estimate the amount of time required to complete a Product Backlog Item(PBI)?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner, after adding the PBI to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master, after reading the description of the PBI.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Project Manager, after assigning the PBI to the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The individual developer tasked with working on the PBI.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. The team of Scrum Developers, after discussions with the Product Owner about the PBI.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>Only the developers and people who do the work can estimate the time required to complete a PBI.</simpara>
<simpara>According to the Scrum Guide, "Through discussion with the Product Owner, the Developers select items from the Product Backlog to include in the current Sprint."</simpara>
</para>
</section>
<section xml:id="_answer_16_2">
<title>Answer 16</title>
<sidebar>
<para xml:id="query">
<simpara>Three Scrum Teams are working on the same product. Each team produces an increment of work by the end of their Sprint. When should the increment from a given team be integrated into the project?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Teams should be doing continuous integration, and increments must be integrated with the work of other teams before the Sprint review.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Teams should be doing continuous integration, and increments must be integrated with the work of other teams after the Sprint review.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Three Scrum teams working on the same project should be independent of each other and not integrate their code.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The three teams should only integrate their code</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>The increments from multiple Scrum Teams working on the same product should be integrated continuously. If they are not integrated continuously, at the very least, they need to be integrated before the Sprint Review.</simpara>
<simpara>If code changes are not integrated, how does anyone know that the changes and updates they made even work?</simpara>
<simpara>Multiple Scrum teams working on the same project should continuously integrate their increments of work for several reasons:</simpara>
<itemizedlist>
<listitem>
<simpara>Early detection of integration issues</simpara>
</listitem>
<listitem>
<simpara>Improved transparency</simpara>
</listitem>
<listitem>
<simpara>Teams will collboarate and communicate more often</simpara>
</listitem>
</itemizedlist>
<simpara>If something works and meets the definition of done, it should be integrated right away. Waiting makes no sense. Waiting is certainly not in like with Scrum&#8217;s commitment to lean thinking.</simpara>
</para>
</section>
<section xml:id="_answer_17_2">
<title>Answer 17</title>
<sidebar>
<para xml:id="query">
<simpara>What should the Scrum Team do with a Product Backlog item that was added to the Sprint Backlog if it does not meet the Definition of Done at the end of a Sprint?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner can release it with the permission of the stakeholders.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Return it to the Product Backlog and let the Product Owner reorder it.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Award partial points for the work done so velocity is recorded and return what remains to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Do not present the progress made on the incomplete item to the Stakeholders or customers</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B, , and D.</simpara>
<para xml:id="explanation">
<simpara>If a Product Backlog item doesn&#8217;t meet the Definition of Done by the end of the Sprint, which means it&#8217;s not complete, it goes back into the Product Backlog.</simpara>
<simpara>The Scrum Team will then decide if work on the backlog item should continue during the next Sprint, and if so, re-estimate the work needed to complete the undone PBI.</simpara>
<simpara>Avoid any answer on the Scrum certification exam that talks about 'points.' There is no mention of 'points' in the Scrum guide.</simpara>
</para>
</section>
<section xml:id="_answer_18_2">
<title>Answer 18</title>
<sidebar>
<para xml:id="query">
<simpara>The Scrum Master sees the Product Owner (PO) struggle with the task of ordering the Product Backlog.</simpara>
<simpara>What action would a certified Scrum Master take in these circumstances?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Product Owner extend the length of the current Sprint to have more time to order the Product Backlog before the next Sprint begins.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Inform the Product owner that it is the development team&#8217;s responsibility to order the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Coach the Product Owner on the importance of ordering the Product Backlog and how the PO is responsible for an order that will deliver the greatest value.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Master should provide the Product Owner with the Product Backlog that was ordered by the Scrum Development Team with the Scrum Master&#8217;s oversight and guidance.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Tell the Product Owner to work with the developers to prioritize Backlog Items based on which items will be the easiest and fastest to implement.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Master is a coach and facilitator, and it is the Scrum Master&#8217;s job to coach and motivate members of the Scrum Team when they need guidance or direction as it pertains to implementing the directives, roles, and accountabilities as described within the Scrum Guide.</simpara>
<simpara>The Scrum Master has the responsibility to support and help the team, including the Product Owner, to maximize the value delivered by the product. If the Scrum Master sees the Product Owner struggling with the task of ordering the Product Backlog, there are several actions they can take to assist:</simpara>
<itemizedlist>
<listitem>
<simpara>Coach the Product Owner: The Scrum Master can provide coaching to the Product Owner on effective Product Backlog management practices, such as prioritization techniques, user story writing, and backlog refinement sessions. They can also guide how to involve stakeholders in the prioritization process and how to manage dependencies between Product Backlog items.</simpara>
</listitem>
<listitem>
<simpara>Encourage Feedback: The Scrum Master can encourage the Product Owner to seek feedback from stakeholders and the development team on the order of the Product Backlog items. This feedback can help the Product Owner refine the prioritization and ensure that the team is aligned with the product vision.</simpara>
</listitem>
</itemizedlist>
<simpara>Just remember, it&#8217;s not the Scrum Master&#8217;s job to do the work of the Product Owner. The order of the product backlog, which is critically important to ensure maximum value gets delivered during development, is the responsibility of the PO.</simpara>
<simpara>The Scrum Master&#8217;s role is to support the team and help them to achieve their goals. By providing coaching, facilitating collaborative sessions, and providing insights and feedback, the Scrum Master can help the Product Owner to effectively prioritize and manage the Product Backlog.</simpara>
</para>
</section>
<section xml:id="_answer_19_2">
<title>Answer 19</title>
<sidebar>
<para xml:id="query">
<simpara>According to the Scrum Guide, which of the following is true about the Increment?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Each new Increment gets added to all the prior Increments</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. An Increment doesn&#8217;t have to be usable.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Only one Increment can be created per Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. An Increment must be compatible with and work with all previous Increments.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. An Increment can be seen as a concrete stepping stone toward the Product Goal.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, ,, D, , and E.</simpara>
<para xml:id="explanation">
<simpara>An Increment must be usable and multiple Increments can be created per Sprint, which makes those two options wrong.</simpara>
<simpara>The correct options come directly out of the Scrum Guide&#8217;s definition of a Sprint:</simpara>
<simpara>"An Increment is a concrete stepping stone toward the Product Goal. Each Increment is additive to all prior Increments and thoroughly verified, ensuring that all Increments work together. To provide value, the Increment must be usable."</simpara>
</para>
</section>
<section xml:id="_answer_20_2">
<title>Answer 20</title>
<sidebar>
<para xml:id="query">
<simpara>The DevOps team is putting software into production that fails in terms of performance and security. The development team says they only deal with functional requirements, not non-functional requirements like security and performance.</simpara>
<simpara>What&#8217;s the best way for the Scrum Master to deal with this?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Share stories from the help desk about the issues the software is having.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Make sure non-functional requirements are clearly articulated in the Definition of Done.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Run continuous integration tests throughout the Sprint and have developers address performance and security issues that arise before deployment.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Ask the Product Owner to add new Product Backlog items that deal specifically with performance and security.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. As the Scrum Master, you should push back on the DevOps team and explain that non-functional requrements are not part of the development team&#8217;s planning tasks.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B and D.</simpara>
<para xml:id="explanation">
<simpara>Developers must address both functional and non-functional requirements if they are an expected part of the product they are building.</simpara>
<simpara>To make sure an increment is not released without non-functional requirements being addressed, just add the non-functional requirements to the Definition of Done. That way an increment is not considered complete unless all functional and non-functional requirements have been dealt with.</simpara>
<simpara>Furthermore, having the Product Owner add non-functional requirements as backlog items gives them visibility and makes the Product Owner aware of them.</simpara>
<simpara>Functional and non-functional requirements are both important aspects of software development that help define what a software system should do and how it should perform. However, there are significant differences between the two types of requirements.</simpara>
<simpara>Functional requirements describe what a system should do in terms of specific features, functions, or behaviors. They are typically expressed as specific tasks, actions, or operations that the system should be able to perform. Examples of functional requirements include user authentication, data input and retrieval, reporting, and error handling. Functional requirements are often the most visible and tangible aspects of a software system and are usually easier to define and test than non-functional requirements.</simpara>
<simpara>Non-functional requirements, on the other hand, describe how a system should perform in terms of factors such as reliability, scalability, security, usability, and performance. Non-functional requirements are often more subjective and harder to quantify than functional requirements. They are usually expressed as constraints or quality attributes that the system should exhibit. Examples of non-functional requirements include response time, availability, user experience, and maintainability. Non-functional requirements are important because they help ensure that a system is usable, efficient, and effective, and can be sustained over time.</simpara>
</para>
</section>
<section xml:id="_answer_21_2">
<title>Answer 21</title>
<sidebar>
<para xml:id="query">
<simpara>You have just acquired a new company, and two of their Scrum teams will be added to your project to help build the company&#8217;s flagship product. How should the teams be organized?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the Scrum Master create three new teams with an equal combination of experience, seniority, and technical skill.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Keep the teams in their initial state and allow them to self-organize when the project is complete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Introduce the teams to each other and have them self-organize into teams of equal size.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Keep the initial structure and layout of the teams, and allow them to self-organize over time.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>Breaking up teams and reassembling them can be disruptive, as it may require additional time for the new teams to get up to speed and establish a working relationship. This disruption can result in delays in project delivery, increased project costs, and decreased quality of work.</simpara>
<simpara>There&#8217;s no need to break the teams up right away. Let them get to know each other and allow them to self-organize over time.</simpara>
</para>
</section>
<section xml:id="_answer_22_2">
<title>Answer 22</title>
<sidebar>
<para xml:id="query">
<simpara>The Scrum Guide demands that management allows teams to be self-managed and self-organzied.</simpara>
<simpara>What advantages does self-organization offer to Scrum Teams and the team&#8217;s members?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Increased personal accountability with regards to the work developers perform.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Increased accuracy in estimating Product Backlog Item completion dates.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Increased personal commitment to the team and the project.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Increased ingenuity and motivation to solve problems.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Increased ability to comply with industry regulation, rules and guidelines.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and D.</simpara>
<para xml:id="explanation">
<simpara>Self-organization can empower teams by providing them with greater flexibility and autonomy, which can lead to increased motivation, creativity and ownership of projects.</simpara>
<simpara>Additionally, self-organized teams can better recognize and utilize everyone&#8217;s strengths, while also facilitating deeper collaboration, shared responsibility and more effective problem-solving.</simpara>
<simpara>Lastly, self-organization can result in faster decision-making as teams have the authority to act in their own best interests.</simpara>
</para>
</section>
<section xml:id="_answer_23_2">
<title>Answer 23</title>
<sidebar>
<para xml:id="query">
<simpara>Sometimes a team has too many developers. Other times a developer just might not be the right fit for a development team.</simpara>
<simpara>Who has the power to remove an underperforming developer from a Scrum team?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Only someone in management or Human Resources can remove an underperforming developer from a Scrum team. This is not a Scrum responsibility.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master can remove underperforming developers from a Scrum team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The responsibility to remove a developer from the Scrum Team lies outside of the scope of the Scrum Guide.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The team of Scrum Developers has the final say over who is allowed to be a member of the development team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>Development teams in Scrum are self-managed and self-organized.</simpara>
<simpara>If the team decides a member is impeding progress, they have the final say over whether the team member be allowed to stay on the team or not.</simpara>
<simpara>Note, this doesn&#8217;t mean the person is fired. It just means this team was not the correct fit. The person may end up being a great performer somewhere else in the organization.</simpara>
</para>
</section>
<section xml:id="_answer_24_2">
<title>Answer 24</title>
<sidebar>
<para xml:id="query">
<simpara>In Scrum, testers, QA personnel, and business analysts on a Scrum Team are considered developers.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>Everyone on a Scrum Team that contributes to building Product Backlog items and helping them to meet the Definition of Done is considered a developer.</simpara>
</para>
</section>
<section xml:id="_answer_25_2">
<title>Answer 25</title>
<sidebar>
<para xml:id="query">
<simpara>Who holds developers accountable for creating a plan, instilling quality, and adhering to the Definition of Done?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner holds the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master holds the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Stakeholders hold the developers accountable</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Developers hold each other accountable as professional</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>This question comes right out of the Scrum Guide:</simpara>
<simpara>"The specific skills needed by the Developers are often broad and will vary with the domain of work. However, the Developers are always accountable for:</simpara>
<itemizedlist>
<listitem>
<simpara>Creating a plan for the Sprint, the Sprint Backlog;</simpara>
</listitem>
<listitem>
<simpara>Instilling quality by adhering to a Definition of Done;</simpara>
</listitem>
<listitem>
<simpara>Adapting their plan each day toward the Sprint Goal; and,</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Holding each other accountable as professionals.</emphasis> "</simpara>
</listitem>
</itemizedlist>
</para>
</section>
</section>
</chapter>
<chapter xml:id="_final_exam_40_questions">
<title>Final Exam: 40 Questions</title>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/exam-sitting.jpg"/>
</imageobject>
<textobject><phrase></phrase></textobject>
</mediaobject>
</informalfigure>
<simpara><?asciidoc-pagebreak?></simpara>
<section xml:id="_question_1_7">
<title>Question 1</title>
<simpara>Half way through the Sprint the development team has become uncomfortable with the Sprint Goal and feels a change needs to be made to bring it in line with the Sprint Plan.</simpara>
<simpara>According to the Scrum Guide, when can the Sprint Goal be changed or adjusted?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Goal can be changed or adjusted any time the Product Goal is changed or adjusted.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint Goal can be changed or adjusted any time during the Daily Scrum.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A Sprint Goal can be changed or adjusted any time during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Sprint Goal must be finalized before the end of Sprint Planning and it cannot be changed throughout the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Goal must be finalized before the development Sprint starts and it cannot be changed throughout the Sprint.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_2_7">
<title>Question 2</title>
<simpara>As the Scrum Master, it is clear to you that the Sprint Goal is not going to be reached if the Sprint Backlog isn&#8217;t adjusted and new items aren&#8217;t added.</simpara>
<simpara>In Scrum, who has the right to add items to the Sprint Backlog?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner prioritizes Product Backlog items and has the authority to add items to the Sprint Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The development team owns the Sprint Backlog and can add items to it at any time during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Both the Scrum Master and the developers can add to the Sprint Backlog if  changes need to be made to keep the Sprint Goal in focus.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Anyone on the Scrum Team can add or remove items from the Sprint Backlog.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_3_7">
<title>Question 3</title>
<simpara>How might a Scrum Master help the Scrum Team resolve an internal disagreement that has caused inter-personal conflicts between team members.
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Use various coaching and facilitation techniques such as open feedback and active listening.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Involve everyone on the team of Scrum Developers in forming a resolution that is in line with the Scrum values.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Ask an external consultant on the production team to determine the most sensible path forward.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Incorporate the Human Resources department to help resolve any inter-personal conflicts that have arisen.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Coach the team on maintaining a psychologically safe environment for all participants.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_4_7">
<title>Question 4</title>
<simpara>Accodring to the Scrum Guide, which of the following are duties of a Scrum Master?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Participating as an equal member of the Scrum team while also acting as a leader who serves.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Assigning action items for team members to complete during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Communicating the development team&#8217;s answers to stakeholder questions through transcription, email or direct communication.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Taking dictation during the Daily Scrum and reporting discussions that take place during the Daily Scrum back to management.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Scheduling meetings and booking conference rooms for the team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_5_7">
<title>Question 5</title>
<simpara>The development team bit off more than it could chew during Sprint Planning.</simpara>
<simpara>They&#8217;ve just told you, the Scrum Master, that there&#8217;s no way they are even going to come close to completing the Sprint Backlog.</simpara>
<simpara>What should you, as the Scrum Master, do?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Change the Definition of Done and negotiate the quality standard with the Product Owner to ensure all Sprint Backlog items are completed before the end of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. While the Sprint is ongoing, have the Product Owner and the developers negotiate the scope of the work being done so as not to endanger the Sprint Goal.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Scale out and assign some of the Sprint Backlog items to an external Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Inform the Product Owner prior to the Sprint Review so the stakeholders won&#8217;t be disappointed.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_6_7">
<title>Question 6</title>
<simpara>The Scrum team needs to hire an outside specialist, external to the Scrum team, to deliver wireframes needed to meet the Definition of Done. Some of the developers have complained to you in confidence about the outside specialist.</simpara>
<simpara>What are your main concerns in this situation?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. You are concerned that this may impact the velocity of software development.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. You are concerned that team members are coming to you with complaints rather than figuring out a solution themselves within the team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. You are concerned about the ability of the development team to produce a fully integrated Increment when the Definition of Done depends on work produced by someone outside of the Scrum team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. You are worried that there will be software developers sitting idle while work is outsourced.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_7_7">
<title>Question 7</title>
<simpara>If the company you work for does not have an organizational standard that defines the Definition of Done, whose responsibility is it to provide a definition before development begins?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The development team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Team, which includes the Scrum Master and Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Definition of Done is formed from a consensus between the Scrum Master and the Product Owner</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_8_7">
<title>Question 8</title>
<simpara>Under which circumstance can the Scrum Master extend the length of the Sprint once the Sprint has started?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint can be extended equal to the number of days a Product Owner is absent</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint can be extended equal to the number of holidays that occurred during the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint length can be changed any time prior to the end of the Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Sprint length cannot be changed after a Sprint has started</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_9_7">
<title>Question 9</title>
<simpara>Which of the following Scrum events are time-boxed to limit the amount of time spent on them?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Standup Meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Release Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint Retrospective.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Stakeholder Meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Sprint Zero.</simpara>
</listitem>
<listitem>
<simpara>&#10063; G. The Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_10_7">
<title>Question 10</title>
<simpara>Which of the following is true about the Product Owner&#8217;s attendance at the Daily Scrum?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; B. The Product Owner must always attend the Daily Scrum to help remove any impediments that exist that jeopardize the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner must always attend the Daily Scrum so they can quickly answer any questions the Scrum Developers have about items they are working on.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner must always attend the Daily Scrum to present the stakeholder&#8217;s point of view.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner doesn&#8217;t need to attend the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_11_3">
<title>Question 11</title>
<simpara>The project has kicked off and the first Sprint was a great success.</simpara>
<simpara>According to the Scrum Guide, when does the second Sprint begin?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Immediately after the Sprint Review for the first Sprint is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Immediately after Sprint Planning for the second Sprint is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The second Sprint begins immediately after the first Sprint is finished.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Scrum Master declares the start of the new Sprint in JIRA.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_12_3">
<title>Question 12</title>
<simpara>Under what circumstances might the decision be made to prematurely terminate a Sprint?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. When a self-managed team of Scrum Developers realizes the work committed to during Sprint planning cannot possibly be delivered by the end of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. When the Sprint Goal no longer makes sense and becomes obsolete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. When the Scrum Development team&#8217;s work needs to be redirected to new opportunities.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Product Owner reprioritized the Product Backlog and PBIs currently under development are no longer priorities.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_13_3">
<title>Question 13</title>
<simpara>Which of the following is not true of the Daily Scrum?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Daily Scrum is used to identify impediments.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Daily Scrum eliminates the need for other meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Daily Scrum is time boxed to 30 minutes.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Daily Scrum encourages quick decision-making.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_14_3">
<title>Question 14</title>
<simpara>Teams sometimes struggle to come up with items to discuss during the Sprint Retrospective.</simpara>
<simpara>Which of the following topics and issues would be worthwhile for a Scrum Team to discuss during a Sprint Retrospective?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Whether the Definition of Done needs to be updated.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Whether the length of the Sprint needs adjusting.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. How to better decompose Product Backlog Items during Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. How to improve communication between on-site and remote workers.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. All of the above.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_15_3">
<title>Question 15</title>
<simpara>The development team failed to complete all the items in the Sprint Backlog before the end of the Sprint. What happens next?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master extends future Sprints by the amount of time it would have required to complete all Sprint Backlog items.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The length of the Sprint remains the same, Sprint Backlog items get returned to the Product Backlog, and the Scrum Team tries to learn and adapt from the experience.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The current Sprint is temporarily extended to allow all Sprint Backlog items to be completed. Insight is garnered at the Sprint Retrospective and the team adapts to avoid this situation in the future.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. There should be one Product Backlog shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. There should be five Product Owners, with each one 100% dedicated to their team.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_16_3">
<title>Question 16</title>
<simpara>Which of the following are key responsibilities of the Scrum Master on a Scrum Team?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master helps employees and stakeholders understand and enact an empirical approach for complex work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master assigns Product Backlog items to developers when they are idle.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master helps those outside the Scrum team understand Scrum and how to interact with teams that employ the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Scrum Master ensures that all Scrum events are kept within the timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Scrum Master shows stakeholders the features that have met the Definition of Done during the Sprint.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_17_3">
<title>Question 17</title>
<simpara>The development team can&#8217;t agree whether to use Java or Python to develop microservices for their current project.</simpara>
<simpara>How can the Scrum Master help the Scrum Team resolve an internal disagreement about whether to build in Java or Python?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the developers consult an external, impartial expert on the topic and agree to go with the external expert&#8217;s decision.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Have the development team argue both sides to the Scrum Master and have the Scrum Master come to a final, impartial decision.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Use coaching techniques like reflective listening and visualization to help guide the entire development team towards building a consensus.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Teach the development team about collaboriate techniques to build consensus, such as actively listening to others.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_18_3">
<title>Question 18</title>
<simpara>Corporate stakeholders are very busy, as multiple projects are going online this quarter.</simpara>
<simpara>The stakeholders have asked to attend every-other Sprint Review to minimize the number of meetings on their calendars. How do you as a Scrum Master respond?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Coach the stakeholders and the team on how to make the meetings more productive and positive.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Agree with the request of the stakeholders, as reducing meetings is in line with Agile principles.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Educate stakeholders on the importance of Sprint Reviews and work to facilitate more engaging Sprint Reviews.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Consult privately with the Product Owner and see if they will agree to fewer meetings.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_19_3">
<title>Question 19</title>
<simpara>Which of the following actions should the Scrum Master never do?
(Choose 4)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Tell the Scrum Developers how to manage their workloads.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Extend the length of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. End the Sprint early.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Coach the Development Team to ensure the Daily Scrum is time-boxed to 15 minutes.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Reprimand developers who underperform.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_20_3">
<title>Question 20</title>
<simpara>The developers are new to Scrum and they&#8217;ve asked you, an experienced Scrum Master, who should start, lead and manage the Daily Scrum. How do you respond?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Explain that the most senior developer on the team should start and lead the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Explain that the most senior developer on the team leads the Daily Scrum while the most junior developer speaks first</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Explain that the team lead leads the Daily Scrum while the most senior developer speaks first</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Explain how the developers can choose whatever structure they want for the Daily Scrum, so who starts it is up to them.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Explain that Scrum is hierarchy-less and it doesn&#8217;t require any specific individual to 'lead' during the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_21_3">
<title>Question 21</title>
<simpara>What does the slope of the line in a burndown chart demonstrate?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The percentage of the budget consumed by the project over time.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The number of Story Ponts needed per Sprint needed to complete the project on time.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Changes in the team&#8217;s velocity.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The amout of work has been completed compared to how much work needs to get done.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_22_3">
<title>Question 22</title>
<simpara>When is a Product Backlog item (PBI) considered fully complete and ready for release?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A Product Backlog item is complete when a Quality Assurance team verifies that the work passes all acceptance criteria, making it ready for release</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. A Product Backlog item is complete when all work in the Sprint Backlog related to the item is finished, making it ready for release</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A Product Backlog item is complete when further Increments of Work on it are no longer possible, making it ready for release.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Product Backlog items are never officially complete until the Product Goal is achieved.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_23_3">
<title>Question 23</title>
<simpara>What are the skills and capabilities the Developers on the Scrum Team should have in order to ensure effective performance throughout the Sprint?</simpara>
<simpara>(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The ability to decompose Product Backlog items (PBIs) and progressively create Increments of Work until a functional release is possible.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The ability to perform all of the core software development work, with the exception of any specialized testing that would require additional tools and staging environments.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The ability to complete a development project within budget and within the timeline agreed upon with the Product Owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The ability to take direction from the Scrum Master and complete Product Backlog items assigned to them by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_24_3">
<title>Question 24</title>
<simpara>The Scrum Guide very briefly mentions burn-down and burn-up charts.</simpara>
<simpara>What does a trend line displayed on a burndown chart indicate about the team&#8217;s progress?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. How quickly the team is 'burning through' money budgeted for the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. How quickly other Scrum teams on the same project are 'burning through' Product Backlog items compared to your team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The amount of work remaining plotted against time, which shows shows when the project will finish if nothing changes with the Product Owner, Product Backlog items or the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. How quickly the project will be completed if Product Backlog items are slowly removed by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_25_3">
<title>Question 25</title>
<simpara>The Product Owner often has no idea how complicated or complex a Product Backlog item will be to build.</simpara>
<simpara>Whose responsibility is it to decompose long, epic, Product Backlog items into work easily digestible work items that should take a day or less to complete?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Business Analysts</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Team Lead</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Developers on the team</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_26">
<title>Question 26</title>
<simpara>The team&#8217;s developers are amazing! Maybe too amazing?</simpara>
<simpara>It&#8217;s not even half-way through the Sprint and the developers are telling you, the Scrum Master, that they have not selected enough items for the Sprint. Everything is practically done, which will result in developers being underutilized with nothing to do for the rest of the Sprint.</simpara>
<simpara>What should the Scrum Master do?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. End the Sprint and reconvene a new Sprint Planning meeting.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Have the Product Owner add new Product Backlog items to the Sprint Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Create a more rigorous Definition of Done so that quality will improve and it will require more work to complete the items currently in the Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the developers adapt their Sprint Plan, preferably with the help of the Product Owner, and add additional, high-value Product Backlog items to the Sprint Backlog.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_27">
<title>Question 27</title>
<simpara>During every Sprint, the team attempts to create at least one Increment to present to stakeholders during the Sprint Review.</simpara>
<simpara>Why might a Product Owner refuse to immediately release an Increment into production after a successful Sprint Review?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Increments are automatically released into production so it is not possible to refuse a release.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner needs confirmation from the Scrum Master in order to release an increment into production.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The immediate timing of the release does not make sense for customers or stakeholders.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner never refuses to release an Increment into production.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_28">
<title>Question 28</title>
<simpara>Sprint Planning is the first of the four time-boxed events to happen during the Sprint.</simpara>
<simpara>According to the Scrum Guide, which topics are to be addressed by the Scrum Team during Sprint Planning?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Who on the team will be assigned various Product Backlog items?</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Why is the Sprint valuable?</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. What can be done during the Sprint?</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Why were certain Sprint Backlog items not completed in the prior Sprint?</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. When will infrastructure required for deployment will be ready?</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_29">
<title>Question 29</title>
<simpara>Two teams working on the same Product should maintain separate Product Backlogs.
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. False</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_30">
<title>Question 30</title>
<simpara>Who on the Scrum Team has the responsibility of ordering the Product Backlog?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner orders the Product Backlog, with the items that deliver the most value to the stakeholders at the top.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Development Team orders the Product Backlog, with items listed chronologically according to what the development team should logically build first.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master orders the Product Backlog, with the items that the Product Owner says will deliver the most value to the stakeholders at the top.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner orders the Product Backlog, with items listed chronologically according to what the development team should logically build first.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_31">
<title>Question 31</title>
<simpara>What should be done with a Product Backlog item (PBI) that did not meet the Scrum Team&#8217;s agreed upon Definition of Done by the end of a Sprint?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Return the item to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. With the consent of the Product Owner and stakeholders, the PBI can be approved and released.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Automatically add the unfinished PBI to the next Sprint&#8217;s backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Make sure the team knows that work on this PBI will not be included in the current Sprint&#8217;s Increment.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_32">
<title>Question 32</title>
<simpara>According to the Scrum Guide, which two of the following statements is true about the Product Owner?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner may delegate the creation of Product Backlog items to an associate.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner may be a committee or collection of individuals who collaboratively perform the role.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The organization must fully respect and trust the independent decisions of the Product Owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner should coach the developers in self-management and cross-functionality.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Product Owner must attend and participate in the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_33">
<title>Question 33</title>
<simpara>You are building a limo for a head of state, and security and protection of the occupant are two important, non-functional requirements that must be prioritized at every step in the development process.</simpara>
<simpara>What is the best way to ensure security and protection of the occupant are prioritized?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Outsource security and protection concerns to an external third party that specializes in these areas.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Add a Sprint prior to the release of the car that deals exclusively with security and protection.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Build a special sub-team on the development team that deals exclusively with security and protection of the occupant.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Have the Product Owner add the features that pertain to security and protection of the occupant to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Add concerns related to the security and protection of the occupant to the Definition of Done.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_34">
<title>Question 34</title>
<simpara>For an Increment of work to be demonstrated to the stakeholders at the Sprint Review, it must be:
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Valuable</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Paid for</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Peer reviewed</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Usable</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Compatible with past Increments</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_35">
<title>Question 35</title>
<simpara>You, the Scrum Master, have been told that the quality assurance (QA) tests performed by an external team have been delayed, and due to this delay, it&#8217;s unlikely the Definition of Done will be achieved before the end of this 3-week Sprint. However, if the Sprint was extended a week, the QA work would likely be done.</simpara>
<simpara>How would you proceed as a Scrum Master? (Choose 2)
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Extend the Sprint a week to allow QA team to complete their work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Investigate why the Scrum Team does not have all the cross-functional skills to achieve the Definition of Done without an external QA team</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Remove QA work from the Definition of Done for this Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Explain to the organization that Scrum is not designed to manage the work performed by people external to the Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Turn the next Sprint into a 'Performance and Security' sprint and focus on these two non-functional aspects of the code.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_36">
<title>Question 36</title>
<simpara>What are the two primary responsibilities of a new Product Owner when taking ownership of a product that is currently under development with a long history of multiple, successful Sprints?
(Choose 2)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Ensuring that the development teams know which Product Backlog items provide the greatest value and should be developed first</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Describing and fully decomposing product features in Use Case and story form.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Providing detailed development specs and guidelines to the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Interacting with stakeholders to learn how to represent their needs in the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Creating both functional and non-functional tests to validate the Increment meets the definition of Done.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_37">
<title>Question 37</title>
<simpara>Scrum doesn&#8217;t work if there isn&#8217;t buy-in from the entire organization, including management.</simpara>
<simpara>How do members of the management group in an organization that sponsors a development project support a Scrum Team?
(Choose 3)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The organization empowers the Scrum Team to manage their own work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The organization responds quickly to daily status updates from the Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The organization must provide Scrum Teams with resources that allow for continual improvement.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The organization fully respects and trusts the Product Owner&#8217;s decisions.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_38">
<title>Question 38</title>
<simpara>Self-organization and self-management are two important attributes of a Scrum Team.</simpara>
<simpara>What is most important criteria for developers to think about when they self-organize into development teams?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Does each team have a strong and competent team lead?</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Is there a good balance of senior and junior developers?</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Will each team be able to form a sub-group for QA and testing?</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Will the team have the cross-functional skills needed to build the product?</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_39">
<title>Question 39</title>
<simpara>When should new developers be added to a Scrum team?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. During Sprint Zero the team size should be set for the duration of the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. After the current Sprint ends but before the next Sprint begins.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. When hiring a new developer will help development continue at a sustainable pace.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Project Manager provides enough budget money for a new developer.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_question_40">
<title>Question 40</title>
<simpara>Scrum practitioners are encouraged to focus on the current Sprint, and while the Product Goal should always be 'top of mind', Scrum does not plan two or three Sprints into the future. This is an example of which Scrum value?
(Choose 1)</simpara>
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Courage.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Respect.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Focus.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Openness.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Honesty.</simpara>
</listitem>
</itemizedlist>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
<section xml:id="_answers_4">
<title>Answers</title>
<section xml:id="_answer_1_3">
<title>Answer 1</title>
<sidebar>
<para xml:id="query">
<simpara>Half way through the Sprint the development team has become uncomfortable with the Sprint Goal and feels a change needs to be made to bring it in line with the Sprint Plan.</simpara>
<simpara>According to the Scrum Guide, when can the Sprint Goal be changed or adjusted?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint Goal can be changed or adjusted any time the Product Goal is changed or adjusted.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint Goal can be changed or adjusted any time during the Daily Scrum.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. A Sprint Goal can be changed or adjusted any time during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Sprint Goal must be finalized before the end of Sprint Planning and it cannot be changed throughout the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Sprint Goal must be finalized before the development Sprint starts and it cannot be changed throughout the Sprint.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>The Sprint Goal must be finalized before the end of Sprint Planning and it cannot be changed throughout the Sprint.</simpara>
<simpara>According to the Scrum Guide, "the whole Scrum Team then collaborates to define a Sprint Goal that communicates why the Sprint is valuable to stakeholders. The Sprint Goal must be finalized prior to the end of Sprint Planning."</simpara>
</para>
</section>
<section xml:id="_answer_2_3">
<title>Answer 2</title>
<sidebar>
<para xml:id="query">
<simpara>As the Scrum Master, it is clear to you that the Sprint Goal is not going to be reached if the Sprint Backlog isn&#8217;t adjusted and new items aren&#8217;t added.</simpara>
<simpara>In Scrum, who has the right to add items to the Sprint Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Product Owner prioritizes Product Backlog items and has the authority to add items to the Sprint Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The development team owns the Sprint Backlog and can add items to it at any time during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Both the Scrum Master and the developers can add to the Sprint Backlog if  changes need to be made to keep the Sprint Goal in focus.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Anyone on the Scrum Team can add or remove items from the Sprint Backlog.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>The development team has full control over the Sprint Backlog. Only the development team has the authority to add or remove Sprint Backlog items.</simpara>
<simpara>Anyone can discuss the Sprint Backlog with the development team and relay any concerns to them, but it is the development team that has the final say.</simpara>
</para>
</section>
<section xml:id="_answer_3_3">
<title>Answer 3</title>
<sidebar>
<para xml:id="query">
<simpara>How might a Scrum Master help the Scrum Team resolve an internal disagreement that has caused inter-personal conflicts between team members.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Use various coaching and facilitation techniques such as open feedback and active listening.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Involve everyone on the team of Scrum Developers in forming a resolution that is in line with the Scrum values.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Ask an external consultant on the production team to determine the most sensible path forward.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Incorporate the Human Resources department to help resolve any inter-personal conflicts that have arisen.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Coach the team on maintaining a psychologically safe environment for all participants.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, B and E.</simpara>
<para xml:id="explanation">
<simpara>A Scrum Team is expected to be cross-functional and have all the skills needed to address issues that arise. The team should be able to make independent decisions without consulting external specialists.</simpara>
<simpara>A self-managed, cross-functional team is also expected to resolve conflicts on their own. From the Scrum perspective, and certainly on the Scrum Master certification exam, going to Human Resources to resolve a problem is not a prescribed approach. The Scrum Guide never mentions the term "Human Resources.'</simpara>
<simpara>A Scrum Master coaches and facilitates in order to help the development team come to their own conclusions and find paths to help them move forward.</simpara>
</para>
</section>
<section xml:id="_answer_4_3">
<title>Answer 4</title>
<sidebar>
<para xml:id="query">
<simpara>Accodring to the Scrum Guide, which of the following are duties of a Scrum Master?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Participating as an equal member of the Scrum team while also acting as a leader who serves.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Assigning action items for team members to complete during the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Communicating the development team&#8217;s answers to stakeholder questions through transcription, email or direct communication.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Taking dictation during the Daily Scrum and reporting discussions that take place during the Daily Scrum back to management.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Scheduling meetings and booking conference rooms for the team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Guide says the Scrum Master is a leader who serves. Note that it does not say the Scrum Master is a 'servant-leader.'</simpara>
<simpara>'Leader who serves' is the new terminology.</simpara>
</para>
</section>
<section xml:id="_answer_5_3">
<title>Answer 5</title>
<sidebar>
<para xml:id="query">
<simpara>The development team bit off more than it could chew during Sprint Planning.</simpara>
<simpara>They&#8217;ve just told you, the Scrum Master, that there&#8217;s no way they are even going to come close to completing the Sprint Backlog.</simpara>
<simpara>What should you, as the Scrum Master, do?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Change the Definition of Done and negotiate the quality standard with the Product Owner to ensure all Sprint Backlog items are completed before the end of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. While the Sprint is ongoing, have the Product Owner and the developers negotiate the scope of the work being done so as not to endanger the Sprint Goal.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Scale out and assign some of the Sprint Backlog items to an external Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Inform the Product Owner prior to the Sprint Review so the stakeholders won&#8217;t be disappointed.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>It&#8217;s not unusual to have a Sprint go sideways. When that happens, the Scrum Team has to adapt.</simpara>
<simpara>It&#8217;s acceptable to clarify and negotiate scope during a Sprint. According to the Scrum Guide:</simpara>
<simpara>During the Sprint:</simpara>
<itemizedlist>
<listitem>
<simpara>No changes are made that would endanger the Sprint Goal;</simpara>
</listitem>
<listitem>
<simpara>Quality does not decrease;</simpara>
</listitem>
<listitem>
<simpara>The Product Backlog is refined as needed; and,</simpara>
</listitem>
<listitem>
<simpara>Scope may be clarified and renegotiated with the Product Owner as more is learned.</simpara>
</listitem>
</itemizedlist>
</para>
</section>
<section xml:id="_answer_6_3">
<title>Answer 6</title>
<sidebar>
<para xml:id="query">
<simpara>The Scrum team needs to hire an outside specialist, external to the Scrum team, to deliver wireframes needed to meet the Definition of Done. Some of the developers have complained to you in confidence about the outside specialist.</simpara>
<simpara>What are your main concerns in this situation?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. You are concerned that this may impact the velocity of software development.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. You are concerned that team members are coming to you with complaints rather than figuring out a solution themselves within the team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. You are concerned about the ability of the development team to produce a fully integrated Increment when the Definition of Done depends on work produced by someone outside of the Scrum team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. You are worried that there will be software developers sitting idle while work is outsourced.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B and C.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Team should have all the skills required to meet the Definition of Done (DoD). If the DoD depends on work performed outside of the team, there is no control over it and it jeopardizes the team&#8217;s ability to create a full Increment.</simpara>
<simpara>The development team should also be self-organized and self-managed. Openness and transparency may be problematic if developers are complaining to the Scrum Master in confidence.</simpara>
</para>
</section>
<section xml:id="_answer_7_3">
<title>Answer 7</title>
<sidebar>
<para xml:id="query">
<simpara>If the company you work for does not have an organizational standard that defines the Definition of Done, whose responsibility is it to provide a definition before development begins?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The development team</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Scrum Team, which includes the Scrum Master and Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Definition of Done is formed from a consensus between the Scrum Master and the Product Owner</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>According to the Scrum Guide:</simpara>
<simpara>"If the Definition of Done for an increment is part of the standards of the organization, all Scrum Teams must follow it as a minimum.</simpara>
<simpara>If it is not an organizational standard, the Scrum Team must create a Definition of Done appropriate for the product."</simpara>
<simpara>In Scrum, the Definition of Done (DoD) is a shared understanding of what it means for a Product Backlog item to be considered complete and ready to be integrated into the product. The Scrum Team, which includes the Product Owner, the development team and the Scrum Master, collaborates to create the Definition of Done if an organizational standard for the DoD does not already exist.</simpara>
<simpara>Ultimately, the Definition of Done should be agreed upon by the entire Scrum Team and should reflect the standards and expectations for delivering a high-quality product to the customer.</simpara>
</para>
</section>
<section xml:id="_answer_8_3">
<title>Answer 8</title>
<sidebar>
<para xml:id="query">
<simpara>Under which circumstance can the Scrum Master extend the length of the Sprint once the Sprint has started?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Sprint can be extended equal to the number of days a Product Owner is absent</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Sprint can be extended equal to the number of holidays that occurred during the Sprint</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Sprint length can be changed any time prior to the end of the Sprint Planning meeting</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Sprint length cannot be changed after a Sprint has started</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>Once a Sprint has started, the Sprint length cannot be changed.</simpara>
<simpara>Changes to the length of the Sprint should be agreed upon by a consensus of the team.</simpara>
<simpara>The best time to discuss changing the length of the Sprint is during the Sprint Retrospective. Any changes made to the Sprint length during a Sprint would apply only to future Sprints, not the current Sprint.</simpara>
</para>
</section>
<section xml:id="_answer_9_3">
<title>Answer 9</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following Scrum events are time-boxed to limit the amount of time spent on them?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Standup Meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Release Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Sprint Retrospective.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Stakeholder Meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10063; F. Sprint Zero.</simpara>
</listitem>
<listitem>
<simpara>&#10003; G. The Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are C, D and G.</simpara>
<para xml:id="explanation">
<simpara>The Sprint Retrospective is a time-boxed event that occurs at the end of each Sprint and allows the team to reflect on their processes and identify areas for improvement.</simpara>
<simpara>Sprint Planning is also time-boxed and occurs at the beginning of each Sprint, allowing the team to plan and prioritize their work for the upcoming Sprint.</simpara>
<simpara>The Daily Scrum is another time-boxed event that occurs daily during the Sprint and allows the team to synchronize their work and plan for the day.</simpara>
<simpara>Options A, B, E, and F are not correct because they are not Scrum events. They may be performed by some Scrum Teams, but they are not discussed at all in the Scrum Guide.</simpara>
</para>
</section>
<section xml:id="_answer_10_3">
<title>Answer 10</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following is true about the Product Owner&#8217;s attendance at the Daily Scrum?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; B. The Product Owner must always attend the Daily Scrum to help remove any impediments that exist that jeopardize the Sprint Goal</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner must always attend the Daily Scrum so they can quickly answer any questions the Scrum Developers have about items they are working on.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Product Owner must always attend the Daily Scrum to present the stakeholder&#8217;s point of view.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Product Owner doesn&#8217;t need to attend the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>The Product Owner does not participate in the the Daily Scrum, nor are they required to attend it. They only participate in the Daily Scrum at the behest of the Scrum Developers.</simpara>
<simpara>Not even the Scrum Master is required to attend the Daily Scrum.</simpara>
<simpara>The Daily Scrum is for the development team.</simpara>
<simpara>Unless the Scrum Master or Product Owner is actually doing development for some reason and acting as a developer working on a backlog item, then they should not participate in the Daily Scrum. The Daily Scrum is for the developers only.</simpara>
</para>
</section>
<section xml:id="_answer_11_3">
<title>Answer 11</title>
<sidebar>
<para xml:id="query">
<simpara>The project has kicked off and the first Sprint was a great success.</simpara>
<simpara>According to the Scrum Guide, when does the second Sprint begin?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Immediately after the Sprint Review for the first Sprint is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Immediately after Sprint Planning for the second Sprint is completed.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The second Sprint begins immediately after the first Sprint is finished.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Scrum Master declares the start of the new Sprint in JIRA.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>All Scrum Events happen with a Sprint. Nothing happens 'outside of a Sprint'.</simpara>
<simpara>When the Sprint Retrospective finishes, the current Sprint ends. The next Sprint begins immediately after.</simpara>
</para>
</section>
<section xml:id="_answer_12_3">
<title>Answer 12</title>
<sidebar>
<para xml:id="query">
<simpara>Under what circumstances might the decision be made to prematurely terminate a Sprint?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. When a self-managed team of Scrum Developers realizes the work committed to during Sprint planning cannot possibly be delivered by the end of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. When the Sprint Goal no longer makes sense and becomes obsolete.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. When the Scrum Development team&#8217;s work needs to be redirected to new opportunities.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Product Owner reprioritized the Product Backlog and PBIs currently under development are no longer priorities.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>When the Sprint Goal becomes obsolete the Product Owner can canel the Sprint.</simpara>
<simpara>In Scrum, the Sprint Goal is a short statement that describes what the Development Team intends to achieve during the Sprint. It provides focus and direction to the team and helps to ensure that all members are working towards a common objective. The Sprint Goal is set during Sprint Planning and remains unchanged throughout the Sprint.</simpara>
<simpara>If the Sprint Goal becomes obsolete, it means that the objective that the Scrum Developers set for the Sprint is no longer relevant. This can happen for a variety of reasons, such as changes in the business environment or new information that makes the Sprint Goal irrelevant. Essentially, something happened that makes working towards the Sprint Goal a complete waste of time.</simpara>
<simpara>When the Sprint Goal becomes obsolete, the Scrum framework allows for the Sprint to be cancelled by the Product Owner.</simpara>
<simpara>It is important to note that cancelling a Sprint is not a decision that should be taken lightly. If Sprints are cancelled frequently, it can indicate deeper problems with the project that need to be addressed.</simpara>
</para>
</section>
<section xml:id="_answer_13_3">
<title>Answer 13</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following is not true of the Daily Scrum?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Daily Scrum is used to identify impediments.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Daily Scrum eliminates the need for other meetings.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Daily Scrum is time boxed to 30 minutes.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Daily Scrum encourages quick decision-making.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>The Daily Scrum is time boxed to 15 minutes, not 30 minutes.</simpara>
<simpara>From the Scrum Guide: "The Daily Scrum is a 15-minute event for the Developers of the Scrum Team.</simpara>
<simpara>Daily Scrums improve communications, identify impediments, promote quick decision-making, and consequently eliminate the need for other meetings."</simpara>
</para>
</section>
<section xml:id="_answer_14_3">
<title>Answer 14</title>
<sidebar>
<para xml:id="query">
<simpara>Teams sometimes struggle to come up with items to discuss during the Sprint Retrospective.</simpara>
<simpara>Which of the following topics and issues would be worthwhile for a Scrum Team to discuss during a Sprint Retrospective?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Whether the Definition of Done needs to be updated.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Whether the length of the Sprint needs adjusting.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. How to better decompose Product Backlog Items during Sprint Planning.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. How to improve communication between on-site and remote workers.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. All of the above.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is E.</simpara>
<para xml:id="explanation">
<simpara>All of these topics are commonly discussed in the Sprint Retrospective.</simpara>
<simpara>From the Scrum Guide: "[During the Sprint Retrospective,] the Scrum Team inspects how the last Sprint went with regards to individuals, interactions, processes, tools, and their Definition of Done. Inspected elements often vary with the domain of work."</simpara>
</para>
</section>
<section xml:id="_answer_15_3">
<title>Answer 15</title>
<sidebar>
<para xml:id="query">
<simpara>The development team failed to complete all the items in the Sprint Backlog before the end of the Sprint. What happens next?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Scrum Master extends future Sprints by the amount of time it would have required to complete all Sprint Backlog items.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. The length of the Sprint remains the same, Sprint Backlog items get returned to the Product Backlog, and the Scrum Team tries to learn and adapt from the experience.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The current Sprint is temporarily extended to allow all Sprint Backlog items to be completed. Insight is garnered at the Sprint Retrospective and the team adapts to avoid this situation in the future.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. There should be one Product Backlog shared across all teams.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. There should be five Product Owners, with each one 100% dedicated to their team.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>There is no changing the Sprint length.</simpara>
<simpara>It&#8217;s not uncommon for some Sprint Backlog items to go uncompleted. They just go back into the Product Backlog.</simpara>
<simpara>The team should discuss why their estimates were off during the Sprint Retrospective. The Scrum Team should turn the situation into a learning experience and adapt accordingly.</simpara>
</para>
</section>
<section xml:id="_answer_16_3">
<title>Answer 16</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following are key responsibilities of the Scrum Master on a Scrum Team?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Scrum Master helps employees and stakeholders understand and enact an empirical approach for complex work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Scrum Master assigns Product Backlog items to developers when they are idle.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The Scrum Master helps those outside the Scrum team understand Scrum and how to interact with teams that employ the Scrum framework.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The Scrum Master ensures that all Scrum events are kept within the timebox.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Scrum Master shows stakeholders the features that have met the Definition of Done during the Sprint.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and D.</simpara>
<para xml:id="explanation">
<simpara>Key responsibilities of the Scrum Master include removing obstacles for the team of Scrum Developers, protecting the Scrum Team from external interruptions and helping the entire organization enact a lean, empirical approach to problem solving.</simpara>
<simpara>Additionally the Scrum Master ensures that the Scrum process is being followed and encourages self-organization and cross-functionality among the Scrum Team members.</simpara>
</para>
</section>
<section xml:id="_answer_17_3">
<title>Answer 17</title>
<sidebar>
<para xml:id="query">
<simpara>The development team can&#8217;t agree whether to use Java or Python to develop microservices for their current project.</simpara>
<simpara>How can the Scrum Master help the Scrum Team resolve an internal disagreement about whether to build in Java or Python?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Have the developers consult an external, impartial expert on the topic and agree to go with the external expert&#8217;s decision.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Have the development team argue both sides to the Scrum Master and have the Scrum Master come to a final, impartial decision.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Use coaching techniques like reflective listening and visualization to help guide the entire development team towards building a consensus.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Teach the development team about collaboriate techniques to build consensus, such as actively listening to others.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are C and D.</simpara>
<para xml:id="explanation">
<simpara>Coaching and teaching are important parts of the Scrum Master&#8217;s role as a servant-leader.</simpara>
<simpara>Active listening and open questioning are important skills in effective communication, particularly in Scrum where collaboration and continuous feedback are key. However, there are other techniques and approaches that can also be useful in communication, including:</simpara>
<simpara>Reflective listening: This involves reflecting back what the speaker has said to demonstrate that you understand their message. For example, "So what I hear you saying is that you&#8217;re concerned about the timeline for this project."</simpara>
<simpara>Summarizing: This involves summarizing what has been said to ensure that everyone is on the same page. For example, "Let me make sure I understand - you&#8217;re saying that we need to focus on improving the user experience for this feature."</simpara>
<simpara>Paraphrasing: This involves restating what has been said in your own words to show that you understand and to encourage clarification. For example, "If I&#8217;m understanding you correctly, you&#8217;re suggesting that we approach this problem from a different angle."</simpara>
<simpara>Nonverbal communication: This includes using body language, eye contact, and facial expressions to show that you are engaged and paying attention.</simpara>
<simpara>Visualization: This involves using diagrams, sketches, or other visual aids to help communicate ideas and concepts.</simpara>
<simpara>Silence: Sometimes, allowing a pause in the conversation can give the speaker time to gather their thoughts and provide a more thoughtful response.</simpara>
<simpara>While active listening and open questioning are valuable techniques in communication, incorporating these alternatives can help to build trust and improve collaboration in a Scrum team.</simpara>
</para>
</section>
<section xml:id="_answer_18_3">
<title>Answer 18</title>
<sidebar>
<para xml:id="query">
<simpara>Corporate stakeholders are very busy, as multiple projects are going online this quarter.</simpara>
<simpara>The stakeholders have asked to attend every-other Sprint Review to minimize the number of meetings on their calendars. How do you as a Scrum Master respond?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Coach the stakeholders and the team on how to make the meetings more productive and positive.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Agree with the request of the stakeholders, as reducing meetings is in line with Agile principles.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Educate stakeholders on the importance of Sprint Reviews and work to facilitate more engaging Sprint Reviews.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Consult privately with the Product Owner and see if they will agree to fewer meetings.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and C.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Master should use this opportunity to explain the importance of a Sprint Review and the value the team receives from the stakeholders participating in it.</simpara>
<simpara>Attendance at Scrum events is not optional, nor is running Scrum events as planned. Stakeholders must participate in the Sprint Review.</simpara>
<simpara>As the Scrum Guide states: "The Scrum framework is immutable. While implementing only parts of Scrum is possible, the result is not Scrum. Scrum exists only in its entirety"</simpara>
</para>
</section>
<section xml:id="_answer_19_3">
<title>Answer 19</title>
<sidebar>
<para xml:id="query">
<simpara>Which of the following actions should the Scrum Master never do?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Tell the Scrum Developers how to manage their workloads.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Extend the length of the Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. End the Sprint early.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Coach the Development Team to ensure the Daily Scrum is time-boxed to 15 minutes.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Reprimand developers who underperform.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, B, C and E.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Master is a leader who serves the team and as such, should never <emphasis>tell</emphasis> the developers what to do. The Scrum Master coaches and facilitates and allows developers to discover solutions and solve problems themselves.</simpara>
<simpara>Furthermore, the Scrum Framework does not allow the length of a Sprint to be extended, and only the Product Owner can end a Sprint early.</simpara>
<simpara>The Scrum Master does coach teams about the Scrum Framework, so coaching a team to ensure the 15 minute Daily Scrum timebox is not exceeded is a good use of the Scrum Master&#8217;s time.</simpara>
</para>
</section>
<section xml:id="_answer_20_3">
<title>Answer 20</title>
<sidebar>
<para xml:id="query">
<simpara>The developers are new to Scrum and they&#8217;ve asked you, an experienced Scrum Master, who should start, lead and manage the Daily Scrum. How do you respond?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Explain that the most senior developer on the team should start and lead the Daily Scrum</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Explain that the most senior developer on the team leads the Daily Scrum while the most junior developer speaks first</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Explain that the team lead leads the Daily Scrum while the most senior developer speaks first</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Explain how the developers can choose whatever structure they want for the Daily Scrum, so who starts it is up to them.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Explain that Scrum is hierarchy-less and it doesn&#8217;t require any specific individual to 'lead' during the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are D and E.</simpara>
<para xml:id="explanation">
<simpara>It is up to the developers to decide how to run their Daily Scrum, which includes decisions about who starts it and how it proceeds.</simpara>
<simpara>"The Developers can select whatever structure and techniques they want, as long as their Daily Scrum focuses on progress toward the Sprint Goal and produces an actionable plan for the next day of work. This creates focus and improves self-management."</simpara>
<simpara>Furthermore, there are no 'team leads' or 'junior developers' in the eyes of Scrum.</simpara>
<simpara>According to the Scrum Guide: "Within a Scrum Team, there are no sub-teams or hierarchies. It is a cohesive unit of professionals focused on one objective at a time, the Product Goal."</simpara>
</para>
</section>
<section xml:id="_answer_21_3">
<title>Answer 21</title>
<sidebar>
<para xml:id="query">
<simpara>What does the slope of the line in a burndown chart demonstrate?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The percentage of the budget consumed by the project over time.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The number of Story Ponts needed per Sprint needed to complete the project on time.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Changes in the team&#8217;s velocity.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The amout of work has been completed compared to how much work needs to get done.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>A trend line through a release burndown chart indicates how fast work is being completed relative to the original plan, and can help visualize progress toward completion of the component being graphed, be it a Sprint or a decomposed Product Backlog item.</simpara>
<simpara>The Scrum Guide only makes a short reference to burndown charts, and even then, it says they are not a replacement for empiricism.</simpara>
<simpara>You don&#8217;t need to be a burndown chart expert, but knowing what one is will keep you from being caught off guard on the Scrum certification exam.</simpara>
</para>
</section>
<section xml:id="_answer_22_3">
<title>Answer 22</title>
<sidebar>
<para xml:id="query">
<simpara>When is a Product Backlog item (PBI) considered fully complete and ready for release?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. A Product Backlog item is complete when a Quality Assurance team verifies that the work passes all acceptance criteria, making it ready for release</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. A Product Backlog item is complete when all work in the Sprint Backlog related to the item is finished, making it ready for release</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. A Product Backlog item is complete when further Increments of Work on it are no longer possible, making it ready for release.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Product Backlog items are never officially complete until the Product Goal is achieved.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>A Product Backlog item is complete when all of its features are completed and it is not possible to create any further increments of work on it.</simpara>
<simpara>A Product Backlog item is not necessarily associated with a single Increment of Work. A PBI may last for multiple Sprints, with each Sprint producing an Increment of work that meets a Definition of Done for a given facet of a Product Backlog Item. That&#8217;s why PBIs are decomposed by the development team - to break them up into manageable pieces of work.</simpara>
</para>
</section>
<section xml:id="_answer_23_3">
<title>Answer 23</title>
<sidebar>
<para xml:id="query">
<simpara>What are the skills and capabilities the Developers on the Scrum Team should have in order to ensure effective performance throughout the Sprint?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The ability to decompose Product Backlog items (PBIs) and progressively create Increments of Work until a functional release is possible.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The ability to perform all of the core software development work, with the exception of any specialized testing that would require additional tools and staging environments.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The ability to complete a development project within budget and within the timeline agreed upon with the Product Owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The ability to take direction from the Scrum Master and complete Product Backlog items assigned to them by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>The Scrum Development team must be able to decompose a PBI and create as many Increments of Work that are necessary to complete the PBI and make the item ready for release.</simpara>
<simpara>A Product Backlog Item (PBI) is often very <emphasis>high-level</emphasis> description of a feature or a function. The Product Owner will know what they want, but they won&#8217;t always know how to 'get there.'</simpara>
<simpara>For example, maybe a Product Owner wants to build a house. They are unlikely to have anything in the Product Backlog about pouring a foundation or connecting to the main sewage line. Those are details the Scrum Developers will have to flush out as they decompose the Product Backlog items.</simpara>
<simpara>Decomposing a PBI means breaking it down into smaller, more manageable pieces of work that can be completed by the Scrum development team during a Sprint. The goal is to decompose Product Backlog items down into units of work that can be accomplished in a single day.</simpara>
<simpara>The process of decomposing a PBI involves analyzing it in more detail, identifying the sub-tasks, dependencies, and other factors involved, and then creating smaller Product Baclkog items that can be individually prioritized, estimated, and worked on by the team. This allows the team to better understand the requirements of the PBI and the work involved, which in turn helps with planning and delivering the work effectively.</simpara>
<simpara>Decomposition is an ongoing process throughout the Scrum framework.</simpara>
<simpara>As the team progresses through the Sprint, they may discover additional details or dependencies that require further decomposition of Product Baclkog items, or they may need to adjust their plan based on feedback from stakeholders or changes in the product&#8217;s requirements. By continually decomposing Product Baclkog items, the team can ensure they have a clear understanding of the work involved and can prioritize, estimate, and deliver the product backlog items more effectively.</simpara>
</para>
</section>
<section xml:id="_answer_24_3">
<title>Answer 24</title>
<sidebar>
<para xml:id="query">
<simpara>The Scrum Guide very briefly mentions burn-down and burn-up charts.</simpara>
<simpara>What does a trend line displayed on a burndown chart indicate about the team&#8217;s progress?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. How quickly the team is 'burning through' money budgeted for the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. How quickly other Scrum teams on the same project are 'burning through' Product Backlog items compared to your team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The amount of work remaining plotted against time, which shows shows when the project will finish if nothing changes with the Product Owner, Product Backlog items or the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. How quickly the project will be completed if Product Backlog items are slowly removed by the Product Owner.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>Don&#8217;t worry too much about burn-down charts, as they are only briefly mentioned in the Scrum Guide. But they are used quite a bit by teams who use tools like JIRA for Scrum management.</simpara>
<simpara>"Various practices exist to forecast progress, like burn-downs, burn-ups, or cumulative flows. While
proven useful, these do not replace the importance of empiricism." - The Scrum Guide.</simpara>
<simpara>A trend line displayed on a release burndown chart indicates the progress of a project over time. The release burndown chart is a visual representation of the amount of work remaining to complete a project, plotted against time. The trend line is a line that is fitted to the actual data points on the chart, and it represents the expected progress of the project if it were to continue at the same rate as it has been progressing up to that point in time.</simpara>
<simpara>If the trend line is sloping downwards, it indicates that the project is progressing at a rate that is consistent with the plan, and the work is being completed on schedule. If the trend line is sloping upwards, it indicates that the project is falling behind schedule, and the work is not being completed at the expected rate.</simpara>
<simpara>It is important to note that the trend line is a projection based on past performance, and it may not accurately predict the future progress of the project. It is a predictor, but it is not an empirical measure. Therefore, it is important to regularly review and update the release burndown chart to ensure that the project is on track to meet its goals.</simpara>
</para>
</section>
<section xml:id="_answer_25_3">
<title>Answer 25</title>
<sidebar>
<para xml:id="query">
<simpara>The Product Owner often has no idea how complicated or complex a Product Backlog item will be to build.</simpara>
<simpara>Whose responsibility is it to decompose long, epic, Product Backlog items into work easily digestible work items that should take a day or less to complete?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. The Business Analysts</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Team Lead</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. The Developers on the team</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is E.</simpara>
<para xml:id="explanation">
<simpara>Breaking Product Backlog Items into smaller work items is the job of the developers on the team.</simpara>
<simpara>"For each selected Product Backlog item, the Developers plan the work necessary to create an Increment that meets the Definition of Done.</simpara>
<simpara>This is often done by decomposing Product Backlog items into smaller work items of one day or less. How this is done is at the sole discretion of the Developers.</simpara>
<simpara>Noone else tells them how to turn Product Backlog items into Increments of value."</simpara>
</para>
</section>
<section xml:id="_answer_26">
<title>Answer 26</title>
<sidebar>
<para xml:id="query">
<simpara>The team&#8217;s developers are amazing! Maybe too amazing?</simpara>
<simpara>It&#8217;s not even half-way through the Sprint and the developers are telling you, the Scrum Master, that they have not selected enough items for the Sprint. Everything is practically done, which will result in developers being underutilized with nothing to do for the rest of the Sprint.</simpara>
<simpara>What should the Scrum Master do?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. End the Sprint and reconvene a new Sprint Planning meeting.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Have the Product Owner add new Product Backlog items to the Sprint Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Create a more rigorous Definition of Done so that quality will improve and it will require more work to complete the items currently in the Sprint Backlog</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Have the developers adapt their Sprint Plan, preferably with the help of the Product Owner, and add additional, high-value Product Backlog items to the Sprint Backlog.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>If developers complete Sprint Backlog items quickly and become underutilized, they should adapt and add new Product Backlog items to the Sprint Backlog.</simpara>
<simpara>Scrum is pragmatic. Scrum&#8217;s rules allow for simple solutions to problems that arise.</simpara>
<simpara>If developers didn&#8217;t select enough work, then let them select more work. It&#8217;s really that simple.</simpara>
<simpara>Never overcomplicate Scrum.</simpara>
</para>
</section>
<section xml:id="_answer_27">
<title>Answer 27</title>
<sidebar>
<para xml:id="query">
<simpara>During every Sprint, the team attempts to create at least one Increment to present to stakeholders during the Sprint Review.</simpara>
<simpara>Why might a Product Owner refuse to immediately release an Increment into production after a successful Sprint Review?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Increments are automatically released into production so it is not possible to refuse a release.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner needs confirmation from the Scrum Master in order to release an increment into production.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The immediate timing of the release does not make sense for customers or stakeholders.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner never refuses to release an Increment into production.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>If the timing of the release of an Increment is not in the best interest of users or stakeholders, the Product Owner does not need to release it immediately.</simpara>
<simpara>For example, a Christmas Theme for the website might be completed in late October. You wouldn&#8217;t publish the website&#8217;s Christmas theme two months before Christmas.</simpara>
<simpara>Increments don&#8217;t need to be released or published immediately. They can be released when they make the most sense for the organization, stakeholders and customers.</simpara>
</para>
</section>
<section xml:id="_answer_28">
<title>Answer 28</title>
<sidebar>
<para xml:id="query">
<simpara>Sprint Planning is the first of the four time-boxed events to happen during the Sprint.</simpara>
<simpara>According to the Scrum Guide, which topics are to be addressed by the Scrum Team during Sprint Planning?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Who on the team will be assigned various Product Backlog items?</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Why is the Sprint valuable?</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. What can be done during the Sprint?</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Why were certain Sprint Backlog items not completed in the prior Sprint?</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. When will infrastructure required for deployment will be ready?</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, B and C.</simpara>
<para xml:id="explanation">
<simpara>According to the Scrum Guide, a Sprint Planning meeting addresses these three questions:</simpara>
<itemizedlist>
<listitem>
<simpara>Why is this Sprint valuable?</simpara>
</listitem>
<listitem>
<simpara>What can be Done this Sprint?</simpara>
</listitem>
<listitem>
<simpara>How will the chosen work get done?</simpara>
</listitem>
</itemizedlist>
<simpara>Always remember that <emphasis>why, what and how</emphasis> are the questions answered by the end of Sprint Planning.</simpara>
</para>
</section>
<section xml:id="_answer_29">
<title>Answer 29</title>
<sidebar>
<para xml:id="query">
<simpara>Two teams working on the same Product should maintain separate Product Backlogs.</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. True</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. False</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is B.</simpara>
<para xml:id="explanation">
<simpara>This is false.</simpara>
<simpara>Two teams working on the same product will work off the same Product Backlog.</simpara>
<simpara>They will also share the same Product Goal, Definition of Done and Product Owner.</simpara>
</para>
</section>
<section xml:id="_answer_30">
<title>Answer 30</title>
<sidebar>
<para xml:id="query">
<simpara>Who on the Scrum Team has the responsibility of ordering the Product Backlog?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Product Owner orders the Product Backlog, with the items that deliver the most value to the stakeholders at the top.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Development Team orders the Product Backlog, with items listed chronologically according to what the development team should logically build first.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. The Scrum Master orders the Product Backlog, with the items that the Product Owner says will deliver the most value to the stakeholders at the top.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner orders the Product Backlog, with items listed chronologically according to what the development team should logically build first.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is A.</simpara>
<para xml:id="explanation">
<simpara>In the Scrum framework, the Product Owner is responsible for creating and maintaining the Product Backlog, which is an ordered list of features, enhancements, and fixes that the Scrum Team will work on in order to deliver a product Increment.</simpara>
<simpara>The Product Owner prioritizes the items in the Product Backlog based on a variety of factors that relate to how the items bring value to the business. Generally speaking, items that are believed to provide the most value to the product&#8217;s users and customers are placed at the top of the list, and those that are of lower priority are placed towards the bottom.</simpara>
</para>
</section>
<section xml:id="_answer_31">
<title>Answer 31</title>
<sidebar>
<para xml:id="query">
<simpara>What should be done with a Product Backlog item (PBI) that did not meet the Scrum Team&#8217;s agreed upon Definition of Done by the end of a Sprint?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Return the item to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. With the consent of the Product Owner and stakeholders, the PBI can be approved and released.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Automatically add the unfinished PBI to the next Sprint&#8217;s backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Make sure the team knows that work on this PBI will not be included in the current Sprint&#8217;s Increment.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and D.</simpara>
<para xml:id="explanation">
<simpara>Incomplete PBIs not completed in a given Sprint are returned to the Product Backlog.</simpara>
<simpara>They are not automatically added to the next Sprint, as priorities may have changed since the prior round of Sprint Planning took place.</simpara>
<simpara>If a PBI is not completed, it definitely should not be added to the Increment. The Incrememt is only for completed work that meets the DoD.</simpara>
<simpara>The Product Backlog is the ordered list of features, requirements, and other work items that the development team plans to complete over the course of the project. During each Sprint, the team selects a subset of items from the Product Backlog to work on, creating a Sprint Backlog.</simpara>
<simpara>One of the key principles of Scrum is that the team commits to completing the work it selects for the Sprint Backlog within the Sprint. However, if any Product Backlog items are not completed by the end of the Sprint, they are not automatically added to the next Sprint Backlog. Instead, they are returned to the Product Backlog for reprioritization and consideration for future Sprints.</simpara>
</para>
</section>
<section xml:id="_answer_32">
<title>Answer 32</title>
<sidebar>
<para xml:id="query">
<simpara>According to the Scrum Guide, which two of the following statements is true about the Product Owner?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The Product Owner may delegate the creation of Product Backlog items to an associate.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The Product Owner may be a committee or collection of individuals who collaboratively perform the role.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The organization must fully respect and trust the independent decisions of the Product Owner.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. The Product Owner should coach the developers in self-management and cross-functionality.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. The Product Owner must attend and participate in the Daily Scrum.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and C.</simpara>
<para xml:id="explanation">
<simpara>The Product Owner is allowed to delegate certain aspects of their job to others on the team, as the Scrum Guide indicates:</simpara>
<simpara>"The Product Owner &#8230;&#8203; may delegate the responsibility to others. Regardless, the Product Owner remains accountable. For Product Owners to succeed, the entire organization must respect their decisions. These decisions are visible in the content and ordering of the Product Backlog, and through the inspectable Increment at the Sprint Review. The Product Owner is one person, not a committee."</simpara>
<simpara>The organization must also fully trust the decisions of the Product Owner. They must be trusted to make quick decisions about the product so that developers can get fast responses and quickly resolve issues.</simpara>
</para>
</section>
<section xml:id="_answer_33">
<title>Answer 33</title>
<sidebar>
<para xml:id="query">
<simpara>You are building a limo for a head of state, and security and protection of the occupant are two important, non-functional requirements that must be prioritized at every step in the development process.</simpara>
<simpara>What is the best way to ensure security and protection of the occupant are prioritized?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Outsource security and protection concerns to an external third party that specializes in these areas.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Add a Sprint prior to the release of the car that deals exclusively with security and protection.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Build a special sub-team on the development team that deals exclusively with security and protection of the occupant.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Have the Product Owner add the features that pertain to security and protection of the occupant to the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Add concerns related to the security and protection of the occupant to the Definition of Done.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are D and E.</simpara>
<para xml:id="explanation">
<simpara>We don&#8217;t outsource work in Scrum, nor do we create sub-teams.</simpara>
<simpara>From the Scrum Guide: "Scrum Teams are cross-functional, meaning the members have all the skills necessary to create value each Sprint. Within a Scrum Team, there are no sub-teams or hierarchies. It is a cohesive unit of professionals focused on one objective at a time, the Product Goal."</simpara>
<simpara>In Scrum, we deal with non-functional requirements by either adding Product Backlog Items that address these concerns, or we add non-functional criteria to the Definition of Done.</simpara>
</para>
</section>
<section xml:id="_answer_34">
<title>Answer 34</title>
<sidebar>
<para xml:id="query">
<simpara>For an Increment of work to be demonstrated to the stakeholders at the Sprint Review, it must be:</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Valuable</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Paid for</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Peer reviewed</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Usable</simpara>
</listitem>
<listitem>
<simpara>&#10003; E. Compatible with past Increments</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, D and E.</simpara>
<para xml:id="explanation">
<simpara>An Increment must be both valuable, usable, additive and compatible with all past increments.</simpara>
</para>
</section>
<section xml:id="_answer_35">
<title>Answer 35</title>
<sidebar>
<para xml:id="query">
<simpara>You, the Scrum Master, have been told that the quality assurance (QA) tests performed by an external team have been delayed, and due to this delay, it&#8217;s unlikely the Definition of Done will be achieved before the end of this 3-week Sprint. However, if the Sprint was extended a week, the QA work would likely be done.</simpara>
<simpara>How would you proceed as a Scrum Master? (Choose 2)</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Extend the Sprint a week to allow QA team to complete their work.</simpara>
</listitem>
<listitem>
<simpara>&#10003; B. Investigate why the Scrum Team does not have all the cross-functional skills to achieve the Definition of Done without an external QA team</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Remove QA work from the Definition of Done for this Sprint.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Explain to the organization that Scrum is not designed to manage the work performed by people external to the Scrum Team.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Turn the next Sprint into a 'Performance and Security' sprint and focus on these two non-functional aspects of the code.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are B and D.</simpara>
<para xml:id="explanation">
<simpara>A Scrum Team must have all of the skills necessary to complete the Definition of Done. The Scrum Team cannot outsource work that is part of their Definition of Done and still have that work managed through Scrum.</simpara>
<simpara>Extending the Sprint is never an option. The Sprint length is fixed when the Sprint starts.</simpara>
<simpara>The Definition of Done can always be discussed and updated. However, the Scrum Master does not have the right to unilaterally change the Definition of Done, and changes to the Definition of Done are best discussed in the Sprint Retrospective.</simpara>
<simpara>Furthermore, the Definition of Done should not be changed midway through a Sprint to accommodate moving goalposts. Doing so would be antithetical to Scrum.</simpara>
</para>
</section>
<section xml:id="_answer_36">
<title>Answer 36</title>
<sidebar>
<para xml:id="query">
<simpara>What are the two primary responsibilities of a new Product Owner when taking ownership of a product that is currently under development with a long history of multiple, successful Sprints?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. Ensuring that the development teams know which Product Backlog items provide the greatest value and should be developed first</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Describing and fully decomposing product features in Use Case and story form.</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Providing detailed development specs and guidelines to the development team.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Interacting with stakeholders to learn how to represent their needs in the Product Backlog.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Creating both functional and non-functional tests to validate the Increment meets the definition of Done.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A and D.</simpara>
<para xml:id="explanation">
<simpara>The Product Owner must order the Product Backlog so that developers know which items provide the most value. If possible, the Product Owner will negotiate with the team to ensure these items get developed first.</simpara>
<simpara>Also, according to the Scrum Guide, "The Product Owner may represent the needs of many stakeholders in the Product Backlog." So interacting with and collaborating with stakeholders is important.</simpara>
</para>
</section>
<section xml:id="_answer_37">
<title>Answer 37</title>
<sidebar>
<para xml:id="query">
<simpara>Scrum doesn&#8217;t work if there isn&#8217;t buy-in from the entire organization, including management.</simpara>
<simpara>How do members of the management group in an organization that sponsors a development project support a Scrum Team?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; A. The organization empowers the Scrum Team to manage their own work.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. The organization responds quickly to daily status updates from the Scrum Master.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. The organization must provide Scrum Teams with resources that allow for continual improvement.</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. The organization fully respects and trusts the Product Owner&#8217;s decisions.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answers are A, C and D.</simpara>
<para xml:id="explanation">
<simpara>Status updates are antithetical to the Scrum Framework. Scrum provides other artifacts and mechanisms to allow for transparency and openness into the progress of the Scrum Team.</simpara>
<simpara>Providing sufficient input and resources for the Scrum Team to improve, allowing the Scrum Team to manage their own work, and respecting the decisions of the Scrum Master are three concrete ways an organization can support teams that practice the Scrum Framework</simpara>
</para>
</section>
<section xml:id="_answer_38">
<title>Answer 38</title>
<sidebar>
<para xml:id="query">
<simpara>Self-organization and self-management are two important attributes of a Scrum Team.</simpara>
<simpara>What is most important criteria for developers to think about when they self-organize into development teams?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Does each team have a strong and competent team lead?</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Is there a good balance of senior and junior developers?</simpara>
</listitem>
<listitem>
<simpara>&#10063; C. Will each team be able to form a sub-group for QA and testing?</simpara>
</listitem>
<listitem>
<simpara>&#10003; D. Will the team have the cross-functional skills needed to build the product?</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is D.</simpara>
<para xml:id="explanation">
<simpara>There are not subteams, titles or hierarchies on Scrum Teams.</simpara>
<simpara>All that matters when a group of Scrum developers is assembled is whether they have, or do they have the ability to acquire, the cross-functional skills matrix needed to build the product under development and achieve the Product Goal.</simpara>
<simpara>From the Scrum Guide: "Within a Scrum Team, there are no sub-teams or hierarchies. It is a cohesive unit of professionals focused on one objective at a time, the Product Goal. Scrum Teams are cross-functional, meaning the members have all the skills necessary to create value each Sprint. They are also self-managing, meaning they internally decide who does what, when, and how."</simpara>
</para>
</section>
<section xml:id="_answer_39">
<title>Answer 39</title>
<sidebar>
<para xml:id="query">
<simpara>When should new developers be added to a Scrum team?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. During Sprint Zero the team size should be set for the duration of the project.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. After the current Sprint ends but before the next Sprint begins.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. When hiring a new developer will help development continue at a sustainable pace.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. When the Project Manager provides enough budget money for a new developer.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>A new developer can be added to a project at any point in time. There is no rule barring a developer from joining a Scrum team during Sprint Planning, the Sprint Retrospective or even half-way through a Sprint.</simpara>
<simpara>Sustainable development is an important Agile principle. Developers should always be challenged and motivated, but they should never be overworked. If a new developer needs to be added to the team to maintain sustainable developer, then add them.</simpara>
<simpara>Just keep in mind that onboarding will sometimes reduce the team&#8217;s productivity in the short-term, as training and orientation for the new hire will likely occupy some of your developer&#8217;s time.</simpara>
</para>
</section>
<section xml:id="_answer_40">
<title>Answer 40</title>
<sidebar>
<para xml:id="query">
<simpara>Scrum practitioners are encouraged to focus on the current Sprint, and while the Product Goal should always be 'top of mind', Scrum does not plan two or three Sprints into the future. This is an example of which Scrum value?</simpara>
</para>
<para xml:id="list">
<itemizedlist mark="none">
<listitem>
<simpara>&#10063; A. Courage.</simpara>
</listitem>
<listitem>
<simpara>&#10063; B. Respect.</simpara>
</listitem>
<listitem>
<simpara>&#10003; C. Focus.</simpara>
</listitem>
<listitem>
<simpara>&#10063; D. Openness.</simpara>
</listitem>
<listitem>
<simpara>&#10063; E. Honesty.</simpara>
</listitem>
</itemizedlist>
</para>
</sidebar>
<simpara xml:id="answer">The correct answer is C.</simpara>
<para xml:id="explanation">
<simpara>One of the key principles of Scrum is to maintain a clear focus on the current Sprint and avoid distractions from other work that is not part of the Sprint. This principle of focusing on the Sprint is intended to ensure that the team can deliver high-quality work and achieve its Sprint Goal without being sidetracked by other priorities.</simpara>
<simpara>This is also a recognition of the fact that things can change quickly, especially after a Sprint Review or Sprint Retrospective, so planning beyond the current Sprint is often a complete waste of time.</simpara>
<simpara>By not looking beyond the current Sprint, the development team is able to maintain  focus and avoid getting distracted by future work that may not be relevant or may change over time. This helps the team to remain agile and respond quickly to changes in the market or in customer needs, since they are not locked into a fixed plan that may become obsolete.</simpara>
<simpara>Moreover, the Scrum framework provides regular opportunities to inspect and adapt the work done in the current Sprint, and adjust the backlog accordingly. This allows the team to constantly improve the product and respond to feedback from stakeholders.</simpara>
</para>
</section>
</section>
</chapter>
</part>
</book>